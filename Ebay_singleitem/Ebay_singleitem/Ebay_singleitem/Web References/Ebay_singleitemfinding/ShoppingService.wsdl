<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns="urn:ebay:apis:eBLBaseComponents" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns="urn:ebay:apis:eBLBaseComponents" targetNamespace="urn:ebay:apis:eBLBaseComponents" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xs:schema xmlns="urn:ebay:apis:eBLBaseComponents" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:ebay:apis:eBLBaseComponents">
      <xs:complexType name="AbstractRequestType" abstract="true">
        <xs:annotation>
          <xs:documentation>
				Base type definition of the request payload, which can carry any type
				of payload content plus optional versioning information and detail level requirements.
				All concrete request types are derived from the abstract request type.
				The naming convention we use for the concrete type names is the name of the service
				(the verb or call name) followed by "RequestType": VerbNameRequestType
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MessageID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						If you pass a value in MessageID in a request,
						we'll return the same value in CorrelationID in the response.
						If you're making a lot of calls, you can use this for tracking that a
						response is returned for every request and to match
						particular responses to particular requests. (In this case, specify
						a different value for each request.) You can specify any value
						that is useful to you.
					</xs:documentation>
              <xs:appinfo>
                <MaxLength />
                <CallInfo>
                  <AllCalls />
                  <RequiredInput>No</RequiredInput>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AbstractResponseType" abstract="true">
        <xs:annotation>
          <xs:documentation>
				Base type definition of a response payload that can carry any
				type of payload content with following optional elements:&lt;br&gt;
				- timestamp of response message&lt;br&gt;
				- application-level acknowledgement&lt;br&gt;
				- application-level (business-level) errors and warnings
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Timestamp" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>
						This value represents the date and time when eBay processed the
						request. The time zone of this value is &lt;a href="types/simpleTypes.html#dateTime"&gt;GMT&lt;/a&gt;
						and the format is the
						ISO 8601 date and time format (YYYY-MM-DDTHH:MM:SS.SSSZ).
						See the "dateTime" type for information about this
						time format and converting to and from the GMT time zone.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <AllCalls />
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Ack" type="ns:AckCodeType">
            <xs:annotation>
              <xs:documentation>
						Indicates whether the call was successfully processed by eBay.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <AllCalls />
                  <Returned>Always</Returned>
                  <AllValuesExcept>PartialFailure</AllValuesExcept>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Errors" type="ns:ErrorType">
            <xs:annotation>
              <xs:documentation>
						A list of application-level errors or warnings (if any) that were raised
						when eBay processed the request. &lt;br&gt;
						&lt;br&gt;
						Application-level errors occur due to
						problems with business-level data on the client side or on the eBay
						server side. For example, an error would occur if the request contains
						an invalid combination of fields, or it is missing a required field,
						or the value of the field is not recognized. An error could also occur
						if eBay encountered a problem in our internal business logic while
						processing the request.&lt;br&gt;
						&lt;br&gt;
						Only returned if there were warnings or errors.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <AllCalls />
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Build" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						This refers to the particular software build that eBay used when
						processing the request and generating the response. This includes the
						version number plus additional information. eBay Developer Support may
						request the build information when helping you resolve technical issues.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <AllCalls />
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Version" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The release version that eBay used to process the request.
						&lt;br&gt;
						&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
						This is usually the latest release version, as specified in the
						release notes. (eBay releases the API to international sites
						about a week after we release it to the US site.) &lt;/span&gt;&lt;br&gt;
						&lt;br&gt;
						If a field in the response returns the token "CustomCode", it usually
						means that the field is a code type (a token or enumeration),
						and that in your request URL (or HTTP header) you specified a
						version that is older than the version in which the token was added
						to the call.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <AllCalls />
                  <Returned>Always</Returned>
                </CallInfo>
                <SeeLink>
                  <Title>Schema Versioning Strategy</Title>
                  <URL>http://developer.ebay.com/DevZone/XML/docs/HowTo/eBayWS/eBaySchemaVersioning.html</URL>
                </SeeLink>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CorrelationID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						If you pass a value in MessageID in a request, we will return the same
						value in CorrelationID in the response. You can use this for tracking
						that a response is returned for every request and to match particular
						responses to particular requests. Only returned if MessageID was used.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <AllCalls />
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="AckCodeType">
        <xs:annotation>
          <xs:documentation>
				AckCodeType - Type declaration to be used by other schema. This code identifies
				the acknowledgement code types that eBay could use to communicate the status of
				processing a (request) message to an application. This code would be used as part
				of a response message that contains an application-level acknowledgement element.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Success">
            <xs:annotation>
              <xs:documentation>
						(out) Request processing succeeded
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Failure">
            <xs:annotation>
              <xs:documentation>
						(out) Request processing failed
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Warning">
            <xs:annotation>
              <xs:documentation>
						(out) Request processing completed with warning information
						being included in the response message
					 </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PartialFailure">
            <xs:annotation>
              <xs:documentation>
						(out) Request processing completed with some failures.
						See the Errors data to determine which portions of the request failed.
					 </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="AmountType">
        <xs:annotation>
          <xs:documentation>
			Basic type for specifying monetary amounts. A double value (e.g.,
			1.00 or 1.0) is meaningful as a monetary amount when accompanied by a
			specification of the currency, in which case the value specifies
			the amount in that currency. An AmountType expresses both the value
			(a double) and the currency. Details such as prices, fees, costs,
			and payments are specified as amount types.
		</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
          <xs:extension base="xs:double">
            <xs:attribute name="currencyID" type="ns:CurrencyCodeType" use="required">
              <xs:annotation>
                <xs:documentation>
						Currency in which the monetary amount is specified.
						See CurrencyCodeType for applicable values.
					</xs:documentation>
                <xs:appinfo>
                  <CallInfo>
                    <AllValuesExcept>INR, CAD, HKD, AUD, CHF, MYR, EUR, PHP, PLN, USD, SGD, SEK, GBP</AllValuesExcept>
                    <CallName>GetShippingCosts</CallName>
                    <Returned>Conditionally</Returned>
                  </CallInfo>
                  <CallInfo>
                    <AllValuesExcept>INR, CAD, HKD, AUD, CHF, MYR, EUR, PHP, PLN, USD, SGD, SEK, GBP</AllValuesExcept>
                    <CallName>GetSingleItem</CallName>
                    <Returned>Conditionally</Returned>
                  </CallInfo>
                  <CallInfo>
                    <AllValuesExcept>INR, CAD, HKD, AUD, CHF, MYR, EUR, PHP, PLN, USD, SGD, SEK, GBP</AllValuesExcept>
                    <CallName>FindItems</CallName>
                    <Returned>Conditionally</Returned>
                  </CallInfo>
                  <CallInfo>
                    <AllValuesExcept>INR, CAD, HKD, AUD, CHF, MYR, EUR, PHP, PLN, USD, SGD, SEK, GBP</AllValuesExcept>
                    <CallName>FindItemsAdvanced</CallName>
                    <Returned>Conditionally</Returned>
                    <Details>IncludeSelector: Details</Details>
                  </CallInfo>
                  <CallInfo>
                    <AllValuesExcept>INR, CAD, HKD, AUD, CHF, MYR, EUR, PHP, PLN, USD, SGD, SEK, GBP</AllValuesExcept>
                    <CallName>FindItemsAdvanced</CallName>
                    <RequiredInput>No</RequiredInput>
                  </CallInfo>
                  <CallInfo>
                    <AllValuesExcept>INR, CAD, HKD, AUD, CHF, MYR, EUR, PHP, PLN, USD, SGD, SEK, GBP</AllValuesExcept>
                    <CallName>GetItemStatus</CallName>
                    <Returned>Always</Returned>
                  </CallInfo>
                  <CallInfo>
                    <CallName>GetUserAlerts</CallName>
                    <CallName>GetPublicAlerts</CallName>
                    <RequiredInput>No</RequiredInput>
                    <Returned>Conditionally</Returned>
                  </CallInfo>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:simpleType name="CommentTypeCodeType">
        <xs:annotation>
          <xs:documentation>
				CommentTypeCodeType - Type declaration to be used by other schema.
				These are the possible codes to specify the types of feedback/comment.
				Additional information about feedback is available in the online Help of the eBay site.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Positive">
            <xs:annotation>
              <xs:documentation>
								Positive feedback. Increases total feedback score.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Neutral">
            <xs:annotation>
              <xs:documentation>
								Neutral feedback. No effect on total feedback score.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Negative">
            <xs:annotation>
              <xs:documentation>
								Negative feedback. Decreases total feedback score.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Withdrawn">
            <xs:annotation>
              <xs:documentation>
								Withdrawn feedback. Removes the effect of the original
								feedback on total feedback score. Comments from withdrawn feedback
								are still visible.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="IndependentlyWithdrawn">
            <xs:annotation>
              <xs:documentation>
								Applies to the eBay Motors site only. Feedback is withdrawn based on
								the decision of a third party.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
								Reserved for internal or future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CurrencyCodeType">
        <xs:annotation>
          <xs:documentation>
				Defines the standard 3-letter ISO 4217 currency code set.
				However, only certain currency codes are currently valid for use on eBay.
				The valid codes are documented below with the notation "(in/out)".
				Other codes in this list are for future use.
				The documentation below specifies English names for each currency.
				Alternatively, use GeteBayDetails to retrieve the names programmatically.
				A reference: http://www.xe.com/iso4217.htm
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="AFA" />
          <xs:enumeration value="ALL" />
          <xs:enumeration value="DZD" />
          <xs:enumeration value="ADP" />
          <xs:enumeration value="AOA" />
          <xs:enumeration value="ARS" />
          <xs:enumeration value="AMD" />
          <xs:enumeration value="AWG" />
          <xs:enumeration value="AZM" />
          <xs:enumeration value="BSD" />
          <xs:enumeration value="BHD" />
          <xs:enumeration value="BDT" />
          <xs:enumeration value="BBD" />
          <xs:enumeration value="BYR" />
          <xs:enumeration value="BZD" />
          <xs:enumeration value="BMD" />
          <xs:enumeration value="BTN" />
          <xs:enumeration value="INR">
            <xs:annotation>
              <xs:documentation>
					Indian Rupee.
					Applicable to listings on the India site (site ID 203).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BOV" />
          <xs:enumeration value="BOB" />
          <xs:enumeration value="BAM" />
          <xs:enumeration value="BWP" />
          <xs:enumeration value="BRL" />
          <xs:enumeration value="BND" />
          <xs:enumeration value="BGL" />
          <xs:enumeration value="BGN" />
          <xs:enumeration value="BIF" />
          <xs:enumeration value="KHR" />
          <xs:enumeration value="CAD">
            <xs:annotation>
              <xs:documentation>
						Canadian Dollar.
						Applicable to listings on the Canada site (site ID 2)
						(Items listed on the Canada site can also specify USD.)
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CVE" />
          <xs:enumeration value="KYD" />
          <xs:enumeration value="XAF" />
          <xs:enumeration value="CLF" />
          <xs:enumeration value="CLP" />
          <xs:enumeration value="CNY">
            <xs:annotation>
              <xs:documentation>
						Chinese Yuan Renminbi.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="COP" />
          <xs:enumeration value="KMF" />
          <xs:enumeration value="CDF" />
          <xs:enumeration value="CRC" />
          <xs:enumeration value="HRK" />
          <xs:enumeration value="CUP" />
          <xs:enumeration value="CYP" />
          <xs:enumeration value="CZK" />
          <xs:enumeration value="DKK" />
          <xs:enumeration value="DJF" />
          <xs:enumeration value="DOP" />
          <xs:enumeration value="TPE" />
          <xs:enumeration value="ECV" />
          <xs:enumeration value="ECS" />
          <xs:enumeration value="EGP" />
          <xs:enumeration value="SVC" />
          <xs:enumeration value="ERN" />
          <xs:enumeration value="EEK" />
          <xs:enumeration value="ETB" />
          <xs:enumeration value="FKP" />
          <xs:enumeration value="FJD" />
          <xs:enumeration value="GMD" />
          <xs:enumeration value="GEL" />
          <xs:enumeration value="GHC" />
          <xs:enumeration value="GIP" />
          <xs:enumeration value="GTQ" />
          <xs:enumeration value="GNF" />
          <xs:enumeration value="GWP" />
          <xs:enumeration value="GYD" />
          <xs:enumeration value="HTG" />
          <xs:enumeration value="HNL" />
          <xs:enumeration value="HKD">
            <xs:annotation>
              <xs:documentation>
						Hong Kong Dollar.
						Applicable to listings on the Hong Kong site (site ID 201).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="HUF" />
          <xs:enumeration value="ISK" />
          <xs:enumeration value="IDR" />
          <xs:enumeration value="IRR" />
          <xs:enumeration value="IQD" />
          <xs:enumeration value="ILS" />
          <xs:enumeration value="JMD" />
          <xs:enumeration value="JPY" />
          <xs:enumeration value="JOD" />
          <xs:enumeration value="KZT" />
          <xs:enumeration value="KES" />
          <xs:enumeration value="AUD">
            <xs:annotation>
              <xs:documentation>
						Australian Dollar.
						Applicable to listings on the Australia site (site ID 15).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="KPW" />
          <xs:enumeration value="KRW" />
          <xs:enumeration value="KWD" />
          <xs:enumeration value="KGS" />
          <xs:enumeration value="LAK" />
          <xs:enumeration value="LVL" />
          <xs:enumeration value="LBP" />
          <xs:enumeration value="LSL" />
          <xs:enumeration value="LRD" />
          <xs:enumeration value="LYD" />
          <xs:enumeration value="CHF">
            <xs:annotation>
              <xs:documentation>
						Swiss Franc.
						Applicable to listings on the Switzerland site (site ID 193).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LTL" />
          <xs:enumeration value="MOP" />
          <xs:enumeration value="MKD" />
          <xs:enumeration value="MGF" />
          <xs:enumeration value="MWK" />
          <xs:enumeration value="MYR">
            <xs:annotation>
              <xs:documentation>
						Malaysian Ringgit.
						Applicable to listings on the Malaysia site (site ID 207).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MVR" />
          <xs:enumeration value="MTL" />
          <xs:enumeration value="EUR">
            <xs:annotation>
              <xs:documentation>
						Euro.
						Applicable to listings on these site:
						Austria (site 16), Belgium_French (site 23),
						France (site 71), Germany (site 77), Italy (site 101), Belgium_Dutch (site 123),
						Netherlands (site 146), Spain (site 186), Ireland (site 205).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MRO" />
          <xs:enumeration value="MUR" />
          <xs:enumeration value="MXN" />
          <xs:enumeration value="MXV" />
          <xs:enumeration value="MDL" />
          <xs:enumeration value="MNT" />
          <xs:enumeration value="XCD" />
          <xs:enumeration value="MZM" />
          <xs:enumeration value="MMK" />
          <xs:enumeration value="ZAR" />
          <xs:enumeration value="NAD" />
          <xs:enumeration value="NPR" />
          <xs:enumeration value="ANG" />
          <xs:enumeration value="XPF" />
          <xs:enumeration value="NZD" />
          <xs:enumeration value="NIO" />
          <xs:enumeration value="NGN" />
          <xs:enumeration value="NOK" />
          <xs:enumeration value="OMR" />
          <xs:enumeration value="PKR" />
          <xs:enumeration value="PAB" />
          <xs:enumeration value="PGK" />
          <xs:enumeration value="PYG" />
          <xs:enumeration value="PEN" />
          <xs:enumeration value="PHP">
            <xs:annotation>
              <xs:documentation>
						Philippines Peso.
						Applicable to listings on the Philippines site (site ID 211).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PLN">
            <xs:annotation>
              <xs:documentation>
						Poland, Zloty.
						Applicable to listings on the Poland site (site ID 212).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="USD">
            <xs:annotation>
              <xs:documentation>
						US Dollar.
						Applicable to listings on the US (site ID 0), eBayMotors (site 100), and Canada (site 2) sites.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="QAR" />
          <xs:enumeration value="ROL" />
          <xs:enumeration value="RUB" />
          <xs:enumeration value="RUR" />
          <xs:enumeration value="RWF" />
          <xs:enumeration value="SHP" />
          <xs:enumeration value="WST" />
          <xs:enumeration value="STD" />
          <xs:enumeration value="SAR" />
          <xs:enumeration value="SCR" />
          <xs:enumeration value="SLL" />
          <xs:enumeration value="SGD">
            <xs:annotation>
              <xs:documentation>
						Singapore Dollar.
						Applicable to listings on the Singapore site (site 216).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SKK" />
          <xs:enumeration value="SIT" />
          <xs:enumeration value="SBD" />
          <xs:enumeration value="SOS" />
          <xs:enumeration value="LKR" />
          <xs:enumeration value="SDD" />
          <xs:enumeration value="SRG" />
          <xs:enumeration value="SZL" />
          <xs:enumeration value="SEK">
            <xs:annotation>
              <xs:documentation>
						 Swedish Krona.
						 Applicable to listings on the Sweden site (site 218).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SYP" />
          <xs:enumeration value="TWD">
            <xs:annotation>
              <xs:documentation>
						New Taiwan Dollar.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TJS" />
          <xs:enumeration value="TZS" />
          <xs:enumeration value="THB" />
          <xs:enumeration value="XOF" />
          <xs:enumeration value="TOP" />
          <xs:enumeration value="TTD" />
          <xs:enumeration value="TND" />
          <xs:enumeration value="TRL" />
          <xs:enumeration value="TMM" />
          <xs:enumeration value="UGX" />
          <xs:enumeration value="UAH" />
          <xs:enumeration value="AED" />
          <xs:enumeration value="GBP">
            <xs:annotation>
              <xs:documentation>
						Pound Sterling.
						Applicable to listings on the UK site (site ID 3).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="USS" />
          <xs:enumeration value="USN" />
          <xs:enumeration value="UYU" />
          <xs:enumeration value="UZS" />
          <xs:enumeration value="VUV" />
          <xs:enumeration value="VEB" />
          <xs:enumeration value="VND" />
          <xs:enumeration value="MAD" />
          <xs:enumeration value="YER" />
          <xs:enumeration value="YUM" />
          <xs:enumeration value="ZMK" />
          <xs:enumeration value="ZWD" />
          <xs:enumeration value="ATS" />
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ErrorClassificationCodeType">
        <xs:annotation>
          <xs:documentation />
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="RequestError">
            <xs:annotation>
              <xs:documentation>
					An error has occurred either as a result of a problem in the sending application or because 
					the application's end-user has attempted to submit invalid data (or missing data). 
					In these cases, do not retry the request. The problem must be corrected before the request 
					can be made again. If the problem is due to something in the application (such as a missing 
					required field), the application must be changed. If the problem is a result of end-user data, 
					the application must alert the end-user to the problem and provide the means for the end-user 
					to correct the data. Once the problem in the application or data is resolved, resend the request to eBay
					with the corrected data. 
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SystemError">
            <xs:annotation>
              <xs:documentation>
					Indicates that an error has occurred on the eBay system side, such as a database or server down. 
					An application can retry the request as-is a reasonable number of times (eBay recommends twice). 
					If the error persists, contact Developer Technical Support. Once the problem has been resolved, 
					the request may be resent in its original form. 
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ErrorParameterType">
        <xs:annotation>
          <xs:documentation>
				A variable that contains specific information about the context of this error.
				For example, if you pass in an attribute set ID that does not match
				the specified category, the attribute set ID might be returned as an error parameter.
				Use error parameters to flag fields that users need to correct.
				Also use error parameters to distinguish between errors when multiple
				errors are returned.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Value" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The value of the variable.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <AllCalls />
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
        <xs:attribute name="ParamID" type="xs:string">
          <xs:annotation>
            <xs:documentation>
				The index of the parameter in the error.
				</xs:documentation>
            <xs:appinfo>
              <CallInfo>
                <AllCalls />
                <Returned>Conditionally</Returned>
              </CallInfo>
            </xs:appinfo>
          </xs:annotation>
        </xs:attribute>
      </xs:complexType>
      <xs:complexType name="ErrorType">
        <xs:annotation>
          <xs:documentation>
				These are request errors (as opposed to system errors) that occur due to problems
				with business-level data (e.g., an invalid combination of arguments) that
				the application passed in.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ShortMessage" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						A brief description of the condition that raised the error.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <AllCalls />
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <SeeLink>
                  <Title>Errors by Number</Title>
                  <URL>Errors/ErrorMessages.html</URL>
                </SeeLink>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LongMessage" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						A more detailed description of the condition that raised the error.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <AllCalls />
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <SeeLink>
                  <Title>Errors by Number</Title>
                  <URL>Errors/ErrorMessages.html</URL>
                </SeeLink>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ErrorCode" type="xs:token">
            <xs:annotation>
              <xs:documentation>
						A unique code that identifies the particular error condition that occurred.
						Your application can use error codes as identifiers
						in your customized error-handling algorithms.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <AllCalls />
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <SeeLink>
                  <Title>Errors by Number</Title>
                  <URL>Errors/ErrorMessages.html</URL>
                </SeeLink>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="UserDisplayHint" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						This field is not currently in use for eBay Shopping Web Services.
						Indicates whether the error message text is intended to be displayed to
						an end user or intended only to be parsed by the application.
						If true or not present (the default), the message text is intended for the end user. If false, the message text is intended for
						the application, and the application should translate the error into a more appropriate message.
					</xs:documentation>
              <xs:appinfo>
                <NoCalls />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SeverityCode" type="ns:SeverityCodeType">
            <xs:annotation>
              <xs:documentation>
						Indicates whether the error caused the request to fail.&lt;br&gt;
						&lt;br&gt;
						If the request fails and the source of the problem is within the
						application (such as a missing required element), please change the
						application before you  retry the request. If the problem is due to
						end-user input data, please alert the end-user to the problem and
						provide the means for them to correct the data. Once the problem in the
						application or data is resolved, you can attempt to re-send the request
						to eBay.&lt;br&gt;
						&lt;br&gt;
						If the source of the problem is on eBay's side, you can retry the
						request as-is a reasonable number of times (eBay recommends twice).
						If the error persists, contact Developer Technical Support. Once the
						problem has been resolved, the request may be resent in its original
						form.&lt;br&gt;
						&lt;br&gt;
						When a warning occurs, the error is returned in addition to the business
						data. In this case, you do not need to retry the request (as the
						original request was successful). However, depending on the cause or
						nature of the warning, you might need to contact either the end user or
						eBay to effect a long term solution to the problem to prevent it from
						reoccurring in the future.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <AllCalls />
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <SeeLink>
                  <Title>Errors by Number</Title>
                  <URL>Errors/ErrorMessages.html</URL>
                </SeeLink>
                <SeeLink>
                  <Title>Checklist for Going Live</Title>
                  <URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=ErrorHandlingGuidelines</URL>
                  <For>more information (in the eBay Trading Web Services guide)</For>
                </SeeLink>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ErrorParameters" type="ns:ErrorParameterType">
            <xs:annotation>
              <xs:documentation>
						Some warning and error messages return one or more variables that
						contain contextual information about the error. This is often the
						field or value that triggered the error.
						You can usually predict where these will
						occur by looking at the "replaceable_value" indicators in our
						Errors by Number page.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <AllCalls />
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <SeeLink>
                  <Title>Errors by Number</Title>
                  <URL>Errors/ErrorMessages.html</URL>
                </SeeLink>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ErrorClassification" type="ns:ErrorClassificationCodeType">
            <xs:annotation>
              <xs:documentation>
						API errors are divided between two classes: system errors and request errors.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <AllCalls />
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <SeeLink>
                  <Title>Errors by Number</Title>
                  <URL>Errors/ErrorMessages.html</URL>
                </SeeLink>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="FeedbackRatingStarCodeType">
        <xs:annotation>
          <xs:documentation>
					 FeedbackRatingStarCodeType - Type declaration to be used by other
					 schema. The color of a feedback score star visually denotes the
					 range in which the member's summary feedback score falls. The score
					 is the net positive feedback minus the net negative feedback left
					 for the member.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="None">
            <xs:annotation>
              <xs:documentation>
								No graphic displayed, feedback score 0-9.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Yellow">
            <xs:annotation>
              <xs:documentation>
								Yellow Star, feedback score 10-49.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Blue">
            <xs:annotation>
              <xs:documentation>
								Blue Star, feedback score 50-99.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Turquoise">
            <xs:annotation>
              <xs:documentation>
								Turquoise Star, feedback score 100-499.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Purple">
            <xs:annotation>
              <xs:documentation>
								Purple Star, feedback score 500-999.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Red">
            <xs:annotation>
              <xs:documentation>
								Red Star, feedback score 1,000-4,999
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Green">
            <xs:annotation>
              <xs:documentation>
								Green Star, feedback score 5,000-9,999.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="YellowShooting">
            <xs:annotation>
              <xs:documentation>
								Yellow Shooting Star, feedback score 10,000-24,999.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TurquoiseShooting">
            <xs:annotation>
              <xs:documentation>
								Turquoise Shooting Star, feedback score 25,000-49,999.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PurpleShooting">
            <xs:annotation>
              <xs:documentation>
								Purple Shooting Star, feedback score 50,000-99,999.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RedShooting">
            <xs:annotation>
              <xs:documentation>
								Red Shooting Star, feedback score 100,000-499,999.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GreenShooting">
            <xs:annotation>
              <xs:documentation>
						Green Shooting Star, feedback score 500,000-900,000.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SilverShooting">
            <xs:annotation>
              <xs:documentation>
						Silver Shooting Star, feedback score 1,000,000 and above.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SellerBusinessCodeType">
        <xs:annotation>
          <xs:documentation>
					Type of seller account. This value can be returned if the German site (site ID
					77) or eBay Motors site (site ID 100) is specified.
				</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Undefined">
            <xs:annotation>
              <xs:documentation>
							Type of seller account not defined.
						</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Private">
            <xs:annotation>
              <xs:documentation>
							Private seller account.
						</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Commercial">
            <xs:annotation>
              <xs:documentation>
							Commercial seller account.
						</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
							(out) Reserved for internal or future use.
						</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SellerLevelCodeType">
        <xs:annotation>
          <xs:documentation>
				SellerLevelCodeType - Type declaration to be used by other schema.
				Indicates the user's eBay PowerSeller tier.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Bronze">
            <xs:annotation>
              <xs:documentation>
						(out) Bronze
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Silver">
            <xs:annotation>
              <xs:documentation>
						(out) Silver
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Gold">
            <xs:annotation>
              <xs:documentation>
						(out) Gold
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Platinum">
            <xs:annotation>
              <xs:documentation>
						(out) Platinum
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Titanium">
            <xs:annotation>
              <xs:documentation>
						(out) Titanium
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Diamond">
            <xs:annotation>
              <xs:documentation>
						(out) Diamond
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="None">
            <xs:annotation>
              <xs:documentation>
						(out) None
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SeverityCodeType">
        <xs:annotation>
          <xs:documentation>
				SeverityCodeType - Type declaration to be used by other schema. This code
				identifies the severity of an API error. A code indicates whether there is an API-
				level error or warning that needs to be communicated to the client.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Warning">
            <xs:annotation>
              <xs:documentation>
						(out) The request was processed successfully, but something occurred
						that may affect your application or the user. For example, eBay may have
						changed a value the user sent in. In this case, eBay returns a normal,
						successful response and also returns the warning.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Error">
            <xs:annotation>
              <xs:documentation>
						(out) The request that triggered the error was not processed
						successfully. When a serious application-level error occurs, the error
						is returned instead of the business data.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="SimpleUserType">
        <xs:annotation>
          <xs:documentation>
				Type to contain the data for one eBay user. Depending on the context, the user
				might be the seller or the buyer in a transaction, or the bidder or winning bidder
				in a listing. An object of this type is returned by a number of calls, including
				the GetUser call.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="UserID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The user's unique eBay user ID.
						&lt;br /&gt;
						&lt;br /&gt;
						When reporting UserIDs in bidding situations (such was when listing
						the high bidder in an auction), eBay replaces the UserID value with
						an anonymous bidder name value, such as "a***o".
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Context>Seller</Context>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetItemStatus</CallName>
                  <Context>HighBidder</Context>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>FindItemsAdvanced</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: SellerInfo</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeedbackPrivate" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Indicates whether the user has chosen to make their feedback score and
						feedback details private (hidden from other users). Note that the percentage
						of positive feedback can still be returned, even if other feedback details are
						private. If a bidder's user information is made
						anonymous, the value -99 is returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetItemStatus</CallName>
                  <Context>HighBidder</Context>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindItemsAdvanced</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: SellerInfo</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeedbackRatingStar" type="ns:FeedbackRatingStarCodeType">
            <xs:annotation>
              <xs:documentation>
						Visual indicator of user's feedback score.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Context>Seller</Context>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetItemStatus</CallName>
                  <Context>HighBidder</Context>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindItemsAdvanced</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: SellerInfo</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeedbackScore" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						The aggregate feedback score of a user. A user's feedback score is the net
						positive feedback minus the net negative feedback left for the user.
						&lt;br&gt;
						&lt;br&gt;
						Feedback scores are a quantitative expression of the desirability of dealing with
						a user as a buyer or a seller in transactions. Each transaction can result in one
						feedback entry for a given user. (The buyer can leave feedback for the seller, and
						the seller can leave feedback for the buyer.) That one feedback can be positive,
						negative, or neutral. The aggregate feedback score of a user represents that
						user's overall feedback score (referred to as a "feedback rating" on the eBay
						site). If the user has chosen to make their feedback private, then FeedbackScore
						is not returned and FeedbackPrivate is returned with a value of true.
						&lt;br&gt;
						&lt;br&gt;
						If a bidder's user information is made anonymous, the value -99 is returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Context>Seller</Context>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetItemStatus</CallName>
                  <Context>HighBidder</Context>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindItemsAdvanced</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: SellerInfo</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="UserAnonymized" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Indicates whether eBay has made this user's information anonymous.
						This occurs when the listing prices (reserve, current, or Buy It Now)
						reach or exceed a certain amount (such as $200 USD at the time of this
						writing).
						&lt;br&gt;
						&lt;br&gt;
						If true, certain other fields about this user are not returned, or their values
						include no identifying characteristics. (The rules are explained in the
						description of each field.) If false, all user-specific fields contain the user's
						actual data.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>HighBidder</Context>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NewUser" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						If true, identifies a new user who has been a registered eBay user for 30 days
						or less. Always false after the user has been registered for more than 30
						days. Does not indicate an ID change.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RegistrationDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>
						The date the specified user originally registered with eBay. If a bidder's user
						information is made anonymous, the value -99 is returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RegistrationSite" type="ns:SiteCodeType">
            <xs:annotation>
              <xs:documentation>
						The eBay site with which the user is registered. If a bidder's user information is
						made anonymous, the value -99 is returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Status" type="ns:UserStatusCodeType">
            <xs:annotation>
              <xs:documentation>
						The registration-related status of the user.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SellerBusinessType" type="ns:SellerBusinessCodeType">
            <xs:annotation>
              <xs:documentation>
						Type of seller account.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StoreURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						The URL of the seller's eBay Store page.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: Details</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StoreName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The name of the seller's eBay Store.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: Details</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SellerItemsURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						URL for seller's other items.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="AboutMeURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						A link to the user's AboutMe page.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MyWorldURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						A link to the URL of the user's MyWorld page.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: Details</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MyWorldSmallImage" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						Location of a user's image on the MyWorld page (small version).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: Details</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MyWorldLargeImage" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						Location of a user's image on the MyWorld page (large version).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: Details</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ReviewsAndGuidesURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						The URL of reviews and guides.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: Details</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeedbackDetailsURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						The URL of feedback details.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PositiveFeedbackPercent" type="xs:float">
            <xs:annotation>
              <xs:documentation>
						A seller's positive feedback score. The percentage value of a seller's
						positive feedback is calculated by dividing the seller's positive feedback
						score by their negative feedback score. The last 12 months of feedback
						scores are taken into consideration for this calculation.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Context>Seller</Context>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindItemsAdvanced</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: SellerInfo</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SellerLevel" type="ns:SellerLevelCodeType">
            <xs:annotation>
              <xs:documentation>
						The user's eBay PowerSeller tier. No longer returned for the US, DE/AT/CH, and 
						UK/IE sites. Note that SellerLevel may be suppressed for other sites, as well. 
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TopRatedSeller" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Returned when seller is certified as a top-rated seller, and is qualified for benefits such as final value fee
						discount and increased visibility in fixed-price searches.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
                  <TagStatus>ComingSoon</TagStatus>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Context>Seller</Context>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="SiteCodeType">
        <xs:annotation>
          <xs:documentation>
				eBay sites (by the country in which each resides) on
which a user is registered and on which items can be listed.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="US">
            <xs:annotation>
              <xs:documentation>
						USA, site ID 0, abbreviation US, currency USD.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Canada">
            <xs:annotation>
              <xs:documentation>
						Canada, site ID 2, abbreviation CA, currencies CAD and USD.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UK">
            <xs:annotation>
              <xs:documentation>
						United Kingdom, site ID 3, abbreviation UK, currency GBP.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Australia">
            <xs:annotation>
              <xs:documentation>
						Australia, site ID 15, abbreviation AU, currency AUD.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Austria">
            <xs:annotation>
              <xs:documentation>
						Austria, site ID 16, abbreviation AT, currency EUR.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Belgium_French">
            <xs:annotation>
              <xs:documentation>
						Belgium (French), site ID 23, abbreviation BEFR, currency EUR.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="France">
            <xs:annotation>
              <xs:documentation>
						France, site ID 71, abbreviation FR, currency EUR.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Germany">
            <xs:annotation>
              <xs:documentation>
						Germany, site ID 77, abbreviation DE, currency EUR.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Italy">
            <xs:annotation>
              <xs:documentation>
						Italy, site ID 101, abbreviation IT, currency EUR.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Belgium_Dutch">
            <xs:annotation>
              <xs:documentation>
						Belgium (Dutch), site ID 123, abbreviation BENL, currency EUR.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Netherlands">
            <xs:annotation>
              <xs:documentation>
						Netherlands, site ID 146, abbreviation NL, currency EUR.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Spain">
            <xs:annotation>
              <xs:documentation>
						Spain, site ID 186, abbreviation ES, currency EUR.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Switzerland">
            <xs:annotation>
              <xs:documentation>
						Switzerland, site ID 193, abbreviation CH, currency CHF.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Taiwan">
            <xs:annotation>
              <xs:documentation>
						Taiwan, site ID 196, abbreviation TW, currency TWD.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="eBayMotors">
            <xs:annotation>
              <xs:documentation>
						eBay Motors, site ID 100, currency USD.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="HongKong">
            <xs:annotation>
              <xs:documentation>
						Hong Kong, site ID 201, abbreviation HK, currency HKD.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Singapore">
            <xs:annotation>
              <xs:documentation>
						Singapore, site ID 216, abbreviation SG, currency SGD.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="India">
            <xs:annotation>
              <xs:documentation>
						India, site ID 203, abbreviation IN, currency INR.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="China">
            <xs:annotation>
              <xs:documentation>
						China, site ID 223, abbreviation CN, currency CNY.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Ireland">
            <xs:annotation>
              <xs:documentation>
						Ireland, site ID 205, abbreviation IE, currency EUR.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Malaysia">
            <xs:annotation>
              <xs:documentation>
						Malaysia, site ID 207, abbreviation MY, currency MYR.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Philippines">
            <xs:annotation>
              <xs:documentation>
						Philippines, site ID 211, abbreviation PH, currency PHP.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Poland">
            <xs:annotation>
              <xs:documentation>
						Poland, site ID 212, abbreviation PL, currency PLN.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Sweden">
            <xs:annotation>
              <xs:documentation>
						Sweden, site ID 218, abbreviation SE, currency SEK.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CanadaFrench">
            <xs:annotation>
              <xs:documentation>
						CanadaFrench, site ID 210, abbreviation CAFR, currencies CAD and USD.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SortOrderCodeType">
        <xs:annotation>
          <xs:documentation>
				Indicates the order of sorting.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Ascending">
            <xs:annotation>
              <xs:documentation>
						Sorts results in ascending (low to high) order.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Descending">
            <xs:annotation>
              <xs:documentation>
						Sorts results in descending (high to low) order.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TradingRoleCodeType">
        <xs:annotation>
          <xs:documentation>
				A means for identifying a person's role in doing business on eBay.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Buyer">
            <xs:annotation>
              <xs:documentation>
						Acting as buyer.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Seller">
            <xs:annotation>
              <xs:documentation>
						Acting as seller.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Reserved for future use
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UserStatusCodeType">
        <xs:annotation>
          <xs:documentation>
				These codes indicate the current state or status of a an eBay
				user account.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Unknown">
            <xs:annotation>
              <xs:documentation>
						(out) User properties have never been set; this value should
						seldom, if ever, be returned and typically represents a
						problem
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Suspended">
            <xs:annotation>
              <xs:documentation>
						(out) User has been suspended from selling and buying, such as
						for violations of eBay terms or agreement
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Confirmed">
            <xs:annotation>
              <xs:documentation>
						(out) User has completed online registration and has properly
						responded to confirmation email; most users should fall
						in this category
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Unconfirmed">
            <xs:annotation>
              <xs:documentation>
						(out) User has completed online registration, but has either
						not responded to confirmation email or has not yet been
						sent the confirmation email
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Ghost">
            <xs:annotation>
              <xs:documentation>
						(out) Registered users of AuctionWeb (pre-eBay) who never
						re-registered on eBay
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InMaintenance">
            <xs:annotation>
              <xs:documentation>
						(out) Temporary user record state indicating the record is in
						the process of being changed by eBay; query user
						information again to get new status
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Deleted">
            <xs:annotation>
              <xs:documentation>
						(out) Records for the specified user have been deleted
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CreditCardVerify">
            <xs:annotation>
              <xs:documentation>
						(out) User has completed registration and confirmation, but is
						pending a verification of credit card information
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AccountOnHold">
            <xs:annotation>
              <xs:documentation>
						(out) User's account is on hold, such as for non-payment of
						amounts due eBay; user cannot sell or buy items
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Merged">
            <xs:annotation>
              <xs:documentation>
						(out) User record has been merged with another account record
						for the same user
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RegistrationCodeMailOut">
            <xs:annotation>
              <xs:documentation>
						(out) User has completed online registration and has been sent
						the confirmation email, but has not yet responded to the
						confirmation email
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TermPending">
            <xs:annotation>
              <xs:documentation>
						(out) User has been scheduled for account closure (typically
						when a user has requested to have their account closed)
						A user in this state should not be considered an active
						user
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UnconfirmedHalfOptIn">
            <xs:annotation>
              <xs:documentation>
						(out) User has completed the registration for Half.com and opted
						to automatically also be registered with eBay, but the
						registration confirmation is still pending
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CreditCardVerifyHalfOptIn">
            <xs:annotation>
              <xs:documentation>
						(out) User has completed the registration for Half.com and opted
						to automatically also be registered with eBay, but the
						verification of credit card information is still pending
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UnconfirmedExpress">
            <xs:annotation>
              <xs:documentation>
						(out) Half.com User; user has completed the registration for Half.com
						and opted to automatically also be registered with eBay, but the
						registration confirmation is still pending
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="AddressType">
        <xs:annotation>
          <xs:documentation>
			Contains the data for one user address. This is the base type for a
			number of user addresses, including seller payment address, buyer
			shipping address and buyer and seller registration address.
		</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Name" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					User's name for the address.
					Also applicable to Half.com (for GetOrders).
				</xs:documentation>
              <xs:appinfo>
                <MaxLength>64</MaxLength>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: ReturnAll, ReturnSummary, none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>SellerPaymentAddress</Context>
                  <Details>DetailLevel: ReturnAll</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUserContactDetails</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrders</CallName>
                  <Details>DetailLevel: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrderTransactions</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItemTransactions</CallName>
                  <CallName>GetSellerTransactions</CallName>
                  <Details>DetailLevel: none, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Street" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					A concatenation of Street1 and Street2, primarily for RegistrationAddress.
					Not applicable to Half.com.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItemTransactions</CallName>
                  <CallName>GetSellerTransactions</CallName>
                  <Details>DetailLevel: none, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: ReturnAll, ReturnSummary, none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>RelistItem</CallName>
                  <CallName>ReviseItem</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <RequiredInput>No</RequiredInput>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Street1" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					Line 1 of the user's street address.
					Also applicable to Half.com (for GetOrders).
				</xs:documentation>
              <xs:appinfo>
                <MaxLength>100</MaxLength>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItemTransactions</CallName>
                  <CallName>GetSellerTransactions</CallName>
                  <Details>DetailLevel: none, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetAdFormatLeads</CallName>
                  <Details>DetailLevel: ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Context>SellerContactDetails</Context>
                  <Details>DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: ReturnAll, ReturnSummary, none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>SellerPaymentAddress</Context>
                  <Details>DetailLevel: ReturnAll</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrders</CallName>
                  <Details>DetailLevel: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrderTransactions</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Street2" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					Line 2 of the user's address (such as an apartment number).
					Returned if the user specified a second street value for their address.
					Also applicable to Half.com (for GetOrders).&lt;br&gt;
					In case of Item.SellerContactDetails, Street2 can be used to provide City, Address, State, and Zip code (if applicable).
				</xs:documentation>
              <xs:appinfo>
                <MaxLength>100</MaxLength>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll</Details>
                  <Context>SellerContactDetails</Context>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItemTransactions</CallName>
                  <CallName>GetSellerTransactions</CallName>
                  <Details>DetailLevel: none, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: ReturnAll, ReturnSummary, none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>SellerPaymentAddress</Context>
                  <Details>DetailLevel: ReturnAll</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrders</CallName>
                  <Details>DetailLevel: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrderTransactions</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>RelistItem</CallName>
                  <CallName>ReviseItem</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <RequiredInput>No</RequiredInput>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CityName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					The name of the user's city.
					Also applicable to Half.com (for GetOrders).
				</xs:documentation>
              <xs:appinfo>
                <MaxLength>64</MaxLength>
                <CallInfo>
                  <CallName>GetAdFormatLeads</CallName>
                  <Details>DetailLevel: ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItemTransactions</CallName>
                  <CallName>GetSellerTransactions</CallName>
                  <Details>DetailLevel: none, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: ReturnAll, ReturnSummary, none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>SellerPaymentAddress</Context>
                  <Details>DetailLevel: ReturnAll</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUserContactDetails</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrders</CallName>
                  <Details>DetailLevel: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrderTransactions</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="County" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					County information for the user.
					This field applies to Classified Ad format listings and to the UK only.
					Not applicable to Half.com.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>RelistItem</CallName>
                  <CallName>ReviseItem</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <RequiredInput>No</RequiredInput>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll</Details>
                  <Context>SellerContactDetails</Context>
                  <Returned>Conditionally</Returned>
                  <!-- N/A to RegistrationAddress for DE -->
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StateOrProvince" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					The region of the user's address.
					Also applicable to Half.com (for GetOrders).
				</xs:documentation>
              <xs:appinfo>
                <MaxLength>64</MaxLength>
                <CallInfo>
                  <CallName>GetAdFormatLeads</CallName>
                  <Details>DetailLevel: ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItemTransactions</CallName>
                  <CallName>GetSellerTransactions</CallName>
                  <Details>DetailLevel: none, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: ReturnAll, ReturnSummary, none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>SellerPaymentAddress</Context>
                  <Details>DetailLevel: ReturnAll</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUserContactDetails</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrders</CallName>
                  <Details>DetailLevel: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrderTransactions</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CountryName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					The name of the user's country.
					Also applicable to Half.com (for GetOrders).
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItemTransactions</CallName>
                  <CallName>GetSellerTransactions</CallName>
                  <Details>DetailLevel: none, ReturnAll</Details>
                  <Context>ShippingAddress</Context>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: ReturnAll, ReturnSummary, none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>SellerPaymentAddress</Context>
                  <Details>DetailLevel: ReturnAll</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrders</CallName>
                  <Details>DetailLevel: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrderTransactions</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Phone" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					User's primary phone number. This may return a value of
					"Invalid Request" if you are not authorized to see the
					user's phone number.
					Also applicable to Half.com (for GetOrders).
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItemTransactions</CallName>
                  <CallName>GetSellerTransactions</CallName>
                  <Details>DetailLevel: none, ReturnAll</Details>
                  <Context>ShippingAddress</Context>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Context>ShippingAddress</Context>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: ReturnAll, ReturnSummary, none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>SellerPaymentAddress</Context>
                  <Details>DetailLevel: ReturnAll</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUserContactDetails</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrders</CallName>
                  <Details>DetailLevel: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrderTransactions</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PhoneCountryPrefix" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					Country Prefix of the secondary phone number. This value is derived from
					inputs supplied for PhoneCountryCode.
					This field applies to Classified Ad format listings only.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll</Details>
                  <Context>SellerContactDetails</Context>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PhoneAreaOrCityCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					Area or City Code of a user's primary phone number.
					This field applies to Classified Ad format listings only.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>RelistItem</CallName>
                  <CallName>ReviseItem</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <RequiredInput>No</RequiredInput>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll</Details>
                  <Context>SellerContactDetails</Context>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PhoneLocalNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					The local number portion of the user's primary phone number.
					This field applies to Classified Ad format listings only.
					&lt;br&gt;
					&lt;b&gt;Note:&lt;/b&gt; The full primary phone number is constructed by
					combining PhoneLocalNumber with PhoneAreaOrCityCode and PhoneCountryPrefix.
					Starting with API release 497, the full phone number can be entered in
					PhoneLocalNumber. Refer to the release notes for additional information.
				</xs:documentation>
              <xs:appinfo>
                <MaxLength>30</MaxLength>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>RelistItem</CallName>
                  <CallName>ReviseItem</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <RequiredInput>No</RequiredInput>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll</Details>
                  <Context>SellerContactDetails</Context>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Phone2CountryPrefix" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					Country prefix of a user's secondary phone number. This value is derived from
					inputs supplied for Phone2CountryCode.
					This field applies to Classified Ad format listings only.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll</Details>
                  <Context>SellerContactDetails</Context>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Phone2AreaOrCityCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					Area or City Code of a user's secondary phone number.
					This field applies to Classified Ad format listings only.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>RelistItem</CallName>
                  <CallName>ReviseItem</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <RequiredInput>No</RequiredInput>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll</Details>
                  <Context>SellerContactDetails</Context>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Phone2LocalNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					The local number portion of the user's secondary phone number.
					This field applies to Classified Ad format listings only.
					&lt;br&gt;
					&lt;b&gt;Note:&lt;/b&gt; The full secondary phone number is constructed by
					combining Phone2LocalNumber with Phone2AreaOrCityCode and Phone2CountryPrefix.
					Starting with API release 497, the full phone number can be entered in
					Phone2LocalNumber. Refer to the release notes for additional information.
				</xs:documentation>
              <xs:appinfo>
                <MaxLength>30</MaxLength>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>RelistItem</CallName>
                  <CallName>ReviseItem</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <RequiredInput>No</RequiredInput>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll</Details>
                  <Context>SellerContactDetails</Context>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PostalCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					User's postal code.
					&lt;br&gt;
					&lt;br&gt;
					If not provided as input for GetCart or SetCart, eBay uses the country associated
					with the SiteID in effect when the call is made.
					&lt;br&gt;
					&lt;br&gt;
					Also applicable to Half.com (for GetOrders).
				</xs:documentation>
              <xs:appinfo>
                <MaxLength>12</MaxLength>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetAdFormatLeads</CallName>
                  <Details>DetailLevel: ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSellerList</CallName>
                  <Context>HighBidder</Context>
                  <Details>DetailLevel: ItemReturnDescription, ReturnAll</Details>
                  <Details>GranularityLevel: Fine</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Context>RegistrationAddress</Context>
                  <Context>ShippingAddress</Context>
                  <Details>DetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItemTransactions</CallName>
                  <CallName>GetSellerTransactions</CallName>
                  <Context>ShippingAddress</Context>
                  <Details>DetailLevel: none, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: ReturnAll, ReturnSummary, none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>SellerPaymentAddress</Context>
                  <Details>DetailLevel: ReturnAll</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMyeBaySelling</CallName>
                  <Context>SoldList</Context>
                  <Details>DetailLevel: none, ReturnSummary, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetAllBidders</CallName>
                  <CallName>GetHighBidders</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrders</CallName>
                  <Details>DetailLevel: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrderTransactions</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="AddressID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					ID assigned to the address in the eBay database.
					For GetOrders, applies only to Half.com.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetOrders</CallName>
                  <Details>DetailLevel: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrderTransactions</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExternalAddressID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					ID assigned to the address by the owner of the address (fitting
					only if the address is owned by PayPal; see AddressOwner).
					Also applicable to Half.com (for GetOrders).
				</xs:documentation>
              <xs:appinfo>
                <MaxLength>20</MaxLength>
                <CallInfo>
                  <CallName>GetOrders</CallName>
                  <Details>DetailLevel: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetOrderTransactions</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItemTransactions</CallName>
                  <CallName>GetSellerTransactions</CallName>
                  <Details>DetailLevel: none, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="InternationalName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					Seller's international name that is associated with the payment address.
					Only applicable to SellerPaymentAddress.
					Not applicable to Half.com.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>SellerPaymentAddress</Context>
                  <Details>DetailLevel: ReturnAll</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="InternationalStateAndCity" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					International state and city for the seller's payment address.
					Only applicable to SellerPaymentAddress.
					Not applicable to Half.com.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>SellerPaymentAddress</Context>
                  <Details>DetailLevel: ReturnAll</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="InternationalStreet" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					Seller's international street address that is associated with the payment address.
					Only applicable to SellerPaymentAddress.
					Not applicable to Half.com.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>SellerPaymentAddress</Context>
                  <Details>DetailLevel: ReturnAll</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CompanyName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					User's company name. Only returned if available.
					Not applicable to Half.com.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserContactDetails</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>ShippingAddress</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>RelistItem</CallName>
                  <CallName>ReviseItem</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <RequiredInput>No</RequiredInput>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll</Details>
                  <Context>SellerContactDetails</Context>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetUser</CallName>
                  <Returned>Conditionally</Returned>
                  <Context>RegistrationAddress</Context>
                  <Details>DetailLevel: ReturnAll, ReturnSummary, none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FirstName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					Displays the first name of the seller (in a business
					card format) if the seller's SellerBusinessCodeType
					is set to 'Commercial'.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LastName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					Displays the last name of the seller (in a business
					card format) if the seller's SellerBusinessCodeType
					is set to 'Commercial'.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AverageRatingDetailsType">
        <xs:annotation>
          <xs:documentation> 
					Applicable to sites that support the Detailed Seller Ratings feature.
					The AverageRatingDetailsType contains the average detailed seller ratings in an area. When buyers leave an overall Feedback rating (positive, neutral, or negative) for a seller, they also can leave ratings in four areas: item as described, communication, shipping time, and charges for shipping and handling. Users retrieve detailed ratings as averages of the ratings left by buyers. 
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="RatingDetail" type="ns:FeedbackRatingDetailCodeType">
            <xs:annotation>
              <xs:documentation>
						The area of a specific average detailed seller rating.
						Users retrieve detailed ratings as averages of the ratings left by buyers.
						When buyers leave an overall Feedback rating (positive, neutral, or negative)
						for a seller, they also can leave ratings in four areas:
						item as described, communication, shipping time, and charges for shipping and handling. 
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Rating" type="xs:double">
            <xs:annotation>
              <xs:documentation> 
						An average detailed seller rating applying to the area in the corresponding RatingDetail field. 
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RatingCount" type="xs:long">
            <xs:annotation>
              <xs:documentation> 
						The number of detailed seller ratings in the area
						in the corresponding RatingDetail field. 
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BusinessSellerDetailsType">
        <xs:annotation>
          <xs:documentation>
			  Displays the seller's information (in a business card format) 
			  as part of the data returned in the GetSingleItem call if the 
			  seller's SellerBusinessCodeType is set to 'Commercial'. Note 
			  that this option is only available for sites that have 
			  Business Seller options enabled.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Address" type="ns:AddressType">
            <xs:annotation>
              <xs:documentation>
						Displays the Address of the seller (in a business card 
						format) as part of the data returned in the  
						GetSingleItem call if the seller's SellerBusinessCodeType
						is set to 'Commercial'. 
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Fax" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Displays the fax number of the seller (in a business card 
						format) as part of the data returned in the  
						GetSingleItem call if the seller's SellerBusinessCodeType 
						is set to 'Commercial'.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Email" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Displays the email address of the seller (in a business 
						card format) as part of the data returned in the  
						GetSingleItem call if the seller's 
						SellerBusinessCodeType is set to 'Commercial'.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="AdditionalContactInformation" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Displays the AdditionalContactInformation of the seller 
						(in a business card format) as part of the data returned 
						in the GetSingleItem call if the seller's 
						SellerBusinessCodeType is set to 'Commercial'. 
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TradeRegistrationNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Displays the TradeRegistrationNumber of the seller (in a 
						business card format) as part of the data returned in the 
						GetSingleItem call if the seller's SellerBusinessCodeType 
						is set to 'Commercial'.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LegalInvoice" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Displays the LegalInvoice of the seller (in a business card 
						format) as part of the data returned in the GetSingleItem 
						call if the seller's SellerBusinessCodeType is set to 
						'Commercial'.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TermsAndConditions" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Displays the TermsAndConditions of the seller (in a business card 
						format) as part of the data returned in the GetSingleItem call 
						if the seller's SellerBusinessCodeType is set to 'Commercial'.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="VATDetails" type="ns:VATDetailsType">
            <xs:annotation>
              <xs:documentation>
						Displays the VATDetails of the seller (in a business card
						format) as part of the data returned in the GetSingleItem 
						call if the seller's SellerBusinessCodeType is set to 
						'Commercial'.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="BuyerPaymentMethodCodeType">
        <xs:annotation>
          <xs:documentation>
				Identifies payment methods used by a buyer to pay a
				seller. On item listings, identifies one of the payment methods
				seller will accept for the item. Available payment methods can
				differ by site and item. Payment methods are not applicable to eBay
				Real Estate ad format listings.
			</xs:documentation>
          <xs:appinfo>
            <allValuesExcept>Escrow, PrePayDelivery, CODPrePayDelivery, PostalTransfer</allValuesExcept>
          </xs:appinfo>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="None">
            <xs:annotation>
              <xs:documentation>
						No payment method specified.
						For example, no payment methods would be specified for Ad format listings.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MOCC">
            <xs:annotation>
              <xs:documentation>
						Money order/cashiers check.
						Not applicable to US/CA eBay Motors listings.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AmEx">
            <xs:annotation>
              <xs:documentation>
						American Express.
						Not applicable to US/CA eBay Motors listings.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaymentSeeDescription">
            <xs:annotation>
              <xs:documentation>
						Payment instructions are contained in the item's description.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CCAccepted">
            <xs:annotation>
              <xs:documentation>
						Credit card.
						Not applicable to Real Estate or US/CA eBay Motors listings.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PersonalCheck">
            <xs:annotation>
              <xs:documentation>
						Personal check.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="COD">
            <xs:annotation>
              <xs:documentation>
						Cash on delivery.
						Only applicable to the following eBay sites: AT (16), BEFR (24),
						BENL (123), CH (193), DE (77), ES (186), FR (71), HK (201), IN (203),
						IT (101), PL (212), and SG (216).
						Not applicable to Real Estate listings.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="VisaMC">
            <xs:annotation>
              <xs:documentation>
						Visa/Mastercard. These qualify as safe payment methods.
						Not applicable to US/CA eBay Motors listings.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaisaPayAccepted">
            <xs:annotation>
              <xs:documentation>
						PaisaPay (for India site only). This qualifies as a safe payment method.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Other">
            <xs:annotation>
              <xs:documentation>
						Other forms of payment.
						Not applicable to US/CA eBay Motors listings
						(see PaymentSeeDescription instead).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PayPal">
            <xs:annotation>
              <xs:documentation>
						PayPal is accepted as a payment method. This qualifies as a safe payment method. &lt;br&gt;
						&lt;br&gt;
						If PayPal is specified for US/CA eBay Motors vehicles, it is for
						the vehicle deposit (not for purchasing the vehicle).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Discover">
            <xs:annotation>
              <xs:documentation>
						Discover card.
						Not applicable to US/CA eBay Motors listings.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CashOnPickup">
            <xs:annotation>
              <xs:documentation>
						This payment method is equivalent to the PayOnPickup payment method.
						CashOnPickup applies even for listings on the eBay US site that refer to "Pay on pickup."
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MoneyXferAccepted">
            <xs:annotation>
              <xs:documentation>
						Direct transfer of money.
						Not applicable to US/CA eBay Motors listings.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MoneyXferAcceptedInCheckout">
            <xs:annotation>
              <xs:documentation>
						If the seller has bank account information on file, and
						MoneyXferAcceptedInCheckout = true, then the bank account
						information will be displayed in Checkout.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="OtherOnlinePayments">
            <xs:annotation>
              <xs:documentation>
						All other online payments.
						Not applicable to US/CA eBay Motors listings.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Escrow">
            <xs:annotation>
              <xs:documentation />
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PrePayDelivery">
            <xs:annotation>
              <xs:documentation />
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CODPrePayDelivery">
            <xs:annotation>
              <xs:documentation />
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PostalTransfer">
            <xs:annotation>
              <xs:documentation />
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LoanCheck">
            <xs:annotation>
              <xs:documentation>
						Loan check option (applicable only to the US eBay Motors site,
						except in the Parts and Accessories category, and the eBay Canada site for motors).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CashInPerson">
            <xs:annotation>
              <xs:documentation>
						Cash-in-person option. Applicable only to US and Canada eBay Motors vehicles,
						(not the Parts and Accessories category).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ELV">
            <xs:annotation>
              <xs:documentation>
						Elektronisches Lastschriftverfahren (direct debit).
						Only applicable to Express Germany.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaisaPayEscrowEMI">
            <xs:annotation>
              <xs:documentation>
							PaisaPayEscrow EMI (Equal Monthly Installment) payment method. 
							The PaisaPayEscrowEMI payment method is only for the India site (site ID 203).
						</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Moneybookers">
            <xs:annotation>
              <xs:documentation>
						The Moneybookers payment method. 
						For more information, see http://www.moneybookers.com/partners/us/ebay. 
						Only applicable to the US site (and 
						to the Parts and Accessories category of the US eBay Motors site).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Paymate">
            <xs:annotation>
              <xs:documentation>
						The Paymate payment method. For more information, 
						see http://www.paymate.com/eBay. 
						Only applicable to the US site (and 
						to the Parts and Accessories category of the US eBay Motors site).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProPay">
            <xs:annotation>
              <xs:documentation>
						The ProPay payment method. US site only. For more information, 
						see http://www.Propay.com/eBay.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="StandardPayment">
            <xs:annotation>
              <xs:documentation>
						For all payment intermediated transactions, If the authenticated caller is a seller then Standard Payment Method is returned to as Payment Method Used to sellers.
						OrderArray.Order.CheckoutStatus.PaymentMethod (GetOrders, GetOrderTransaction) and OrderArray.Order
						.TransactionArray.Transaction.Status (For all the 4 APIs).
					    The COD (Cash on Demand) or POP (Pay on Pickup) should be shown as is to the buyers and sellers, these payment methods are not intermediated.
  					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="BuyingGuideDetailsType">
        <xs:annotation>
          <xs:documentation>
				Information about zero or more buying guides and the site's buying guide hub.
				Buying guides contain content about particular product areas, categories, or subjects
				to help buyers decide which type of item to purchase based on their particular interests.
				Multiple buying guides can be returned. See the eBay Web Services Guide for additional information.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="BuyingGuide" type="ns:BuyingGuideType">
            <xs:annotation>
              <xs:documentation>
						Information that identifies a buying guide. A buying guide contains content about particular
						product areas, categories, or subjects to help buyers decide which type of item
						to purchase based on their particular interests.
						Buying guides are useful to buyers who do not have a specific product in mind.
						For example, a digital camera buying guide could help a buyer determine what kind of
						digital camera is right for them.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BuyingGuideHub" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						URL of the buying guide home page for the site being searched.
						Your application can present this URL as a link. Optionally,
						you can use a value like "See all buying guides" as the link's
						display name. 
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BuyingGuideType">
        <xs:annotation>
          <xs:documentation>
				Information that identifies a buying guide. A buying guide provides content about particular
				product areas, categories, or subjects to help buyers decide which type of item
				to purchase based on their particular interests.
				Buying guides are useful to buyers who do not have a specific product in mind.
				For example, a digital camera buying guide could help a buyer determine what kind of
				digital camera is right for them.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Name" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					Display name of the buying guide. &lt;br&gt;
					&lt;br&gt;
					FindReviewsAndGuides only returns 20 characters, followed by "..." if the name is
					longer than 20 characters. For the full title, see BuyingGuide.Title
					instead.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="URL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
					URL for the buying guide. Your application can
					present this as a link. Use the value of Name or Title as the link's display name.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CategoryID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					Identifies the category (if any) that is associated
					with the buying guide. For FindReviewsAndGuides, this can be a category that is higher or lower in the hierarchy
					than the category specified in the request. For a matching categories search,
					you can use this information to determine the order that the buying guides are
					returned in when multiple guides are found.
					Optionally, you can use this information to determine where to present
					the buying guide link in your application.
				</xs:documentation>
              <xs:appinfo>
                <MaxLength>10</MaxLength>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Title" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The title of the buying guide.
				   </xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <MaxLength>55</MaxLength>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Text" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The text of the guide. If the guide is longer than
						2000 characters, the text is cut off and it ends with "...".
						See BuyingGuide.URL for a link to the full text of the review.
				   </xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <MaxLength>2000</MaxLength>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreationTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>
						The time and date when the guide was posted.
				   </xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="UserID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The author's eBay user ID.
				   </xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CatalogProductType">
        <xs:annotation>
          <xs:documentation>
			Information about an eBay catalog product.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="DomainName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The name of the domain in which the product was found.
						If the product is mapped to multiple domains, eBay returns
						the most applicable domain (as determined by eBay).
						Always returned when Product is returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DetailsURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						Fully qualified URL for optional information about the product,
						such as a movie's description or film credits. This information
						is hosted through the eBay Web site and it cannot be edited.
						Portions of the content are protected by copyright.
						Applications can include this URL as a link in product search results
						so that end users can view additional descriptive details about
						the product. This is usually always returned when Product is returned,
						but it may be safest to check for the existence of this field.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DisplayStockPhotos" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						If true, your application can attempt to display stock photos that
						are returned. If false, your application should not attempt to display
						any stock photos that are returned. This recommendation is useful for
						catalog data related to products like coins, where stock photos are not
						necessarily applicable or available. An application with a graphical
						user interface can use this flag to determine
						when to hide customized stock photo widgets.
						Always returned when Product is returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ProductID" type="ns:ProductIDType">
            <xs:annotation>
              <xs:documentation>
						The eBay or external IDs associated with the product. Use the Reference
						value as input to search for the same product in the future, or
						use the ISBN, EAN, or UPC value (if returned).
						The ISBN, EAN, and UPC values can also be useful as keys
						if your application is comparing products across different sites.
						Always returned when Product is returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ItemCount" type="xs:int">
            <xs:annotation>
              <xs:documentation>
					Total number of listings on the requested eBay site that use
					stock information from this catalog product. This value can be greater
					than the number of listings returned in ItemArray. To retrieve more
					listings, use the &lt;a href="http://www.developer.ebay.com/DevZone/finding/CallRef/index.html"&gt;Finding API&lt;/a&gt;.
					Only returned when you search by ProductID (and you pass
					Items or Details in IncludeSelector).
					</xs:documentation>
              <xs:appinfo>
                <Min>0</Min>
                <Max />
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ItemSpecifics" type="ns:NameValueListArrayType">
            <xs:annotation>
              <xs:documentation>
						A list of name/value pairs that are included in the product's
						pre-filled Item Specifics. These indicate common aspects or
						characteristics of the product, such as Publisher (for a book).
						Also see ProductID for ISBN, UPC, or EAN values, if applicable.
						This is usually returned. (We are not aware of any cases in which this
						node is not be returned. However, it may be safest to check for the
						existence of this node.)
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ReviewCount" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						The total number of reviews that are available for this product
						on the eBay Web site. This can be greater than the number of
						reviews returned by FindProducts. In a future release, we will provide
						the capability to retrieve details about reviews.
						Always returned when Product is returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                  <Min>0</Min>
                  <Max />
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StockPhotoURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						Fully qualified URL for a stock image (if any) that is associated
						with the eBay catalog product. The URL is for the image eBay
						usually displays in product search results (usually 70px tall).
						It may be helpful to calculate the dimensions of the photo
						programmatically before displaying it.
						Only returned if a URL is available for the product.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Title" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The title of the product, as specified in the catalog.
						Always returned when Product is returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ProductState" type="ns:ProductStateCodeType">
            <xs:annotation>
              <xs:documentation>
						Indicates that the product has changed or will soon change (usually due to a
						migration from one catalog to another catalog). Typically, this field is returned
						for up to 90 days for a given product. After that, the product either no longer
						returns this field or the product is no longer returned (depending on the state
						change). As of mid-2008, this data is primarily applicable to catalogs used by the
						US, Germany, Austria, and Switzerland sites. Other sites may undergo catalog
						changes in the future.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CategoryArrayType">
        <xs:annotation>
          <xs:documentation>
				Container for a list of categories.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Category" type="ns:CategoryType">
            <xs:annotation>
              <xs:documentation>
						Contains details about a category.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetCategoryInfo</CallName>
                  <Details>IncludeSelector: none, ChildCategories</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CategoryType">
        <xs:annotation>
          <xs:documentation>
				Contains details about a category.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CategoryID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The numeric ID of a category on eBay.
						&lt;br&gt;
						&lt;br&gt;
						Use an ID of -1 to retrieve the root category and the top-level (level 1) meta
						categories. You can determine other CategoryIDs from the response from this
						call, or from a specific item (retrieved from another call like
						GetSingleItem), or from the eBay website.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetCategoryInfo</CallName>
                  <Details>IncludeSelector: none, ChildCategories</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CategoryLevel" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						The level where the category fits in the site's category hierarchy.
						For example, if this field has a value of 2, then the category is 2
						levels below the root category.
						&lt;br&gt;
						&lt;br&gt;
						Note that the value of CategoryLevel will always be 1 level below the level
						of the requested category. To retrieve a category's children, pass its
						CategoryID back into the request.
						&lt;br&gt;
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetCategoryInfo</CallName>
                  <Details>IncludeSelector: none, ChildCategories</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CategoryName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Display name of the category as it would appear on
						the eBay Web site.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetCategoryInfo</CallName>
                  <Details>IncludeSelector: none, ChildCategories</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CategoryParentID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Category ID identifying a category that is an ancestor of
						the category indicated in CategoryID.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetCategoryInfo</CallName>
                  <Details>IncludeSelector: none, ChildCategories</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CategoryParentName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Display name of the category indicated in CategoryParentID.
					</xs:documentation>
              <xs:appinfo>
                <NoCalls />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ItemCount" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						The total quantity of matching items in the category.
						In the FindItemsAdvanced response, matching categories at the same level
						(i.e., sibling categories) are sorted by ItemCount. That is, if the request
						specifies that fewer categories or subcategories should be returned,
						the ones with the most matching items are returned first.
					</xs:documentation>
              <xs:appinfo>
                <NoCalls />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CategoryNamePath" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The fully qualified category display name as it would appear on the
						eBay site (e.g., Home &amp; Garden:Kitchen:Tools &amp; Gadgets).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetCategoryInfo</CallName>
                  <Details>IncludeSelector: none, ChildCategories</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CategoryIDPath" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The fully qualified category ID (e.g., 11700:20625:20635 for Home &amp;
						Garden:Kitchen:Tools &amp; Gadgets).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetCategoryInfo</CallName>
                  <Details>IncludeSelector: none, ChildCategories</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LeafCategory" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						If true, indicates that the category indicated in CategoryID is a leaf
						category, in which items may be listed (if the category is not also
						expired or virtual).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetCategoryInfo</CallName>
                  <Details>IncludeSelector: none, ChildCategories</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="CharityStatusCodeType">
        <xs:annotation>
          <xs:documentation>
			    CharityStatusCodeType - Type declaration to be used by other schema.
			    Indicates the nonprofit status of the nonprofit charity organization registered with the dedicated eBay Giving Works provider.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Valid">
            <xs:annotation>
              <xs:documentation>
					  (out)	The specified nonprofit charity organization is a valid nonprofit charity organization according to the requirements of the dedicated eBay Giving Works provider.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NoLongerValid">
            <xs:annotation>
              <xs:documentation>
					  (out)	The specified nonprofit charity organization is no longer a valid nonprofit charity organization according to the requirements of the dedicated eBay Giving Works provider.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="CharityType">
        <xs:annotation>
          <xs:documentation>
				Identifies a Giving Works listing and benefiting nonprofit charity organization.
				Currently supported through the US and eBay Motors sites only. The Ad Format and
				Mature Audiences categories are not supported.
				Not applicable for US eBay Motors, international, Real Estate, and Tickets.
			</xs:documentation>
          <xs:appinfo>
            <CallInfo>
              <CallName>GetSingleItem</CallName>
              <CallName>GetMultipleItems</CallName>
              <Returned>Conditionally</Returned>
              <Details>IncludeSelector: Details</Details>
            </CallInfo>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CharityID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						A unique identification number assigned by eBay to
						registered nonprofit charity organizations.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CharityName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The name of the benefiting nonprofit charity organization selected by the
						charity seller.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CharityNumber" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						A unique identification number assigned to a nonprofit
						charity organization by the dedicated provider of
						eBay Giving Works. Being superseded by CharityID. Max 10
						digits.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DonationPercent" type="xs:float">
            <xs:annotation>
              <xs:documentation>
						The percentage of the purchase price that the
						seller chooses to donate to the selected nonprofit
						organization. This percentage is displayed in the Giving
						Works item listing. Possible values: 10.0 to 100.0.
						Percentages must increment by 5.0. Minimum donation
						percentages may be required for Giving Works listings, see
						http://pages.ebay.com/help/sell/selling-nonprofit.html for
						details. DonationPercent is required input when listing
						Giving Works items.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Mission" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The stated mission of the nonprofit charity
						organization. This mission is displayed in the Giving Works
						item listing.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LogoURL" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The URL of the nonprofit charity organization. This
						URL is displayed in the Giving Works item listing.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CharityListing" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						If true, indicates that the seller has chosen to use
						eBay Giving Works to donate a percentage of the item's
						purchase price to a selected nonprofit organization.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Status" type="ns:CharityStatusCodeType">
            <xs:annotation>
              <xs:documentation>
						The status of the nonprofit charity organization.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="CountryCodeType">
        <xs:annotation>
          <xs:documentation>
				Defines the standard 2-letter ISO 3166 country code set, plus
				some additional country codes that eBay uses.
				(The additional codes appear at the end of this code list and
				are noted as non-ISO.)
				For English names that correspond to each code (e.g., KY="Cayman Islands"),
				see the ISO site:
				http://www.iso.ch/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/list-en1.html
			</xs:documentation>
          <xs:appinfo>
            <allValuesExcept>QP</allValuesExcept>
          </xs:appinfo>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="AF" />
          <xs:enumeration value="AL" />
          <xs:enumeration value="DZ" />
          <xs:enumeration value="AS" />
          <xs:enumeration value="AD" />
          <xs:enumeration value="AO" />
          <xs:enumeration value="AI" />
          <xs:enumeration value="AQ" />
          <xs:enumeration value="AG" />
          <xs:enumeration value="AR" />
          <xs:enumeration value="AM" />
          <xs:enumeration value="AW" />
          <xs:enumeration value="AU" />
          <xs:enumeration value="AT" />
          <xs:enumeration value="AZ" />
          <xs:enumeration value="BS" />
          <xs:enumeration value="BH" />
          <xs:enumeration value="BD" />
          <xs:enumeration value="BB" />
          <xs:enumeration value="BY" />
          <xs:enumeration value="BE" />
          <xs:enumeration value="BZ" />
          <xs:enumeration value="BJ" />
          <xs:enumeration value="BM" />
          <xs:enumeration value="BT" />
          <xs:enumeration value="BO" />
          <xs:enumeration value="BA" />
          <xs:enumeration value="BW" />
          <xs:enumeration value="BV" />
          <xs:enumeration value="BR" />
          <xs:enumeration value="IO" />
          <xs:enumeration value="BN" />
          <xs:enumeration value="BG" />
          <xs:enumeration value="BF" />
          <xs:enumeration value="BI" />
          <xs:enumeration value="KH" />
          <xs:enumeration value="CM" />
          <xs:enumeration value="CA" />
          <xs:enumeration value="CV" />
          <xs:enumeration value="KY" />
          <xs:enumeration value="CF" />
          <xs:enumeration value="TD" />
          <xs:enumeration value="CL" />
          <xs:enumeration value="CN" />
          <xs:enumeration value="CX" />
          <xs:enumeration value="CC" />
          <xs:enumeration value="CO" />
          <xs:enumeration value="KM" />
          <xs:enumeration value="CG" />
          <xs:enumeration value="CD" />
          <xs:enumeration value="CK" />
          <xs:enumeration value="CR" />
          <xs:enumeration value="CI" />
          <xs:enumeration value="HR" />
          <xs:enumeration value="CU" />
          <xs:enumeration value="CY" />
          <xs:enumeration value="CZ" />
          <xs:enumeration value="DK" />
          <xs:enumeration value="DJ" />
          <xs:enumeration value="DM" />
          <xs:enumeration value="DO" />
          <xs:enumeration value="TP" />
          <xs:enumeration value="EC" />
          <xs:enumeration value="EG" />
          <xs:enumeration value="SV" />
          <xs:enumeration value="GQ" />
          <xs:enumeration value="ER" />
          <xs:enumeration value="EE" />
          <xs:enumeration value="ET" />
          <xs:enumeration value="FK" />
          <xs:enumeration value="FO" />
          <xs:enumeration value="FJ" />
          <xs:enumeration value="FI" />
          <xs:enumeration value="FR" />
          <xs:enumeration value="GF" />
          <xs:enumeration value="PF">
            <xs:annotation>
              <xs:documentation>
						French Polynesia. Includes Tahiti.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TF" />
          <xs:enumeration value="GA" />
          <xs:enumeration value="GM" />
          <xs:enumeration value="GE" />
          <xs:enumeration value="DE" />
          <xs:enumeration value="GH" />
          <xs:enumeration value="GI" />
          <xs:enumeration value="GR" />
          <xs:enumeration value="GL" />
          <xs:enumeration value="GD" />
          <xs:enumeration value="GP" />
          <xs:enumeration value="GU" />
          <xs:enumeration value="GT" />
          <xs:enumeration value="GN" />
          <xs:enumeration value="GW" />
          <xs:enumeration value="GY" />
          <xs:enumeration value="HT" />
          <xs:enumeration value="HM" />
          <xs:enumeration value="VA" />
          <xs:enumeration value="HN" />
          <xs:enumeration value="HK" />
          <xs:enumeration value="HU" />
          <xs:enumeration value="IS" />
          <xs:enumeration value="IN" />
          <xs:enumeration value="ID" />
          <xs:enumeration value="IR" />
          <xs:enumeration value="IQ" />
          <xs:enumeration value="IE" />
          <xs:enumeration value="IL" />
          <xs:enumeration value="IT" />
          <xs:enumeration value="JM" />
          <xs:enumeration value="JP" />
          <xs:enumeration value="JO" />
          <xs:enumeration value="KZ" />
          <xs:enumeration value="KE" />
          <xs:enumeration value="KI" />
          <xs:enumeration value="KP" />
          <xs:enumeration value="KR" />
          <xs:enumeration value="KW" />
          <xs:enumeration value="KG" />
          <xs:enumeration value="LA" />
          <xs:enumeration value="LV" />
          <xs:enumeration value="LB" />
          <xs:enumeration value="LS" />
          <xs:enumeration value="LR" />
          <xs:enumeration value="LY" />
          <xs:enumeration value="LI" />
          <xs:enumeration value="LT" />
          <xs:enumeration value="LU" />
          <xs:enumeration value="MO" />
          <xs:enumeration value="MK" />
          <xs:enumeration value="MG" />
          <xs:enumeration value="MW" />
          <xs:enumeration value="MY" />
          <xs:enumeration value="MV" />
          <xs:enumeration value="ML" />
          <xs:enumeration value="MT" />
          <xs:enumeration value="MH" />
          <xs:enumeration value="MQ" />
          <xs:enumeration value="MR" />
          <xs:enumeration value="MU" />
          <xs:enumeration value="YT" />
          <xs:enumeration value="MX" />
          <xs:enumeration value="FM" />
          <xs:enumeration value="MD" />
          <xs:enumeration value="MC" />
          <xs:enumeration value="MN" />
          <xs:enumeration value="MS" />
          <xs:enumeration value="MA" />
          <xs:enumeration value="MZ" />
          <xs:enumeration value="MM" />
          <xs:enumeration value="NA" />
          <xs:enumeration value="NR" />
          <xs:enumeration value="NP" />
          <xs:enumeration value="NL" />
          <xs:enumeration value="AN" />
          <xs:enumeration value="NC" />
          <xs:enumeration value="NZ" />
          <xs:enumeration value="NI" />
          <xs:enumeration value="NE" />
          <xs:enumeration value="NG" />
          <xs:enumeration value="NU" />
          <xs:enumeration value="NF" />
          <xs:enumeration value="MP" />
          <xs:enumeration value="NO" />
          <xs:enumeration value="OM" />
          <xs:enumeration value="PK" />
          <xs:enumeration value="PW" />
          <xs:enumeration value="PS" />
          <xs:enumeration value="PA" />
          <xs:enumeration value="PG" />
          <xs:enumeration value="PY" />
          <xs:enumeration value="PE" />
          <xs:enumeration value="PH" />
          <xs:enumeration value="PN" />
          <xs:enumeration value="PL" />
          <xs:enumeration value="PT" />
          <xs:enumeration value="PR" />
          <xs:enumeration value="QA" />
          <xs:enumeration value="RE" />
          <xs:enumeration value="RO" />
          <xs:enumeration value="RU" />
          <xs:enumeration value="RW" />
          <xs:enumeration value="SH" />
          <xs:enumeration value="KN" />
          <xs:enumeration value="LC" />
          <xs:enumeration value="PM" />
          <xs:enumeration value="VC" />
          <xs:enumeration value="WS" />
          <xs:enumeration value="SM" />
          <xs:enumeration value="ST" />
          <xs:enumeration value="SA" />
          <xs:enumeration value="SN" />
          <xs:enumeration value="SC" />
          <xs:enumeration value="SL" />
          <xs:enumeration value="SG" />
          <xs:enumeration value="SK" />
          <xs:enumeration value="SI" />
          <xs:enumeration value="SB" />
          <xs:enumeration value="SO" />
          <xs:enumeration value="ZA" />
          <xs:enumeration value="GS" />
          <xs:enumeration value="ES" />
          <xs:enumeration value="LK" />
          <xs:enumeration value="SD" />
          <xs:enumeration value="SR" />
          <xs:enumeration value="SJ" />
          <xs:enumeration value="SZ" />
          <xs:enumeration value="SE" />
          <xs:enumeration value="CH" />
          <xs:enumeration value="SY" />
          <xs:enumeration value="TW" />
          <xs:enumeration value="TJ" />
          <xs:enumeration value="TZ" />
          <xs:enumeration value="TH" />
          <xs:enumeration value="TG" />
          <xs:enumeration value="TK" />
          <xs:enumeration value="TO" />
          <xs:enumeration value="TT" />
          <xs:enumeration value="TN" />
          <xs:enumeration value="TR" />
          <xs:enumeration value="TM" />
          <xs:enumeration value="TC" />
          <xs:enumeration value="TV" />
          <xs:enumeration value="UG" />
          <xs:enumeration value="UA" />
          <xs:enumeration value="AE" />
          <xs:enumeration value="GB" />
          <xs:enumeration value="US" />
          <xs:enumeration value="UM" />
          <xs:enumeration value="UY" />
          <xs:enumeration value="UZ" />
          <xs:enumeration value="VU" />
          <xs:enumeration value="VE" />
          <xs:enumeration value="VN" />
          <xs:enumeration value="VG" />
          <xs:enumeration value="VI" />
          <xs:enumeration value="WF" />
          <xs:enumeration value="EH" />
          <xs:enumeration value="YE" />
          <xs:enumeration value="YU" />
          <xs:enumeration value="ZM" />
          <xs:enumeration value="ZW" />
          <xs:enumeration value="AA">
            <xs:annotation>
              <xs:documentation>
										NOTE: APO/FPO was defined in eBay list previously
										but they are not defined in ISO 3166. This country
										will remain on eBay country code list for backward
										compatibility.
								 </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="QM">
            <xs:annotation>
              <xs:documentation>
										NOTE: Guernsey was defined in eBay list previously
										but they are not defined in ISO 3166. This country
										will remain on eBay country list for backward
										compatibility.
								 </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="QN">
            <xs:annotation>
              <xs:documentation>
										 NOTE: Jan Mayen was defined in eBay list previously
										 but they are not defined in ISO 3166. This country
										 will remain on eBay country list for backward
										 compatibility.
								 </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="QO">
            <xs:annotation>
              <xs:documentation>
										 NOTE: Jersey was defined in eBay list previously
										 but they are not defined in ISO 3166. This country
										 will remain on eBay country list for backward
										 compatibility.
								 </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="QP">
            <xs:annotation>
              <xs:documentation />
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="DiscountPriceInfoType">
        <xs:annotation>
          <xs:documentation>
				Contains the discount pricing details for an item, including the original
				retail price and the display treatment to be used for the item. The pricing
				treatment displayed for a discounted item depends on the values specified
				in this container when the item is listed. Discount pricing treatments
				(Strikethrough Pricing and Minimum Advertised Price) apply to only fixed
				price, BIN items. Sellers can apply Discount Pricing to both MSKU and
				Non-MSKU items.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="OriginalRetailPrice" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						This field specifies the price to which the discounted-price display
						treatment will be applied (for example, a strikethrough price). The
						discounted price of an item (specified in the CurrentPrice field) is
						the BIN price and is less than the OriginalRetailPrice of the item.
						&lt;br /&gt;&lt;br /&gt;
						See &lt;a href=
						"http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=DiscountPricing"&gt;
						Displaying Discount Pricing Information to Buyers&lt;/a&gt; for
						guidelines on displaying STP and MAP items.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumAdvertisedPrice" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						A value equal to the agreed upon minimum advertised price.
						&lt;br&gt;&lt;br&gt;
						The minimum advertised price is an agreed upon price that is set by the
						suppliers/OEMs and the retailers/sellers. The minimum advertised price
						is the lowest price for which an item can be advertised. Large volume
						sellers can negotiate with the suppliers/OEMs to offer certain items
						below the set minimum advertised price. eBay does not maintain or
						validate the agreed upon minimum advertised price; the seller is
						responsible for setting this value in accordance with their agreement
						with the supplier/OEMs. MAP pricing treatments apply to only fixed price,
						BIN items listed on the eBay US site.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumAdvertisedPriceExposure" type="ns:MinimumAdvertisedPriceExposureCodeType">
            <xs:annotation>
              <xs:documentation>
						If an item listing qualifies it to be listed as a MAP item
						(PricingTreatment returns MAP), the item price cannot be directly
						displayed on the page containing the item. When listing a MAP item,
						the seller stipulates how they want the buyer to view the price of the
						item by setting this field to either PreCheckout or DuringCheckout. If
						this feild is not set for a MAP item, the treatment defaults to PreCheckout.
						&lt;br /&gt;&lt;br /&gt;
						If this field is set to PreCheckout, the buyer must click a link (or
						button) to view the item price on a different page (such as in a pop-up
						window). If this field is set to DuringCheckout, the StartPrice must be
						shown only when the buyer in the eBay checkout flow.
						&lt;br /&gt;&lt;br /&gt;
						MAP items are supported only on the eBay US site.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PricingTreatment" type="ns:PricingTreatmentCodeType">
            <xs:annotation>
              <xs:documentation>
						This field denotes whether or not an item qualifies for a discount
						pricing treatment display. If a seller lists an item with
						DiscountPriceInfo values, the item response container will include
						a DiscountPriceInfo container with this field set to either
						STP, MAP, or None. If this field is set to MAP, you must abide
						by the rules for displaying MAP items, as described in
						MinimumAdvertisedPriceExposure.
						&lt;br /&gt; &lt;br /&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Important:&lt;/b&gt;
						For listings that return PricingTreatment set to MAP, you are
						legally required to follow the rules for displaying the price of
						the item to potential buyers. You are bound by the terms of the
						API License Agreement to follow these rules. Refer to the
						API License Agreement for consequences of non-compliance.
						&lt;/span&gt;
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="false" name="SoldOneBay" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Used by the eBay UK and eBay Germany (DE) sites, this field indicates
						that the discount price (specified as CurrentPrice) is the price for
						which the seller offered the same (or similar) item for sale on eBay
						within the previous 30 days. The discount price is always in reference
						to the seller's own price for the item.
						&lt;br /&gt;&lt;br /&gt;
						In the event both soldOffeBay and soldOneBay fields are	set, soldOneBay
						takes precedence.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" default="false" name="SoldOffeBay" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Used by the eBay UK and eBay Germany (DE) sites, this field indicates
						that the discount price (specified as currentPrice) is the price for
						which the seller offered the same item for sale on a web site or offline
						store other than eBay in the previous 30 days. The discount price is
						always in reference to the seller's own price for the item.
						&lt;br /&gt;&lt;br /&gt;
						In the event both soldOffeBay and soldOneBay fields are	set, soldOneBay
						takes precedence.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DistanceType">
        <xs:annotation>
          <xs:documentation>
			 	Distance, used for a proximity search.
			</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
          <xs:extension base="xs:double">
            <xs:attribute name="unit" type="xs:string" />
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="DomainHistogramType">
        <xs:annotation>
          <xs:documentation>
				A generic type used for histograms.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Domain" type="ns:HistogramEntryType">
            <xs:annotation>
              <xs:documentation>
						Each histogram entry shows how many matching products
						were found in each matching domain. A domain is like a high-level
						category, or a group of categories whose items share the same basic
						product characteristics.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: DomainHistogram</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ExternalProductCodeType">
        <xs:annotation>
          <xs:documentation>
				Indicates the type of external product ID being used to identify a
				stock product.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="ISBN">
            <xs:annotation>
              <xs:documentation>
						ExternalProductID.Value contains an ISBN value.
						Required when you pass an ISBN as the external product ID.
						(This value is also applicable to Half.com listings.)
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UPC">
            <xs:annotation>
              <xs:documentation>
						ExternalProductID.Value contains a UPC value.
						Required when you pass a UPC as the external product ID.
						(This value is also applicable to Half.com listings.)
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProductID">
            <xs:annotation>
              <xs:documentation>
						ExternalProductID.Value contains an eBay catalog product ID.
						Required when you pass an eBay product ID
						as the external product ID.
						Not applicable with FindItemsAdvanced or FindProducts.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="EAN">
            <xs:annotation>
              <xs:documentation>
						ExternalProductID.Value contains an EAN value.
						Required when you pass an EAN as the external product ID.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Keywords">
            <xs:annotation>
              <xs:documentation>
						ExternalProductID.Value contains a set of keywords that uniquely identify the product.
						Only applicable when listing event ticket.
						See the eBay Web Services guide for information about valid
						ticket keywords for an external product ID.
						Required when you pass a set of keywords as the external product ID.
						Not applicable with FindItemsAdvanced or FindProducts. 
						With FindItemsAdvanced, use TicketFinder instead.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MPN">
            <xs:annotation>
              <xs:documentation>
						Reserved for future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Reserved for internal or future use
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ExternalProductIDType">
        <xs:annotation>
          <xs:documentation>
				Contains an ISBN value, EAN value, UPC value, ticket keywords, or eBay
				catalog product ID, plus other meta-data. For event tickets, this type
				can contain a set of keywords that uniquely identify the product. Only
				applicable to certain categories that support Pre-filled Item
				Information.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Value" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						An industry-standard value that uniquely identifies the product. The
						valid values are dictated by the Type property.
						Required if Type is specified.
						Max length 13 for ISBN, 13 for EAN,
						12 for UPC, and 4000 for ProductID. No max length for ticket keywords
						(but passing too much data can result in "no match found"
						errors).&lt;br&gt;
						&lt;br&gt;
						&lt;b&gt;For AddItem and related calls:&lt;/b&gt;
						If the primary and secondary categories are both catalog-enabled,
						the value must apply to the primary category.
						Event tickets listings support a set of keywords
						that uniquely identify the listing. The ticket keywords specify the
						event name (the title shown on the ticket), venue name, and event
						date and time. See the eBay Web Services guide for more information
						and validation rules. For convenience, you can pass an eBay product ID
						as input (not limited to media categories).&lt;br&gt;
						&lt;br&gt;
						Required for Half.com listing use cases, and this can only be an
						ISBN, UPC, or EAN value.&lt;br&gt;
						&lt;br&gt;
						&lt;b&gt;For FindProducts input only:&lt;/b&gt;
						Only ISBN, EAN, and UPC values are currently supported as
						input.&lt;br&gt;
						&lt;br&gt;
						&lt;b&gt;For FindProducts and GetSellerPayments output only:&lt;/b&gt;
						Also see AlternateValue, which is returned if the catalog defines multiple
						ISBN values (e.g., one for ISBN-13 and one for ISBN-10). Please note that
						some catalogs return ISBN values that are not 10 or 13 characters, and some
						values contain non-alphanumeric symbols (e.g., $).
					</xs:documentation>
              <xs:appinfo>
                <MaxLength>See description</MaxLength>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>GetItemRecommendations</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <Context>Item.ExternalProductID</Context>
                  <RequiredInput>Conditionally</RequiredInput>
                  <!-- N/A to ReviseItem and RelistItem -->
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <RequiredInput>Conditionally</RequiredInput>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSellerPayments</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ReturnSearchResultOnDuplicates" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Applicable for listing use cases only (not buy-side searching).
						Indicates what eBay should do if more than one product matches
						the value passed in Value. Only takes effect when more than one
						match is found. If true, the response should include an error
						and all matching product IDs. If false, the response should include
						an error but should not return the matching product IDs.
						This field is also applicable when listing Half.com items.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>GetItemRecommendations</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <RequiredInput>No</RequiredInput>
                  <Context>Item.ExternalProductID</Context>
                  <!-- N/A to ReviseItem and RelistItem -->
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Type" type="ns:ExternalProductCodeType">
            <xs:annotation>
              <xs:documentation>
						The kind of identifier being used. The choices listed are for requests, are
						are required if Value is specified. For Half.com listing use cases, only
						ISBN, UPC, and EAN are supported.&lt;br&gt;
						&lt;br&gt;
						FindProducts supports ISBN, UPC, and EAN.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>GetItemRecommendations</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <Context>Item.ExternalProductID</Context>
                  <AllValuesExcept>MPN</AllValuesExcept>
                  <RequiredInput>Conditionally</RequiredInput>
                  <!-- N/A to ReviseItem and RelistItem -->
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <OnlyTheseValues>ISBN, UPC, EAN</OnlyTheseValues>
                  <RequiredInput>Conditionally</RequiredInput>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSellerPayments</CallName>
                  <!-- Half.com only supports BMMG categories.
							So, only ISBN, UPC, and EAN can
							be supported in Half.com use cases. -->
                  <OnlyTheseValues>ISBN, UPC, EAN</OnlyTheseValues>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="AlternateValue" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						An industry-standard value that provides an alternate identification for
						the product, if any. Currently, this only returns an alternate ISBN
						value. If the catalog defines both an ISBN-13 and ISBN-10,
						then the ISBN-13 is returned in Value and the ISBN-10 is returned in
						AlternateValue. (That is, the ISBN-13 is considered to be the preferred
						identifier.) If the catalog only defines one ISBN, it is returned in
						Value (and AlternateValue is not returned). Please note that some
						catalogs return ISBN values that are not 10 or 13 characters,
						and some values contain non-alphanumeric symbols (e.g., $).
					</xs:documentation>
              <xs:appinfo>
                <MaxLength>4000</MaxLength>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <CallName>GetSellerPayments</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeedbackDetailType">
        <xs:annotation>
          <xs:documentation>
				Detailed feedback information for a user. Conveys the score for the
				feedback, the textual comment, and other information.
		  </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CommentingUser" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						eBay user ID for the user who left the feedback.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CommentingUserScore" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						Feedback score of the user in CommentingUser.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CommentText" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Text message left by the user in CommentingUser. Used to provide a more
						in-depth description of the user's opinion of the transaction.
						Returned as text in the language that the
						comment was originally left in.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CommentTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>
						Date and time (in GMT) that the feedback was submitted to eBay.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CommentType" type="ns:CommentTypeCodeType">
            <xs:annotation>
              <xs:documentation>
						Type of feedback. Can be Positive, Neutral, Negative, or Withdrawn (see the
						CommentTypeCodeType code list). Positive feedbacks add to the user's total
						feedback score, negative feedbacks lower the score, and neutral feedbacks do
						not affect the score (but do affect the overall picture of the user's online
						reputation).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeedbackResponse" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Textual comment that the user targeted by feedback may leave
						in response or rebuttal to the feedback.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FollowUp" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Explanation a user can give to a response.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ItemID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The ID that uniquely identifies the item listing.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Role" type="ns:TradingRoleCodeType">
            <xs:annotation>
              <xs:documentation>
						Indicates whether the user who was the feedback recipient was a Buyer or the
						Seller for that transaction.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ItemTitle" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Name of the listing for which feedback was provided.
						Returned as CDATA.
						Not returned if a listing ended more than 90 days ago.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ItemPrice" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The final price for the item, associated with
						the currency identified by the currencyId attribute of the AmountType.
						Not returned if a listing ended more than 90 days ago.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FeedbackID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Unique identifier for the feedback entry.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TransactionID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Unique identifier for the transaction about which
						this feedback entry was left.
						This field is not returned in the case of TransactionIDs from Chinese auction listings,
						because a value of zero is used for TransactionIDs in such cases.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CommentReplaced" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Indicates whether eBay replaced the comment with a message
						that the comment was removed.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ResponseReplaced" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Indicates whether eBay replaced the response with a message
						that the response was removed.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FollowUpReplaced" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Indicates whether eBay replaced the follow-up with a message
						that the follow-up was removed.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Countable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Specifies if a user's feedback score is or is not countable. This field is
						returned only when a user's feedback score is not countable (value is false).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackDetails</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeedbackHistoryType">
        <xs:annotation>
          <xs:documentation>
				Specifies all feedback summary information (except Score). Contains
				objects that each convey feedback counts for
				positive, negative, neutral, and total feedback counts - for various
				time periods each. Also conveys counts of bid retractions for the
				predefined time periods.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="BidRetractionFeedbackPeriods" type="ns:FeedbackPeriodType">
            <xs:annotation>
              <xs:documentation>
						Bid retractions count, for multiple predefined time periods preceding
						the call. 
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="NegativeFeedbackPeriods" type="ns:FeedbackPeriodType">
            <xs:annotation>
              <xs:documentation>
						Negative feedback entries count, for multiple predefined time periods preceding
						the call. 
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="NeutralFeedbackPeriods" type="ns:FeedbackPeriodType">
            <xs:annotation>
              <xs:documentation>
						Neutral feedback entries count, for multiple predefined time periods preceding
						the call. 
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PositiveFeedbackPeriods" type="ns:FeedbackPeriodType">
            <xs:annotation>
              <xs:documentation>
						Positive feedback entries count, for multiple predefined time periods
						preceding the call. 
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="TotalFeedbackPeriods" type="ns:FeedbackPeriodType">
            <xs:annotation>
              <xs:documentation>
						Total feedback score, for multiple predefined time periods preceding the
						call. 
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="UniqueNegativeFeedbackCount" type="xs:long">
            <xs:annotation>
              <xs:documentation>
						Total number of negative Feedback comments received by the user, including weekly repeats.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="UniquePositiveFeedbackCount" type="xs:long">
            <xs:annotation>
              <xs:documentation>
						Total number of positive Feedback comments received by the user, including weekly repeats.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="AverageRatingDetails" type="ns:AverageRatingDetailsType">
            <xs:annotation>
              <xs:documentation>
						Container for information about detailed seller ratings (DSRs)
						that buyers have left for a seller.
						Sellers have access to the number of ratings they've received, as well as
						to the averages of DSRs they've received in each
						DSR area (i.e., to the average of ratings in the item-description area, etc.).  
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NeutralCommentCountFromSuspendedUsers" type="xs:long">
            <xs:annotation>
              <xs:documentation>
						Number of neutral comments received from suspended users.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="UniqueNeutralFeedbackCount" type="xs:long">
            <xs:annotation>
              <xs:documentation>
						Total number of neutral Feedback comments received by the user, including weekly repeats. 
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeedbackPeriodType">
        <xs:annotation>
          <xs:documentation>
					Contains the data for one type of feedback for one predefined time
					period. Parent FeedbackPeriodArrayType object indicates the type of
					feedback counted: positive, neutral, negative, or total. 
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="PeriodInDays" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						Indicates the time period for the feedback count. Returns a value indicating
						the number of days prior to the call for which feedbacks of the particular
						type are counted.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Count" type="xs:long">
            <xs:annotation>
              <xs:documentation>
						Count of the feedbacks received by the user for the time period prior to the
						call indicated in PeriodInDays.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetUserProfile</CallName>
                  <Details>IncludeSelector: FeedbackHistory</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="FeedbackRatingDetailCodeType">
        <xs:annotation>
          <xs:documentation>
				Applicable to sites that support the Detailed Seller Ratings feature.
				The FeedbackRatingDetailCodeType is the list of areas for detailed seller ratings. When buyers leave an overall Feedback rating (positive, neutral, or negative) for a seller, they also can leave ratings in four areas: item as described, communication, shipping time, and charges for shipping and handling. Users retrieve detailed ratings as averages of the ratings left by buyers. 
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="ItemAsDescribed">
            <xs:annotation>
              <xs:documentation>
						Detailed seller rating in the area of "item as described."
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Communication">
            <xs:annotation>
              <xs:documentation>
						Detailed seller rating in the area of "communication."
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ShippingTime">
            <xs:annotation>
              <xs:documentation>
						Detailed seller rating in the area of "shipping time." Inapplicable to 
						motor vehicle items.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ShippingAndHandlingCharges">
            <xs:annotation>
              <xs:documentation>
						Detailed seller rating in the area of "charges for shipping and handling."
						Inapplicable to motor vehicle items. 
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="FindHalfProductsRequest" type="ns:FindHalfProductsRequestType" />
      <xs:complexType name="FindHalfProductsRequestType">
        <xs:annotation>
          <xs:documentation>
				Searches Half.com for stock product information (stock description
				and Item Specifics), such as information about a particular
				kind of DVD or book. Also, retrieves up to 30 Half.com listings associated
				with a product.
			</xs:documentation>
          <xs:appinfo>
            <Summary>
					Searches Half.com for stock product information (stock description
					and Item Specifics), such as information about a particular
					kind of DVD or book. Also, retrieves up to 30 Half.com listings associated
					with a product.
				</Summary>
            <relatedCallsOther>
              <apiNickname>HalfFinding</apiNickname>
              <apiCallRefBaseURL>http://developer.ebay.com/devzone/half-finding/CallRef</apiCallRefBaseURL>
              <relatedCall>
                <name>findHalfItems</name>
                <summary>Searches Half.com for items associated with the specified product ID, 
						returning as many as 1500 items per product. </summary>
              </relatedCall>
            </relatedCallsOther>
            <TempInfo>IncludeSelector</TempInfo>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" name="IncludeSelector" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								Defines standard subsets of fields to return within the
								response.&lt;br&gt;
								&lt;br&gt;
								If you don't specify this field, the call returns a default
								set of fields, focusing on product details only
								(see the "Detail Controls" link below). If you specify this
								field, the additional fields you retrieve can affect the call's
								response time (performance).&lt;br&gt;
								&lt;br&gt;
								&lt;b&gt;Applicable values&lt;/b&gt;:
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Items&lt;/p&gt;
									&lt;p class="edef"&gt;Include a brief set of item fields
									in the response.
									Only applicable when you are searching by ProductID.
									Not applicable with QueryKeywords.&lt;/p&gt;
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; DomainHistogram&lt;/p&gt;
									&lt;p class="edef"&gt;Include the DomainHistogram in
									the response. The histogram lists the number of matching
									products found and the domains in which they were found.
									(A domain is like a high-level category.)
									When many matching products are found, you may see
									significantly slower response times when you include
									the histogram.&lt;/p&gt;
								&lt;br&gt;
								&lt;br&gt;
								Use a comma to specify multiple values. (In this case,
								the results are cumulative.) See "FindHalfProducts Samples"
								for an example of how to use this field.&lt;br&gt;
								&lt;br&gt;
								See "Detail Controls" for a complete list of
								fields that can be returned for each selector.
							</xs:documentation>
                  <xs:appinfo>
                    <MaxLength />
                    <PresentDetails>Yes</PresentDetails>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="AvailableItemsOnly" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>
								If true, only retrieve data for products that have been used to
								pre-fill active listings on the Half.com site.
								If false, retrieve all products that match the query.
								This is useful when you use QueryKeywords and you only want to
								find products that have associated items (that is, where ItemArray
								would not be empty).&lt;br&gt;
								&lt;br&gt;
								By default, AvailableItemsOnly does not retrieve an ItemArray; it only controls
								which products are returned (or counted). When you use QueryKeywords in your
								request, only products are returned, ItemArray is never returned.
								To retrieve an ItemArray, use a ProductID in your request instead of a
								QueryKeyword and specify Items in the IncludeSelector field.
							</xs:documentation>
                  <xs:appinfo>
                    <Default>false</Default>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="DomainName" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								A domain to search in. This is like searching a section of
								a catalog. If not specified, the product search is conducted
								across all domains.
								DomainName is an unbounded field. If you are using a URL, and you want
								to specify multiple values, use an index value (not a comma).
								For example, to specify DomainName=Textbooks,Education,
								specify DomainName(0)=Textbooks,%20Education.
								To determine valid domain names,
								first use this call with QueryKeywords. Domain names are returned
								for each product (and summarized in the domain histogram, if you
								specify DomainHistogram in IncludeSelector).&lt;br&gt;
								&lt;br&gt;
								A domain is a named grouping of categories whose items share
								common product characteristics. For example, all bound books
								have a binding or format (e.g., Hardcover), but audiobooks don't.
								So audiobooks would have their own domain.
								To limit your search to audiobooks, you would specify Audiobooks
								as the domain.&lt;br&gt;
								&lt;br&gt;
								Only useful when QueryKeywords is specified. If you use this with
								ProductID, AND logic is applied. In this case, if you specify an
								ID that doesn't match the domain (as Half.com has defined it),
								no matching product will be found. Therefore, we recommend that
								you only use DomainName with QueryKeywords.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ProductID" type="ns:ProductIDType">
                <xs:annotation>
                  <xs:documentation>
								Use this to retrieve product details for one specific product.
								Specify the ID as a string, and use the type attribute to
								indicate the nature of the ID you are specifying.
								&lt;br&gt;
								&lt;br&gt;
								In general, you can request up to 10 IDs of the same type by
								separating them with commas, as in the following: 014633155310,014633145496.
								However, if you specify a ProductID type of Reference (which specifies
								a global reference ID for an eBay catalog product), only one ID in
								ProductID can be used.
								&lt;br&gt;
								&lt;br&gt;
								The request requires either QueryKeywords or
								ProductID, but these fields cannot be used together.
								&lt;br&gt;
								ItemCount is only returned when ProductID is used in the request
								and the IncludeSelector is set to Items or Details.
							</xs:documentation>
                  <xs:appinfo>
                    <MaxLength>4000</MaxLength>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <RequiredInput>Conditionally</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="QueryKeywords" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								One or more keywords to search for. When you use a keyword search,
								Half.com searches the product catalogs  for matching words in the
								product title, description, and/or Item Specifics, and it returns
								a list of matching products, with no items. To retrieve
								items, use ProductID instead. (If you don't already have a
								product ID, you can get product IDs from the
								response after conducting a keyword search.)&lt;br&gt;
								&lt;br&gt;
								If specified, you must pass in at least 3 alphanumeric characters.&lt;br&gt;
								&lt;br&gt;
								The words "and" and "or" are treated like any other word.
								Only use "and", "or", or "the" if you are searching for products
								containing these words.
								To use AND or OR logic, use Half.com's standard search string
								modifiers. Wildcards (+, -, or *) are also supported.
								Be careful when using spaces before or after modifiers and
								wildcards.&lt;br&gt;
								&lt;br&gt;
								Some keyword queries can result in response times of 30 seconds or
								longer. If more than 2000 matches are found, the call fails with
								an error. If this kind of error occurs, refine the search by
								passing in more keywords and/or by using DomainName to restrict
								the search to certain domains (such as DVDs).
								If you are searching for a particular book, DVD, CD, or video game
								and you already know its ISBN or EAN (for a book) or UPC,
								consider using ProductID instead to retrieve more
								precise results. &lt;br&gt;
								&lt;br&gt;
								The request requires either QueryKeywords or
								ProductID, but these fields cannot be used together.
								&lt;br&gt;
								When QueryKeywords is used in the request, ItemCount is not returned.
								</xs:documentation>
                  <xs:appinfo>
                    <MaxLength>350</MaxLength>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <RequiredInput>Conditionally</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="SellerID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								The ID of a specific seller.
								Specify this value in combination with ProductID
								if you want search results to be filtered so that the items returned
								are only items in a specific product, sold by a specific seller.
								To specify SellerID, use SellerID and ProductID together.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ProductSort" type="ns:ProductSortCodeType">
                <xs:annotation>
                  <xs:documentation>
								Sorts the list of products returned. This is mostly only useful
								with QueryKeywords. (When you use ProductID, Half.com usually only returns one product.)
							</xs:documentation>
                  <xs:appinfo>
                    <Default>Popularity</Default>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="SortOrder" type="ns:SortOrderCodeType">
                <xs:annotation>
                  <xs:documentation>
								Sorts the list of products returned.
							</xs:documentation>
                  <xs:appinfo>
                    <Default>Descending</Default>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="MaxEntries" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Specifies the maximum number of products to return per page
								in a single call. This is mostly only useful
								with QueryKeywords. (When you use ProductID, Half.com usually only
								returns one product, and up to 30 items for that product.)
							</xs:documentation>
                  <xs:appinfo>
                    <Min>1</Min>
                    <Max>20</Max>
                    <Default>1</Default>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="PageNumber" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Specifies which page of data to return in the current call.
								Specify a positive value equal to or lower than the number of
								pages available (which you determine by examining the results of
								your initial request).
								Use this only when specifying QueryKeywords.
							</xs:documentation>
                  <xs:appinfo>
                    <Min>1</Min>
                    <Max>2000</Max>
                    <Default>1</Default>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FindHalfProductsResponse" type="ns:FindHalfProductsResponseType" />
      <xs:complexType name="FindHalfProductsResponseType">
        <xs:annotation>
          <xs:documentation>
			Returns stock product information in Half.com catalogs, such as
			information about a particular DVD or book. Optionally,
			also returns items that match the product.
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="DomainHistogram" type="ns:DomainHistogramType">
                <xs:annotation>
                  <xs:documentation>
								A histogram that lists the number of matching products found
								and the domains in which they were found.
								A &lt;i&gt;domain&lt;/i&gt; is essentially
								a set of categories that share certain common features
								(as determined by Half.com). Each domain has its own name and ID.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <Details>IncludeSelector: DomainHistogram</Details>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="PageNumber" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								The number of the page of data returned. If many products
								are found and multiple pages of results are available, use
								this in combination with ApproximatePages and HasMore to decide
								which page to retrieve next. As FindHalfProducts only returns
								up to 2000 products, the maximum possible value is theoretically
								2000 (if you were to set EntriesPerPage to 1 in the request).
							</xs:documentation>
                  <xs:appinfo>
                    <Min>1</Min>
                    <Max>2000</Max>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <Details>IncludeSelector: none</Details>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ApproximatePages" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								The total number of pages that can be returned, given the same
								query and filters in the request. As FindHalfProducts only returns
								up to 2000 products, the maximum possible value is theoretically
								2000 (if you were to set MaxEntries to 1 in the request).
							</xs:documentation>
                  <xs:appinfo>
                    <Min>1</Min>
                    <Max>2000</Max>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <Details>IncludeSelector: none</Details>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="MoreResults" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>
								If true, more pages of results are available.
								That is, PageNumber is less than ApproximatePages.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <Details>IncludeSelector: none</Details>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="TotalProducts" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								The total number of matching products found.
								(If more than 2000 products are found, the call fails
								with an error.)
							</xs:documentation>
                  <xs:appinfo>
                    <Min>0</Min>
                    <Max>2000</Max>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <Details>IncludeSelector: none</Details>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="Products" type="ns:HalfProductsType">
                <xs:annotation>
                  <xs:documentation>
								An set of Half.com catalog products. This contains stock information about a
								particular DVD, book, or other product.
								When you use QueryKeywords in the request, FindHalfProducts returns a
								maximum of 20 products per page.
								When you use ProductID in the request, FindHalfProducts usually only
								returns 1 product. ItemCount is only returned if you use ProductID with
								IncludeSelector set to Items or Details.
								(If more than one product matches the same ProductID,
								FindHalfProducts will return all of those products. As of the time
								of this writing, we expect this to be a rare case.)
							</xs:documentation>
                  <xs:appinfo>
                    <MaxOccurs>20</MaxOccurs>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <Details>IncludeSelector: none</Details>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ProductSearchURL" type="xs:anyURI">
                <xs:annotation>
                  <xs:documentation>
								A URL for product search results that corresponds to your search request. This is similar to ItemSearchURL in FindItems and FindItemsAdvanced.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindHalfProducts</CallName>
                      <Details>IncludeSelector: none, Details, SearchDetails, ItemSpecifics, SellerInfo, ExpansionItemCount, CategoryHistogram</Details>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FindPopularItemsRequest" type="ns:FindPopularItemsRequestType" />
      <xs:complexType name="FindPopularItemsRequestType">
        <xs:annotation>
          <xs:documentation>
				Find popular items
			</xs:documentation>
          <xs:appinfo>
            <Summary>
					Searches for popular items based on a category or keyword.  
					Returns WatchCount in addition to item information.
				</Summary>
            <RelatedCalls>
					FindPopularSearches
				</RelatedCalls>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="CategoryID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								Specify CategoryID to restrict your query to a specific category.
								Up to 10 categories may be specified.
								If you are using a URL, and you want to specify
								more than one CategoryID, separate the values with a comma.
								For example, to specify Fiction Books and 
								Children's Books, specify CategoryID=377,279.
								&lt;br&gt;
								&lt;br&gt;
								If the specified category ID doesn't match an existing category
								for the site, an invalid-category error message is returned.
								To determine valid categories:&lt;br&gt;
								Use &lt;b&gt;findItemsAdvanced&lt;/b&gt; from the &lt;a href="http://www.developer.ebay.com/DevZone/finding/CallRef/index.html"&gt;Finding API&lt;/a&gt; with CategoryHistogram value in the OutputSelector field 
								to retrieve matching categories. Then make another
								&lt;b&gt;findItemsAdvanced&lt;/b&gt; call with the ID of a matching category.
								&lt;br&gt;
								&lt;br&gt;
								CategoryID can be used in combination with QueryKeywords and CategoryIDExclude.
								To retrieve the most popular items across all categorys, do not submit a CategoryID.
								</xs:documentation>
                  <xs:appinfo>
                    <MaxLength>10</MaxLength>
                    <CallInfo>
                      <CallName>FindPopularItems</CallName>
                      <RequiredInput>Conditionally</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="QueryKeywords" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								A query that specifies a string for searching titles of items on eBay.
								If you are using a URL, then to search for multiple words,
								use "%20". For example, use Harry%20Potter to search for items
								containing those words in any order.
								You can incorporate wildcards into a multi-word search, as in the following: ap*%20ip*.
								The words "and" and "or" are treated like any other word. Only use "and",
								"or", or "the" if you are searching for listings containing these words.
								QueryKeywords can be used in combination with CategoryID and CategoryIDExclude.
							</xs:documentation>
                  <xs:appinfo>
                    <Min>3</Min>
                    <MaxLength>350 (characters)</MaxLength>
                    <CallInfo>
                      <CallName>FindPopularItems</CallName>
                      <RequiredInput>Conditionally</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="CategoryIDExclude" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								Specify this value if you want search results to be filtered so that the popular 
								items returned do not include items that belong to a specific category. 
								&lt;br&gt;
								&lt;br&gt;
								CategoryIDExclude is an unbounded field.
								If you are using a URL, you can separate multiple values with a comma.
								For example, if you want to specify 
								Records and SuperAudio CDs, specify 
								CategoryIDExclude=306,46354.  
								&lt;br&gt;
								&lt;br&gt;
								If you use CategoryIDExclude, it must be used in with QueryKeywords or CategoryID.
								The CategoryIDExclude input field need not be used if you specified the 
								CategoryID input field.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindPopularItems</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="MaxEntries" type="xs:int">
                <xs:annotation>
                  <xs:documentation> 
							  Specifies the maximum number of entries to return in a single call.
							</xs:documentation>
                  <xs:appinfo>
                    <Max>100</Max>
                    <Min>0</Min>
                    <CallInfo>
                      <CallName>FindPopularItems</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FindPopularItemsResponse" type="ns:FindPopularItemsResponseType" />
      <xs:complexType name="FindPopularItemsResponseType">
        <xs:annotation>
          <xs:documentation>
				Popular items, detail level is default for simple item type. addition with WatchCount.
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ItemArray" type="ns:SimpleItemArrayType">
                <xs:annotation>
                  <xs:documentation>
								A list of active items that were listed with the requested product.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindPopularItems</CallName>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FindPopularSearchesRequest" type="ns:FindPopularSearchesRequestType" />
      <xs:complexType name="FindPopularSearchesRequestType">
        <xs:annotation>
          <xs:documentation>
				Retrieves the words most frequently used by eBay users when searching for listings.
				These keywords are generated weekly by eBay. Thus, calls retrieve static data.
				FindPopularSearches is not available for the following sites: FR, HK, MY, PH, PL, SG, SE.
			</xs:documentation>
          <xs:appinfo>
            <Summary>
					Finds the words more frequently used by eBay users when searching for listings.
					If you use keywords, this call returns available alternative keywords in addition to
					popular related keywords.
				</Summary>
            <RelatedCalls>
					FindPopularItems
				</RelatedCalls>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="CategoryID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								Specify CategoryID to restrict your query to a specific category.
								Up to 10 categories may be specified.
								If you are using URL parameters, and you want to specify
								multiple values, use a comma.
								For example, if you want to specify Fiction Books and
								Children's Books, specify CategoryID=377,279.
								&lt;br&gt;
								&lt;br&gt;
								If the specified category ID doesn't match an existing category
								for the site, an invalid-category error message is returned.
								To determine valid categories:&lt;br&gt;
								Use &lt;b&gt;findItemsAdvanced&lt;/b&gt; from the &lt;a href="http://www.developer.ebay.com/DevZone/finding/CallRef/index.html"&gt;Finding API&lt;/a&gt; with CategoryHistogram value in the OutputSelector field 
								to retrieve matching categories. Then make another
								&lt;b&gt;findItemsAdvanced&lt;/b&gt; call with the ID of a matching category.
								&lt;br&gt;
								&lt;br&gt;
								CategoryID can be used in combination with QueryKeywords and IncludeChildCategories.
								When IncludeChildCategories is 'true' and used in conjunction with CategoryID,
								one and only one CategoryID is allowed. Otherwise, up
								to 10 CategoryIDs are allowed.
								To retrieve the most popular keywords for a root category, set one of
								the CategoryIDs to -1, or do not include CategoryID in the Request.
							</xs:documentation>
                  <xs:appinfo>
                    <MaxLength>10</MaxLength>
                    <CallInfo>
                      <CallName>FindPopularSearches</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="QueryKeywords" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								This field allows the user to specify one or more search terms, and then
								retrieve up to five related search terms and up to five alternative search
								terms. If you are using URL parameters, use the "%20" URL encoding to represent 
								a space. For example, use
								Harry%20Potter to search for items containing these words in any order. 
								&lt;br&gt;
								&lt;br&gt;
								QueryKeywords can be used in combination with CategoryID and IncludeChildCategories.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindPopularSearches</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="MaxKeywords" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								The maximum number of keywords to be retrieved per category
								for this call.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindPopularSearches</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                    <Min>1</Min>
                    <Max>100</Max>
                    <Default>20</Default>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="MaxResultsPerPage" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Specifies the maximum number of PopularSearchResults per page in
								the returned list. If not specified, the default returns 20 results per page.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindPopularSearches</CallName>
                      <Default>20</Default>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="PageNumber" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Specifies the number of the page of data to return in the current call.
								Specify a positive value equal to or lower than the number of pages
								available (which you determine by examining the results of your initial request).
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindPopularSearches</CallName>
                      <Default>1</Default>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="IncludeChildCategories" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>
								If true, only one CategoryID can be specified, and keywords
								are returned for that category and its subcategories.
								When IncludeChildCategories is true and used in conjunction with
								CategoryID, one and only one CategoryID is allowed.
								&lt;br&gt;
								&lt;br&gt;
								If false, keywords are returned only for the categories
								identified by CategoryID. The default is false.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindPopularSearches</CallName>
                      <Default>false</Default>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FindPopularSearchesResponse" type="ns:FindPopularSearchesResponseType" />
      <xs:complexType name="FindPopularSearchesResponseType">
        <xs:annotation>
          <xs:documentation>
				Contains the keyword data for the requested categories. A category's data are contained
				in a CategoryArrayType object if there is no error (one or more CategoryType objects).
				Returns category data as well as related search data.
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="PopularSearchResult" type="ns:PopularSearchesType">
                <xs:annotation>
                  <xs:documentation>
								Returns most popular search words by category. For each
								category, the CategoryID, CategoryName, CategoryParentID, and CategoryParentName,
								are returned, as well as QueryKeywords, related, and alternate searches.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindPopularSearches</CallName>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="PageNumber" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Indicates the page of data returned by the current call. For instance,
								for the first set of items can be returned, this field has a value of
								one.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindPopularSearches</CallName>
                      <Returned>Conditionally</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="TotalPages" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Indicates the total number of pages of data
								that could be returned by repeated requests. Returned with a
								value of 0 if no pages are available.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindPopularSearches</CallName>
                      <Returned>Conditionally</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FindProductsRequest" type="ns:FindProductsRequestType" />
      <xs:complexType name="FindProductsRequestType">
        <xs:annotation>
          <xs:documentation>
				Searches for stock product information.
			</xs:documentation>
          <xs:appinfo>
            <Summary>
					Searches for stock product information (stock description
					and Item Specifics), such as information about a particular
					kind of DVD or camera. Also, retrieves up to 200 eBay listings associated
					with a product.
				</Summary>
            <RelatedCalls>
					FindItemsAdvanced
				</RelatedCalls>
            <TempInfo>IncludeSelector</TempInfo>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" name="IncludeSelector" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
									Defines standard subsets of fields to return within the
									response.&lt;br&gt;
									&lt;br&gt;
									If you don't specify this field, the call returns a default
									set of fields, focusing on product details only
									(see the "Detail Controls" link below). If you specify this
									field, the additional fields you retrieve can affect the call's
									response time (performance).&lt;br&gt;
									&lt;br&gt;
									&lt;b&gt;Applicable values&lt;/b&gt;:
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Details&lt;/p&gt;
										&lt;p class="edef"&gt;Include all available item fields
										in the response. Only applicable when you are searching by
										ProductID. Not applicable with QueryKeywords.&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; DomainHistogram&lt;/p&gt;
										&lt;p class="edef"&gt;Include the DomainHistogram in
										the response. The histogram lists the number of matching
										products found and the domains in which they were found.
										(A domain is like a high-level category.)
										When many matching products are found, you may see
										significantly slower response times when you include
										the histogram.&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Items&lt;/p&gt;
										&lt;p class="edef"&gt;Include a brief set of item fields
										in the response.
										Only applicable when you are searching by ProductID.
										Not applicable with QueryKeywords.&lt;/p&gt;
									&lt;br&gt;
									&lt;br&gt;
									Use a comma to specify multiple values. (In this case,
									the results are cumulative.) See "FindProducts Samples"
									for an example of how to use this field.&lt;br&gt;
									&lt;br&gt;
									See "Detail Controls" for a complete list of
									fields that can be returned for each selector.
							</xs:documentation>
                  <xs:appinfo>
                    <MaxLength />
                    <PresentDetails>Yes</PresentDetails>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="AvailableItemsOnly" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>
								If true, only retrieve data for products that have been used to
								pre-fill active listings on the specified eBay site.
								If false, retrieve all products that match the query.
								This is useful when you use QueryKeywords and you only want to
								find products that have associated items (that is, where ItemArray
								would not beempty).&lt;br&gt;
								&lt;br&gt;
								This does not retrieve ItemArray; this only controls which
								products are returned (or counted). To retrieve ItemArray,
								pass Items in IncludeSelector.
							</xs:documentation>
                  <xs:appinfo>
                    <Default>false</Default>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="DomainName" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								A domain to search in. This is like searching a section of
								a catalog. If not specified, the product search is conducted
								across all domains.
								DomainName is an unbounded field. If you are using a URL, and you want
								to specify multiple values, use an index value (not a comma).
								For example, to specify DomainName=Textbooks,Education,
								specify DomainName(0)=Textbooks,%20Education.
								To determine valid domain names,
								first use this call with QueryKeywords. Domain names are returned
								for each product (and summarized in the domain histogram, if you
								specify DomainHistogram in IncludeSelector).&lt;br&gt;
								&lt;br&gt;
								A domain is a named grouping of categories whose items share
								common product characteristics. For example, all bound books
								have a binding or format (e.g., Hardcover), but audiobooks don't.
								So audiobooks would have their own domain.
								To limit your search to audiobooks, you would specify Audiobooks
								as the domain.&lt;br&gt;
								&lt;br&gt;
								Only useful when QueryKeywords is specified. If you use this with
								ProductID, AND logic is applied. In this case, if you specify an
								ID that doesn't match the domain (as eBay has defined it),
								no matching product will be found. Therefore, we recommend that you only use DomainName with QueryKeywords.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ProductID" type="ns:ProductIDType">
                <xs:annotation>
                  <xs:documentation>
								Use this to retrieve product details for one specific product.
								Specify the ID as a string, and use the type attribute to
								indicate the nature of the ID you are specifying.
								&lt;br&gt;
								&lt;br&gt;
								The request requires a single one of these three elements: QueryKeywords,
								ProductID, or CategoryID, and can only include one of the three.
							</xs:documentation>
                  <xs:appinfo>
                    <MaxLength>4000</MaxLength>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <RequiredInput>Conditionally</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="QueryKeywords" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								One or more keywords to search for. When you use a keyword search,
								eBay searches the product catalogs  for matching words in the
								product title, description, and/or Item Specifics, and it returns
								a list of matching products, with no items. To retrieve
								items, use ProductID instead. (If you don't already have a
								product ID, you can get product IDs from the
								response after conducting a keyword search.)&lt;br&gt;
								&lt;br&gt;
								If specified, you must pass in at least 3 alphanumeric characters.&lt;br&gt;
								&lt;br&gt;
								The words "and" and "or" are treated like any other word.
								Only use "and", "or", or "the" if you are searching for products
								containing these words.
								To use AND or OR logic, use eBay's standard search string
								modifiers. Wildcards (+, -, or *) are also supported.
								Be careful when using spaces before or after modifiers and
								wildcards.&lt;br&gt;
								&lt;br&gt;
								Some keyword queries can result in response times of 30 seconds or
								longer. If more than 2000 matches are found, the call fails with
								an error. If this kind of error occurs, refine the search by
								passing in more keywords and/or by using DomainName to restrict
								the search to certain domains (such as DVDs).
								If you are searching for a particular book, DVD, CD, or video game
								and you already know its ISBN or EAN (for a book) or UPC,
								consider using ProductID instead to retrieve more
								precise results. &lt;br&gt;
								&lt;br&gt;
								The request requires a single one of these three elements: QueryKeywords,
								ProductID, or CategoryID, and can only include one of the three.
								</xs:documentation>
                  <xs:appinfo>
                    <MaxLength>350</MaxLength>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <RequiredInput>Conditionally</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ProductSort" type="ns:ProductSortCodeType">
                <xs:annotation>
                  <xs:documentation>
								Sorts the list of products returned. This is mostly only useful
								with QueryKeywords. (When you use ProductID, eBay usually only
								returns one product.)
								Also see SortOrder. If ProductSort and SortOrder are not
								specified, products are sorted by popularity in descending order.
							</xs:documentation>
                  <xs:appinfo>
                    <Default>Popularity</Default>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="SortOrder" type="ns:SortOrderCodeType">
                <xs:annotation>
                  <xs:documentation>
								Sorts search results in ascending or descending order.
								Only applicable with ProductSort. If you specify ProductSort
								without SortOrder, the order defaults to Descending for
								all criteria except Title (which defaults to Ascending).
							</xs:documentation>
                  <xs:appinfo>
                    <Default>Descending</Default>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="MaxEntries" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Specifies the maximum number of products to return per page
								in a single call. This is mostly only useful
								with QueryKeywords. (When you use ProductID, eBay usually only
								returns one product, and up to 200 items for that product.)
							</xs:documentation>
                  <xs:appinfo>
                    <Min>1</Min>
                    <Max>20</Max>
                    <Default>1</Default>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="PageNumber" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Specifies which page of data to return in the current call.
								Specify a positive value equal to or lower than the number of
								pages available (which you determine by examining the results of
								your initial request).
							</xs:documentation>
                  <xs:appinfo>
                    <Min>1</Min>
                    <Max>2000</Max>
                    <Default>1</Default>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="CategoryID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								Include a Category ID number in your request to restrict your
								query to a specific category.
								&lt;br&gt;
								The request requires a single one of these three elements: QueryKeywords,
								ProductID, or CategoryID, and can only include one of the three.
							</xs:documentation>
                  <xs:appinfo>
                    <MaxLength>10</MaxLength>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <RequiredInput>Conditionally</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="HideDuplicateItems" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>
								Specifies whether or not to remove duplicate items from search results.
								When set to true, and there are duplicate items for an item in the
								search results, the subsequent duplicates will not appear in the
								results.
								Item listings are considered duplicates in the following
								conditions: &lt;br&gt;
								&lt;ul&gt;
								&lt;li&gt;Items are listed by the same seller&lt;/li&gt;
								&lt;li&gt;Items have exactly the same item title&lt;/li&gt;
								&lt;li&gt;Items have similar listing formats&lt;/li&gt;
								&lt;ul&gt;
									&lt;li&gt;Auctions: Auction Items, Auction BIN items, Multi-Quantity
									Auctions, and Multi-Quantity Auctions BIN items&lt;/li&gt;
									&lt;li&gt;Fixed Price: Fixed Price, Multi-quantity Fixed Price, Fixed
									Price with Best Offer, and Store Inventory Format items&lt;/li&gt;
									&lt;li&gt;Classified Ads&lt;/li&gt;
								&lt;/ul&gt;
								&lt;/ul&gt;&lt;br&gt;
								For Auctions, items must also have the same price and number of bids to
								be considered duplicates.
								&lt;br&gt;
								Filtering of duplicate item listings is not supported on all sites.
								For FindProducts, this filter only works when IncludeSelector is set to Items or Details.
							</xs:documentation>
                  <xs:appinfo>
                    <Default>false</Default>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FindProductsResponse" type="ns:FindProductsResponseType" />
      <xs:complexType name="FindProductsResponseType">
        <xs:annotation>
          <xs:documentation>
				Returns stock product information in eBay catalogs, such as
				information about a particular DVD or camera. Optionally,
				also returns items that match the product.
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ApproximatePages" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								The total number of pages that can be returned, given the same
								query and filters in the request. As FindProducts only returns
								up to 2000 products, the maximum possible value is theoretically
								2000 (if you were to set MaxEntries to 1 in the request).
							</xs:documentation>
                  <xs:appinfo>
                    <Min>1</Min>
                    <Max>2000</Max>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <Returned>Always</Returned>
                      <Details>IncludeSelector: none</Details>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="MoreResults" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>
								If true, more pages of results are available.
								That is, PageNumber is less than ApproximatePages.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <Returned>Always</Returned>
                      <Details>IncludeSelector: none</Details>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="DomainHistogram" type="ns:DomainHistogramType">
                <xs:annotation>
                  <xs:documentation>
								A histogram that lists the number of matching products found and the domains
								in which they were found. A &lt;i&gt;domain&lt;/i&gt; describes a set of
								categories that share certain common characteristics (as determined by eBay).
								Each domain has its own name and ID. Only returned when you specify
								DomainHistogram in IncludeSelector.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <Returned>Always</Returned>
                      <Details>IncludeSelector: DomainHistogram</Details>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ItemArray" type="ns:SimpleItemArrayType">
                <xs:annotation>
                  <xs:documentation>
								A list of active items that were listed with the requested
								product.
								&lt;br /&gt;
								&lt;br /&gt;
								&lt;span class="tablenote"&gt;&lt;strong&gt;Note:&lt;/strong&gt;
									ItemArray is returned only when you use ProductID in the search request
									(not QueryKeywords) and you set IncludeSelector to Details or Items.
									Returned only if eBay has currently matching items.
								&lt;/span&gt;
								&lt;br /&gt;
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <Returned>Conditionally</Returned>
                      <Details>IncludeSelector: Items, Details</Details>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="PageNumber" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								The number of the page of data returned. If many products
								are found and multiple pages of results are available, use
								this in combination with ApproximatePages and MoreResults
								to decide which page to retrieve next. As FindProducts only
								returns up to 2000 products, the maximum possible value is
								theoretically 2000 (if you were to set MaxEntries to 1 in the
								request).
							</xs:documentation>
                  <xs:appinfo>
                    <Min>1</Min>
                    <Max>2000</Max>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <Returned>Always</Returned>
                      <Details>IncludeSelector: none</Details>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="Product" type="ns:CatalogProductType">
                <xs:annotation>
                  <xs:documentation>
								An eBay catalog product. This contains stock information about a particular
								DVD, camera, set of golf clubs, or other product. When you use QueryKeywords
								in the request, FindProducts returns a maximum of 20 products per page. When
								you use ProductID in the request, FindProducts usually only returns 1 product
								by default. (If more than one product matches the same ProductID, FindProducts
								will return all of those products. As of the time of this writing, we expect
								this to be a rare case.)
							</xs:documentation>
                  <xs:appinfo>
                    <MaxOccurs>20</MaxOccurs>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <Returned>Always</Returned>
                      <Details>IncludeSelector: none</Details>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="TotalProducts" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								The total number of matching products found. (If more than 2000 products are
								found, the call fails with an error.)
							</xs:documentation>
                  <xs:appinfo>
                    <Min>0</Min>
                    <Max>2000</Max>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <Returned>Always</Returned>
                      <Details>IncludeSelector: none</Details>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="DuplicateItems" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>
								Indicates whether there are duplicated items not returned by this
								response when HideDuplicateItems is true in the request.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindProducts</CallName>
                      <Returned>Conditionally</Returned>
                      <Details>IncludeSelector: Items, Details</Details>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FindReviewsAndGuidesRequest" type="ns:FindReviewsAndGuidesRequestType" />
      <xs:complexType name="FindReviewsAndGuidesRequestType">
        <xs:annotation>
          <xs:documentation>
				Splitting include reviews and guides from GetProducts.
			</xs:documentation>
          <xs:appinfo>
            <Summary>
					Searches reviews and guides based on product, category, or user.  The response provides
					information about each user or product's reviews and guides.
				</Summary>
            <RelatedCalls>
					FindItemsAdvanced, FindProducts, GetCategoryInfo
				</RelatedCalls>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ProductID" type="ns:ProductIDType">
                <xs:annotation>
                  <xs:documentation>
								Use this to retrieve reviews (not guides) for one specific product.
								Specify the ID as a string, and use the type attribute
								to indicate the nature of the ID you are specifying.
								Same as FindProducts, supports Reference, ISBN, UPC, EAN.
								&lt;br&gt;
								&lt;br&gt;
								ProductID can be used in combination with UserID to return Reviews and Guides.
								ProductID and CategoryID cannot be used together.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="UserID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								Retrieves reviews and guides written by the specified user.
								&lt;br&gt;
								&lt;br&gt;
								UserID can be combined with either ProductID or CategoryID but not both (as
								ProductID and CategoryID cannot be used together).
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="CategoryID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								Specify a single CategoryID to restrict your query to a specific Guide category.
								&lt;br&gt;
								&lt;br&gt;
								If the specified category ID doesn't match an existing category
								for the site, an invalid-category error message is returned.
								To determine valid categories:&lt;br&gt;
								Use &lt;b&gt;findItemsAdvanced&lt;/b&gt; from the &lt;a href="http://www.developer.ebay.com/DevZone/finding/CallRef/index.html"&gt;Finding API&lt;/a&gt; with CategoryHistogram value in the OutputSelector field 
								to retrieve matching categories. Then make another
								FindReviewsAndGuides call with the ID of a matching category.
								&lt;br&gt;
								&lt;br&gt;
								CategoryID can be used in combination with UserID to return Reviews and Guides.
								ProductID and CategoryID cannot be used together.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="MaxResultsPerPage" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Specifies the maximum number of reviews per page (not guides) in the returned list. If not
								specified, the default returns 5 results per page.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <Default>5</Default>
                      <Max>20</Max>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="PageNumber" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Specifies the number of the page of data to return in the current call.
								Specify a positive value equal to or lower than the number of pages
								available (which you determine by examining the results of your initial request).
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ReviewSort" type="ns:ReviewSortCodeType">
                <xs:annotation>
                  <xs:documentation>
								Include ReviewSort in your request if you want to sort by a parameter,
								such as CreationTime. See the SortOrder field for values for specifying
								that results are returned in ascending or descending order.
								(By default, results are returned in descending order.)
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="SortOrder" type="ns:SortOrderCodeType">
                <xs:annotation>
                  <xs:documentation>
								Sorts search results in ascending or descending order, in conjunction
								with the value you specify in ReviewsSort. The default is descending
								order.
								&lt;br&gt; &lt;br&gt;
								For example, for the ReviewsSort value of CreationTime,
								and a SortOrder value of Descending, the most recently created
								reviews are returned first.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <Default>Descending</Default>
                      <CallName>FindReviewsAndGuides</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="FindReviewsAndGuidesResponse" type="ns:FindReviewsAndGuidesResponseType" />
      <xs:complexType name="FindReviewsAndGuidesResponseType">
        <xs:annotation>
          <xs:documentation>
			Find reviews and guides response type.
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ReviewCount" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Number of returned reviews.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="BuyingGuideCount" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Number of returned buying guides.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ReviewerRank" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Rank of reviewer if using user search.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <Returned>Conditionally</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="TotalHelpfulnessVotes" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Number of helpfulness votes if using user search.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <Returned>Conditionally</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ProductID" type="ns:ProductIDType">
                <xs:annotation>
                  <xs:documentation>
								The eBay or external IDs associated with the product. 
								Use the Reference value as input to search for the same product 
								in the future, or use the ISBN, EAN, or UPC value (if returned).
								The ISBN, EAN, and UPC values can also be useful as keys if your
								application is comparing products across different sites. Always
								returned when Product is returned. 
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <Returned>Conditionally</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ReviewsAndGuidesURL" type="xs:anyURI">
                <xs:annotation>
                  <xs:documentation>
								URL to the reviews and guides page.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="PageNumber" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								The number of the page of data returned. If many products
								are found and multiple pages of results are available, use
								this in combination with TotalPages to decide
								which page to retrieve next. As FindProducts only returns
								up to 2000 products, the maximum possible value is theoretically
								2000 (if you were to set MaxResultsPerPage to 1 in the request).
							</xs:documentation>
                  <xs:appinfo>
                    <Min>1</Min>
                    <Max>2000</Max>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="TotalPages" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Indicates the total number of pages of data
								that could be returned by repeated requests. Returned with a
								value of 0 if no pages are available.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="BuyingGuideDetails" type="ns:BuyingGuideDetailsType">
                <xs:annotation>
                  <xs:documentation>
								Contains information for up to 5 buying guides that match the
								query. Buying guides provide useful information about shopping
								in a particular domain, like Digital Cameras.
								For example, a digital camera buying guide
								could help a buyer determine what kind of digital camera
								is right for them.
								If no buying guides are associated with the product, this only
								returns a link to the buying guide hub (the main Guides page).
								Count limited by MaxResultsPerPage in request.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ReviewDetails" type="ns:ReviewDetailsType">
                <xs:annotation>
                  <xs:documentation>
								Contains information about review details. Count limited by MaxResultsPerPage in request.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <Returned>Conditionally</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="PositiveHelpfulnessVotes" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Number of helpfulness votes if using user search.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>FindReviewsAndGuides</CallName>
                      <Returned>Conditionally</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetCategoryInfoRequest" type="ns:GetCategoryInfoRequestType" />
      <xs:complexType name="GetCategoryInfoRequestType">
        <xs:annotation>
          <xs:documentation>
				This call will give you the ability to retrieve high level
				Category information, relevant for a buy-side application.
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" name="CategoryID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
									Use an ID of -1 to retrieve the root category and the top-level (level
									1) meta categories. You can determine other CategoryIDs from the
									response from this call, or from a specific item (retrieved from
									another call like GetSingleItem), or from the eBay
									website.
								</xs:documentation>
                  <xs:appinfo>
                    <MaxLength>19 (Note: The eBay database specifies 38. Currently, Category ID's are usually 9 to 12 digits)</MaxLength>
                    <CallInfo>
                      <CallName>GetCategoryInfo</CallName>
                      <RequiredInput>Yes</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="IncludeSelector" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
									Defines standard subsets of fields to return within the
									response. If you don't specify this field, the call returns
									a default set of fields. If you specify this field, the
									additional fields (child categories) you retrieve can affect
									the call's response time (decrease performance).
									&lt;b&gt;Applicable values&lt;/b&gt;:
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; ChildCategories&lt;/p&gt;
										&lt;p class="edef"&gt;Include the first level of child categories for 
										the specified parent.&lt;/p&gt;
								</xs:documentation>
                  <xs:appinfo>
                    <MaxLength />
                    <PresentDetails>No</PresentDetails>
                    <SeeLink>
                      <Title>Detail Controls</Title>
                      <URL>#detailControls</URL>
                    </SeeLink>
                    <SeeLink>
                      <Title>GetCategoryInfo Samples</Title>
                      <URL>#samples</URL>
                    </SeeLink>
                    <CallInfo>
                      <CallName>GetCategoryInfo</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetCategoryInfoResponse" type="ns:GetCategoryInfoResponseType" />
      <xs:complexType name="GetCategoryInfoResponseType">
        <xs:annotation>
          <xs:documentation>
				Contains the category data for the eBay site specified as input. The category
				data is returned as a CategoryArrayType object, that contains zero, one, or
				multiple CategoryType objects. Each CategoryType object contains the detail data
				for one category. Other fields indicate how many categories are returned in a call, when the category hierarchy was last updated, and the version of the category hierarchy (all three of which can differ from one eBay site to the next).
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="CategoryArray" type="ns:CategoryArrayType">
                <xs:annotation>
                  <xs:documentation>
								List of the returned categories. The category array contains one CategoryType
								object for each returned category. Returns empty if no detail level is specified.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetCategoryInfo</CallName>
                      <Details>IncludeSelector: none</Details>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="CategoryCount" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Indicates the number of categories returned (i.e., the number of CategoryType
								objects in CategoryArray).
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetCategoryInfo</CallName>
                      <Details>IncludeSelector: none</Details>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="UpdateTime" type="xs:dateTime">
                <xs:annotation>
                  <xs:documentation>
								Indicates the last date and time that eBay modified the category hierarchy for the
								specified eBay site.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetCategoryInfo</CallName>
                      <Details>IncludeSelector: none</Details>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="CategoryVersion" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								Indicates the version of the category hierarchy on the
								specified eBay site.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetCategoryInfo</CallName>
                      <Details>IncludeSelector: none</Details>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetItemStatusRequest" type="ns:GetItemStatusRequestType" />
      <xs:complexType name="GetItemStatusRequestType">
        <xs:annotation>
          <xs:documentation>
				Contains a single ItemID or an array of ItemIDs.
			</xs:documentation>
          <xs:appinfo>
            <Summary>
					Allows you to get the status for a group of items. Returns status information such as ListingStatus and End Time for all items that are listed in the request.
					Duplicated items are returned as a single item.
				</Summary>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="ItemID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								The item ID that uniquely identifies the item listing for which to retrieve the data. You can provide a maximum of 20 ItemIDs. Use a comma to separate ItemIDs.
							</xs:documentation>
                  <xs:appinfo>
                    <MaxLength>19 (Note: The eBay database specifies 38. However, Item IDs are usually 9 to 12 digits)</MaxLength>
                    <CallInfo>
                      <CallName>GetItemStatus</CallName>
                      <RequiredInput>Yes</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetItemStatusResponse" type="ns:GetItemStatusResponseType" />
      <xs:complexType name="GetItemStatusResponseType">
        <xs:annotation>
          <xs:documentation>
			   Returns status information for all items in a list. Some of the Item information 
				 is returned in an SimpleItemArrayType object, that can include zero, one, or multiple ItemType objects.
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="Item" type="ns:SimpleItemType">
                <xs:annotation>
                  <xs:documentation>
								Collection of Item status objects in an SimpleItemArrayType object, that can include zero, one, or multiple ItemType objects.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetItemStatus</CallName>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetMultipleItemsRequest" type="ns:GetMultipleItemsRequestType" />
      <xs:complexType name="GetMultipleItemsRequestType">
        <xs:annotation>
          <xs:documentation>
				Retrieves publicly available data for one or more listings. Use this call to retrieve much of the information that is visible on a listing's View Item page on the eBay Web site, such as title, prices, and basic shipping costs. Provide ItemID for every item for which you want information. This call returns the same minimal information that is returned by GetSingleItem, for each item with no IncludeSelector specified. (Use GetShippingCosts to retrieve more detailed shipping cost information for a given item.) Duplicated items are returned as a single item.
			</xs:documentation>
          <xs:appinfo>
            <RelatedCalls>GetSingleItem</RelatedCalls>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="ItemID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								The item ID that uniquely identifies the item listing for which to
								retrieve the data. You can provide a maximum of 20 item IDs. When making a
								URL request, repeating ItemID parameters must be specified as an indexed
								array (e.g., &lt;code&gt;...&amp;ItemID(0)=130310421484&amp;ItemID(1)=
								300321408208&amp; ItemID(2)=370214653822...&lt;/code&gt;).
								&lt;br&gt;&lt;br&gt;
								Alternatively, as a shortcut for URL requests, you can specify the item
								IDs as a comma-separated list in a single ItemID parameter (e.g., ...&lt;
								code&gt;&amp;ItemID=130310421484,300321408208,370214653822...&lt;/code&gt;
								) for convenience.
								&lt;br&gt;&lt;br&gt;
								You can determine an item's ID by calling findItemsAdvanced (&lt;a 
								href="http://www.developer.ebay.com/DevZone/finding/CallRef/index.html" 
								&gt;Finding API&lt;/a&gt;) or from the  eBay Web site. Provide ItemID for 
								every item for which you want information.
							</xs:documentation>
                  <xs:appinfo>
                    <MaxLength>19 (Note: The eBay database specifies 38. Currently, Item IDs are usually 9 to 12 digits)</MaxLength>
                    <SeeLink>
                      <Title>(findItemsAdvanced) item.itemId</Title>
                      <URL>http://www.developer.ebay.com/DevZone/finding/CallRef/findItemsAdvanced.html#Response.searchResult.item.itemId</URL>
                    </SeeLink>
                    <CallInfo>
                      <CallName>GetMultipleItems</CallName>
                      <RequiredInput>Yes</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="IncludeSelector" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								Defines standard subsets of fields to return within the
								response.&lt;br&gt;
								&lt;br&gt;
								If you don't specify this field, the call returns a default
								set of fields (see the "Detail Controls" link below). If you specify this field, the additional
								fields you retrieve can affect the call's response time
								(performance).&lt;br&gt;
								&lt;br&gt;
								&lt;b&gt;Applicable values&lt;/b&gt;:
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Details&lt;/p&gt;
								  &lt;p class="edef"&gt;Include most available fields in the
								  response (except fields that significantly affect the call's
								  performance).&lt;/p&gt;
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Description&lt;/p&gt;
								  &lt;p class="edef"&gt;Include the Description field in the response. (This can affect the call's performance.)&lt;/p&gt;
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; TextDescription&lt;/p&gt;
								  &lt;p class="edef"&gt;Include the text Description (no html tag) field in the response. (This can affect the call's performance.)&lt;/p&gt;
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; ItemSpecifics&lt;/p&gt;
									&lt;p class="edef"&gt;Include ItemSpecifics in the response.&lt;/p&gt;
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Variations&lt;/p&gt;
									&lt;p class="edef"&gt;Include Variations in the response.&lt;/p&gt;
								&lt;br&gt;
								&lt;br&gt;
								Use a comma to specify multiple values. (In this case,
								the results are cumulative.) See "GetSingleItem Samples"
								for an example of how to use this field.&lt;br&gt;
								&lt;br&gt;
								See "Detail Controls" for a complete list of
								fields that can be returned for each selector.
							</xs:documentation>
                  <xs:appinfo>
                    <MaxLength />
                    <PresentDetails>Yes</PresentDetails>
                    <SeeLink>
                      <Title>Detail Controls</Title>
                      <URL>#detailControls</URL>
                    </SeeLink>
                    <SeeLink>
                      <Title>GetMultipleItems Samples</Title>
                      <URL>#samples</URL>
                    </SeeLink>
                    <CallInfo>
                      <CallName>GetMultipleItems</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetMultipleItemsResponse" type="ns:GetMultipleItemsResponseType" />
      <xs:complexType name="GetMultipleItemsResponseType">
        <xs:annotation>
          <xs:documentation>
				Response to request of GetMultipleItems.
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="Item" type="ns:SimpleItemType">
                <xs:annotation>
                  <xs:documentation>
								Contains details for a listing (or multiple) listings that correspond to the item ID(s) specified in the request.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetMultipleItems</CallName>
                      <Returned>Always</Returned>
                      <Details>IncludeSelector: none</Details>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetShippingCostsRequest" type="ns:GetShippingCostsRequestType" />
      <xs:complexType name="GetShippingCostsRequestType">
        <xs:annotation>
          <xs:documentation>
				Gets shipping costs for an item. This is one of the ways a buyer or seller
				can obtain shipping cost information for an existing item (for which the caller is
				either the buyer or seller) at any point in the life of of the listing, before or
				after a buyer has committed to purchasing the item(s). This call works for
				both flat rate shipping and calculated shipping. Flat rate shipping costs are
				established by the seller before bidding occurs. Calculated shipping costs
				are calculated by eBay with its shipping partners based on postal code, but note
				that insurance cost can only be determined once the final item price is known
				when the listing ends. To determine whether a listing has ended, use GetSingleItem.
				It is best to call GetShippingCosts only after determining via GetSingleItem
				or findItemsAdvanced (&lt;a 
				href="http://www.developer.ebay.com/DevZone/finding/CallRef/index.html" 
				&gt;Finding API&lt;/a&gt;) that the item actually has shipping cost information.
			</xs:documentation>
          <xs:appinfo>
            <RelatedCalls>GetSingleItem</RelatedCalls>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ItemID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								The item ID that uniquely identifies the item listing for which to retrieve the data.
							</xs:documentation>
                  <xs:appinfo>
                    <MaxLength>19 (Note: The eBay database specifies 38. Currently, Item IDs are usually 9 to 12 digits)</MaxLength>
                    <CallInfo>
                      <CallName>GetShippingCosts</CallName>
                      <RequiredInput>Yes</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="QuantitySold" type="xs:int">
                <xs:annotation>
                  <xs:documentation>
								Number of items sold to a single buyer and to be shipped together.
							</xs:documentation>
                  <xs:appinfo>
                    <Default>1</Default>
                    <CallInfo>
                      <CallName>GetShippingCosts</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="DestinationPostalCode" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								Destination country postal code (or zipcode, for US). Ignored if no
								country code is provided. Optional tag for some countries. More likely to
								be required for large countries. Ignored for flat rate shipping.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetShippingCosts</CallName>
                      <RequiredInput>Conditionally</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="DestinationCountryCode" type="ns:CountryCodeType">
                <xs:annotation>
                  <xs:documentation>
								Destination country code. If DestinationCountryCode is US,
								postal code is required and represents US zip code.
							</xs:documentation>
                  <xs:appinfo>
                    <Default>US</Default>
                    <CallInfo>
                      <CallName>GetShippingCosts</CallName>
                      <RequiredInput>Conditionally</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="IncludeDetails" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>
								Indicates whether to return the ShippingDetails container in the response.
							</xs:documentation>
                  <xs:appinfo>
                    <Default>false</Default>
                    <CallInfo>
                      <CallName>GetShippingCosts</CallName>
                      <RequiredInput>Conditionally</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetShippingCostsResponse" type="ns:GetShippingCostsResponseType" />
      <xs:complexType name="GetShippingCostsResponseType">
        <xs:annotation>
          <xs:documentation>
				Response to call of GetShippingCosts.
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ShippingDetails" type="ns:ShippingDetailsType">
                <xs:annotation>
                  <xs:documentation>
								Shipping-related details for the specified item. This container is only
								returned if IncludeDetails is true on input. Any error about shipping services
								(returned by a vendor of eBay's who calculates shipping costs) is returned in
								ShippingRateErrorMessage. Errors from a shipping service are likely to be related to
								issues with shipping specifications, such as package size and the selected shipping
								method not supported by a particular shipping service.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetShippingCosts</CallName>
                      <Returned>Conditionally</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ShippingCostSummary" type="ns:ShippingCostSummaryType">
                <xs:annotation>
                  <xs:documentation>
								Shipping-related details for the specified item. Any error about shipping services
								(returned by a vendor of eBay's who calculates shipping costs) is returned in
								ShippingRateErrorMessage. Errors from a shipping service are likely to be related to
								issues with shipping specifications, such as package size and the selected shipping
								method not supported by a particular shipping service.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetShippingCosts</CallName>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetSingleItemRequest" type="ns:GetSingleItemRequestType" />
      <xs:complexType name="GetSingleItemRequestType">
        <xs:annotation>
          <xs:documentation>
					Retrieves publicly available data for a single listing.
					Use this call to retrieve most of the information that is visible
					on a listing's View Item page on the eBay Web site,
					such as title, description, prices, basic seller and bidder information,
					and other details about the listing.Also returns basic
					shipping costs. For more shipping details, use GetShippingCosts.
			</xs:documentation>
          <xs:appinfo>
            <Summary>
					Gets publicly visible details about one listing. This gives you most of the
					data that eBay shows on the View Item page (title, description,
					price, and other details).
				</Summary>
            <RelatedCalls>GetItemStatus, GetShippingCosts, GetSingleItem</RelatedCalls>
            <TempInfo>IncludeSelector</TempInfo>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ItemID" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
									The item ID that uniquely identifies the item listing
									for which to retrieve the data.&lt;br&gt;
									&lt;br&gt;
									You can determine an item's ID by calling findItemsAdvanced (&lt;a 
									href="http://www.developer.ebay.com/DevZone/finding/CallRef/index.html" 
									&gt;Finding API&lt;/a&gt;) or from the  eBay Web site.
								</xs:documentation>
                  <xs:appinfo>
                    <MaxLength>19 (Note: The eBay database specifies 38. Currently, Item IDs are usually 9 to 12 digits)</MaxLength>
                    <SeeLink>
                      <Title>(findItemsAdvanced) item.itemId</Title>
                      <URL>http://www.developer.ebay.com/DevZone/finding/CallRef/findItemsAdvanced.html#Response.searchResult.item.itemId</URL>
                    </SeeLink>
                    <CallInfo>
                      <CallName>GetSingleItem</CallName>
                      <RequiredInput>Yes</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="VariationSKU" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
								Variation-level SKU that uniquely identifes a variation within
								the listing identified by ItemID. Only applicable when the 
								seller included variation-level SKU (Variation.SKU)
								values. Retrieves all the usual Item fields, but limits the
								Variations content to the specified variation.
								If not specified, the response includes all variations.
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetSingleItem</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="VariationSpecifics" type="ns:NameValueListArrayType">
                <xs:annotation>
                  <xs:documentation>
								Name-value pairs that identify one or more variations within the 
								listing identified by ItemID. Only applicable when the seller
								listed the item with variations. Retrieves all the usual Item 
								fields, but limits the Variations content to the specified 
								variation(s). If the specified pairs do not match any variation, 
								eBay returns all variations.&lt;br&gt;
								&lt;br&gt;
								To retrieve only one variation, specify the full set of 
								name/value pairs that match all the name-value pairs of one 
								variation. &lt;br&gt;
								&lt;br&gt;
								To retrieve multiple variations (using a wildcard), 
								specify one or more name/value pairs that partially match the
								desired variations. For example, if the listing contains 
								variations for shirts in different colors and sizes, specify 
								Color as Red (and no other name/value pairs) to retrieve 
								all the red shirts in all sizes (but no other colors).
							</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetSingleItem</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="IncludeSelector" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
									Defines standard subsets of fields to return within the
									response.&lt;br&gt;
									&lt;br&gt;
									If you don't specify this field, the call returns a default
									set of fields (see the "Detail Controls" link below). If you specify this field, the additional
									fields you retrieve can affect the call's response time
									(performance).&lt;br&gt;
									&lt;br&gt;
									&lt;b&gt;Applicable values&lt;/b&gt;:
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Details&lt;/p&gt;
									  &lt;p class="edef"&gt;Include most available fields in the
									  response (except fields that significantly affect the call's
									  performance).&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Description&lt;/p&gt;
									  &lt;p class="edef"&gt;Include the Description field in the response. (This can affect the call's performance.)&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; TextDescription&lt;/p&gt;
									  &lt;p class="edef"&gt;Include the text Description(no html tag) field in the response. (This can affect the call's performance.)&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; ShippingCosts&lt;/p&gt;
									  &lt;p class="edef"&gt;Include basic shipping costs in the
									  response. (Use GetShippingCosts to retrieve more
									  details.)&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; ItemSpecifics&lt;/p&gt;
										&lt;p class="edef"&gt;Include ItemSpecifics in the response.&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Variations&lt;/p&gt;
										&lt;p class="edef"&gt;Include Variations in the response.&lt;/p&gt;
									&lt;br&gt;
									&lt;br&gt;
									Use a comma to specify multiple values. (In this case,
									the results are cumulative.) See "GetSingleItem Samples"
									for an example of how to use this field.&lt;br&gt;
									&lt;br&gt;
									See "Detail Controls" for a complete list of
									fields that can be returned for each selector.
								</xs:documentation>
                  <xs:appinfo>
                    <MaxLength />
                    <PresentDetails>Yes</PresentDetails>
                    <SeeLink>
                      <Title>Detail Controls</Title>
                      <URL>#detailControls</URL>
                    </SeeLink>
                    <SeeLink>
                      <Title>GetSingleItem Samples</Title>
                      <URL>#samples</URL>
                    </SeeLink>
                    <CallInfo>
                      <CallName>GetSingleItem</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetSingleItemResponse" type="ns:GetSingleItemResponseType" />
      <xs:complexType name="GetSingleItemResponseType">
        <xs:annotation>
          <xs:documentation>
				Response to GetSingleItem request.
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="Item" type="ns:SimpleItemType">
                <xs:annotation>
                  <xs:documentation>
									Contains details about the listing whose ID was specified in
									the request.
								</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetSingleItem</CallName>
                      <Returned>Always</Returned>
                      <Details>IncludeSelector: none</Details>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetUserProfileRequest" type="ns:GetUserProfileRequestType" />
      <xs:complexType name="GetUserProfileRequestType">
        <xs:annotation>
          <xs:documentation>
					Retrieves user information based on the user ID you specify. The response contains detailed information about a user. You can specify the types of user information you want in the response. 
			</xs:documentation>
          <xs:appinfo>
            <Summary>
					Retrieves user information based on the user ID you specify. The response contains detailed information about a user. You can specify the types of user information you want in the response.
				</Summary>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractRequestType">
            <xs:sequence>
              <xs:element minOccurs="0" name="UserID" type="xs:string">
                <xs:annotation>
                  <xs:documentation> 
										Specifies the user whose data will returned by the call. 
								</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetUserProfile</CallName>
                      <RequiredInput>Yes</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="IncludeSelector" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
									Defines standard subsets of fields to return within the
									response.&lt;br&gt;
									&lt;br&gt;
									If you don't specify this field, a default
									set of fields  is returned. Click "Detail Controls" below
									and see "none" for the default fields.
									If you specify this field, then the set of fields returned
									includes the default fields.
									If you specify this field, the additional
									fields returned can affect the call's response time
									(performance), including in the case of feedback data.&lt;br&gt;
									&lt;br&gt;
									&lt;b&gt;Applicable values&lt;/b&gt;:
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Details&lt;/p&gt;
										&lt;p class="edef"&gt;Include most available fields (such as StoreURL) in the
										response (except fields that can affect the call's response time).&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; FeedbackDetails&lt;/p&gt;
										&lt;p class="edef"&gt;Include a container for information about one feedback entry.
										&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; FeedbackHistory&lt;/p&gt;
										&lt;p class="edef"&gt;Include a container for summary feedback data for a user.
										&lt;/p&gt;
										&lt;br&gt;
									Use a comma to specify multiple values. (In this case,
									the results are cumulative.) See "GetUserProfile Samples"
									for an example of how to use this field.&lt;br&gt;
									&lt;br&gt;
									See "Detail Controls" for a complete list of
									fields that can be returned for each selector.
								</xs:documentation>
                  <xs:appinfo>
                    <PresentDetails>Yes</PresentDetails>
                    <SeeLink>
                      <Title>Detail Controls</Title>
                      <URL>#detailControls</URL>
                    </SeeLink>
                    <SeeLink>
                      <Title>GetUserProfile Samples</Title>
                      <URL>#samples</URL>
                    </SeeLink>
                    <CallInfo>
                      <CallName>GetUserProfile</CallName>
                      <RequiredInput>No</RequiredInput>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GetUserProfileResponse" type="ns:GetUserProfileResponseType" />
      <xs:complexType name="GetUserProfileResponseType">
        <xs:annotation>
          <xs:documentation>
				Response to GetUserProfile request.
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="User" type="ns:SimpleUserType">
                <xs:annotation>
                  <xs:documentation>
									Contains the returned user data for the specified eBay user.
								</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetUserProfile</CallName>
                      <Details>IncludeSelector: none</Details>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="FeedbackHistory" type="ns:FeedbackHistoryType">
                <xs:annotation>
                  <xs:documentation>
									Summary feedback data for a user. Contains counts of positive, neutral,
									and negative feedback for predefined time periods.
								</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetUserProfile</CallName>
                      <Details>IncludeSelector: FeedbackHistory</Details>
                      <Returned>Always</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="FeedbackDetails" type="ns:FeedbackDetailType">
                <xs:annotation>
                  <xs:documentation>
									The FeedbackDetails container has fields (ItemID, etc.) with information
									about one feedback entry. When you call GetUserProfile, the 5 (maximum) most
									recent feedback records are returned in FeedbackDetails containers.
								</xs:documentation>
                  <xs:appinfo>
                    <CallInfo>
                      <CallName>GetUserProfile</CallName>
                      <Details>IncludeSelector: FeedbackDetails</Details>
                      <Returned>Conditionally</Returned>
                    </CallInfo>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GeteBayTimeRequest" type="ns:GeteBayTimeRequestType" />
      <xs:complexType name="GeteBayTimeRequestType">
        <xs:annotation>
          <xs:documentation>
				Gets the official eBay system time in GMT.
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractRequestType" />
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="GeteBayTimeResponse" type="ns:GeteBayTimeResponseType" />
      <xs:complexType name="GeteBayTimeResponseType">
        <xs:annotation>
          <xs:documentation>
				The Timestamp field indicates the official eBay system time in GMT.
				The value returned represents the date and time when eBay processed the request.
				The value is in the ISO 8601 date-time format (YYYY-MM-DDTHH:MM:SS.SSSZ). 
			</xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:extension base="ns:AbstractResponseType" />
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="HalfCatalogProductType">
        <xs:annotation>
          <xs:documentation>
			Information about an Half.com catalog product.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Title" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The title of the product, as specified in the catalog.
						Always returned when Product is returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DetailsURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						Fully qualified URL for optional information about the product,
						such as a movie's description or film credits. This information
						is hosted through the Half.com Web site and it cannot be edited.
						Portions of the content are protected by copyright.
						Applications can include this URL as a link in product search results
						so that end users can view additional descriptive details about
						the product. This is usually always returned when Product is returned,
						but it may be safest to check for the existence of this field.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StockPhotoURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						Fully qualified URL for a stock image (if any) that is associated
						with the Half.com catalog product. The URL is for the image Half.com
						usually displays in product search results (usually 70px tall).
						It may be helpful to calculate the dimensions of the photo
						programmatically before displaying it.
						Only returned if a URL is available for the product.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingCostSummary" type="ns:ShippingCostSummaryType">
            <xs:annotation>
              <xs:documentation>
						Contains basic shipping-related costs for the item. If Item.Quantity is greater
						than 1, this is the shipping cost for one item. If the seller offers a choice of
						more than one shipping service (such as USPS Ground or Expediated), this is the
						cost of the "first" shipping option (usually the lowest cost option).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Details>IncludeSelector: Items</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DisplayStockPhotos" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						If true, your application can attempt to display stock photos that
						are returned. If false, your application should not attempt to display
						any stock photos that are returned. This recommendation is useful for
						catalog data related to products like coins, where stock photos are not
						necessarily applicable or available. An application with a graphical
						user interface can use this flag to determine
						when to hide customized stock photo widgets.
						Always returned when Product is returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ItemCount" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						Total number of listings on the Half.com site that use stock information from
						this catalog product. This value can be greater than the number of listings
						returned in ItemArray.
						&lt;br /&gt;
						&lt;br /&gt;
						&lt;span class="tablenote"&gt;&lt;strong&gt;Note:&lt;/strong&gt;
							ItemCount is always returned, however, it's value will be zero unless
							you use ProductID in the search request and you set IncludeSelector to
							Items. Although ItemCount always returns 0 if you search using QueryKeyword,
							check for the presence of MinPrice; if the response contains MinPrice, you
							can retrieve a value for ItemCount as described.
						&lt;/span&gt;
					</xs:documentation>
              <xs:appinfo>
                <Min>0</Min>
                <Max />
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ProductID" type="ns:ProductIDType">
            <xs:annotation>
              <xs:documentation>
						The Half.com or external IDs associated with the product. Use the Reference
						value as input to search for the same product in the future, or
						use the ISBN, EAN, or UPC value (if returned).
						The ISBN, EAN, and UPC values can also be useful as keys
						if your application is comparing products across different sites.
						Always returned when Product is returned.
						</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DomainName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The name of the domain in which the product was found.
						If the product is mapped to multiple domains, Half.com returns
						the most applicable domain (as determined by Half.com).
						Always returned when Product is returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ItemSpecifics" type="ns:NameValueListArrayType">
            <xs:annotation>
              <xs:documentation>
						A list of name/value pairs that are included in the product's
						pre-filled Item Specifics. These indicate common aspects or
						characteristics of the product, such as Publisher (for a book).
						Also see ProductID for ISBN, UPC, or EAN values, if applicable.
						This is usually returned. (We are not aware of any cases in which this
						node is not be returned. However, it may be safest to check for the
						existence of this node.)
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ItemArray" type="ns:SimpleItemArrayType">
            <xs:annotation>
              <xs:documentation>
						A list of active items that were listed with the requested product.
						Results are sorted by current price (lowest first),
						then by recent positive feedback (highest first).
						&lt;br&gt;
						&lt;br&gt;
						Only returned when you specify Items in IncludeSelector, and the
						product has matching items that are currently active on Half.com.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Details>IncludeSelector: Items</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ReviewCount" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						The total number of reviews that are available for this product
						on the Half.com Web site. This can be greater than the number of
						reviews returned by FindProducts. In a future release, we will provide
						the capability to retrieve details about reviews.
						Always returned when Product is returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Min>0</Min>
                  <Max />
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MinPrice" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The minimum price for all active items listed under this product.
						This field is only returned when QueryKeywords is specified in the request.
					</xs:documentation>
              <xs:appinfo>
                <Min>0</Min>
                <Max />
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="HalfItemConditionCodeType">
        <xs:annotation>
          <xs:documentation>
				Controls values for item condition, especially for Books catalog.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="BrandNew">
            <xs:annotation>
              <xs:documentation>
						New, unread, unused and in perfect condition.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LikeNew">
            <xs:annotation>
              <xs:documentation>
						Item still in original packaging, no wear and tear, all 
						facets of the product are intact.  (Could easily be mistaken 
						for brand new.)
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="VeryGood">
            <xs:annotation>
              <xs:documentation>
						Doesn't look brand new but has no easily noticeable damage 
						and very minimal wear and tear.  (You would give it to a 
						good friend as a gift)
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Good">
            <xs:annotation>
              <xs:documentation>
						Very minimal damage to the item and still includes all accessories 
						such as dust jackets, liner notes, and cases.
						(You would use it yourself, but wouldn't necessarily give it as a gift)
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Acceptable">
            <xs:annotation>
              <xs:documentation>
						Some damage to the item but integrity still intact.  May be missing an
						accessory. (Item beaten up a bit but it works)
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Used">
            <xs:annotation>
              <xs:documentation>
						Some damage to the item and visibly used.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="HalfProductsType">
        <xs:annotation>
          <xs:documentation>
			Information about an eBay catalog product.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Product" type="ns:HalfCatalogProductType">
            <xs:annotation>
              <xs:documentation>
						A set of Half.com catalog products. This contains stock information about a
						particular DVD, book, or other product.
						When you use QueryKeywords in the request, FindHalfProducts returns a
						maximum of 20 products per page.
						When you use ProductID in the request, FindHalfProducts usually only
						returns 1 product. ItemCount is only returned when ProductID is used
						in the request and the IncludeSelector is set to Items or Details.
						(If more than one product matches the same ProductID,
						FindProducts will return all of those products. As of the time
						of this writing, we expect this to be a rare case.)
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Details>IncludeSelector: none</Details>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="HistogramEntryType">
        <xs:annotation>
          <xs:documentation>
				A generic histogram entry type.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Name" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						This is the domain name.&lt;br&gt;
						&lt;br&gt;
						A product can be mapped to more than one domain.
						This means that even if a name appears in this histogram and the
						Count is greater than 1, you won't necessarily see the
						same name returned for each returned product (in the Product node
						of the response). That is, Product.DomainName only
						returns the most applicable domain name (as determined by eBay).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: DomainHistogram</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Count" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						This is the number of products found in the domain.
						If a product is mapped to more than one domain, it is counted separately
						for each domain. (For example, if the same product name appears in both
						Children's Books and Fiction Books, the count for both of these
						domains will include that product.) This means you cannot sum the
						product counts to determine the total number of matching products
						across all domains. The histogram is only intended to show the number
						of matching products in each individual domain.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: DomainHistogram</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="InsuranceOptionCodeType">
        <xs:annotation>
          <xs:documentation>
				The seller's requirements regarding whether the buyer pays
				for shipping insurance.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Optional">
            <xs:annotation>
              <xs:documentation>
						The seller offers the buyer the choice of paying
						for shipping insurance or not.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Required">
            <xs:annotation>
              <xs:documentation>
						The seller requires that the buyer pay for
						shipping insurance.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NotOffered">
            <xs:annotation>
              <xs:documentation>
						The seller does not offer shipping insurance to the buyer.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="IncludedInShippingHandling">
            <xs:annotation>
              <xs:documentation>
						The seller is not charging separately for shipping
						insurance costs; any insurance is already included in the
						base shipping cost.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NotOfferedOnSite">
            <xs:annotation>
              <xs:documentation>
						Shipping insurance is not offered as a separate option on the site
						where the item is listed. (Some shipping services, such as
						DE_InsuredExpressOrCourier, include insurance as part of the service.) If
						another insurance option is specified in the listing request and the site does
						not support shipping insurance as a separate option, eBay will reset the
						insurance option to this value. At the time of this writing, this option is
						only meaningful for the eBay Germany, Austria, and Switzerland sites.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="InternationalShippingServiceOptionType">
        <xs:annotation>
          <xs:documentation>
				Shipping costs and options related to an international shipping service. When used
				as input, if one is provided, at least one domestic ShippingService must be
				provided. This type does not exist before compatibility level 383.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ShippingInsuranceCost" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The insurance cost associated with shipping a single item with this shipping
						service. If the buyer bought more than one of this item, this proportional to
						QuantitySold. If the item has not yet been sold, insurance information cannot
						be calculated and the value is 0.00. For calculated shipping only.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingServiceName" type="xs:token">
            <xs:annotation>
              <xs:documentation>
						An international shipping service offered for shipping the item (for
						example, UPS Ground). For flat and calculated shipping.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingServiceAdditionalCost" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The cost of shipping each additional item beyond the first item.
						For single-item listings, if this is not provided, it is defaulted
						to zero. For multi-quantity listings, if this is not provided, it
						is set to the value of (in)ShippingServiceCost (unless the request
						version is lower than 665, in which case ShippingServiceAdditionalCost
						is required and is not defaulted).
						For flat shipping only.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingServiceCost" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The basic shipping cost of the item.
						&lt;br&gt;
						&lt;br&gt;
						&lt;i&gt;Flat shipping:&lt;/i&gt; single-item listing: this matches (in)ShippingServiceCost;
						multi-quantity listing: with a request version of 665 or greater,
						this is the total of (in)ShippingServiceCost plus
						((in)ShippingServiceAdditionalCost times the number of items beyond the first
						item), and with a request version lower than 665, this is (in)ShippingServiceCost.
						&lt;br&gt;
						&lt;i&gt;Promotional shipping:&lt;/i&gt; For a request version lower than 665, promotional
						shipping has no effect on shipping costs. Otherwise: if the promotional
						shipping option is lower than other shipping services being offered, the
						savings is reflected in the returned shipping cost;
						the shipping service named Promotional Shipping Service (or whatever is
						the localized name for it) is included among the shipping services;
						if the promotional shipping cost is lower than the cost of other shipping
						services being offered, it is presented first in the list (the lowest shipping
						service cost is always presented first, regardless of whether there is
						promotional shipping).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingServicePriority" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						Seller-preferred presentation order relative to other service options. Valid
						values are: 1, 2 and 3 (first, second and third choices). For flat and
						calculated shipping.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ShipsTo" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						An international location or region to which the item may be shipped via this
						particular shipping service. Associated with the shipping service by the
						seller. This is basically the same as SimpleItemType.ShipToLocations except
						that this is spelled out and the other is abbreviated.
						Returned with request version 665 or greater, if set via Trading API.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EstimatedDeliveryMinTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>
						The minimum guaranteed date in which the item could reach the
						buyer's location.
						Not applicable to Half.com.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EstimatedDeliveryMaxTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>
						The maximum guaranteed date in which the item could reach the
						buyer's location.
						Not applicable to Half.com.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ImportCharge" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The total cost of customs and taxes for the international leg of an order shipped using the Global Shipping Program. This amount is calculated and supplied for each item by the international shipping provider when a buyer views the item properties.
					</xs:documentation>
              <xs:appinfo>
                <Min>0</Min>
                <Max />
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ListingStatusCodeType">
        <xs:annotation>
          <xs:documentation>
				Specifies an active or ended listing's status in eBay's processing
				workflow. If a listing ends with a sale (or sales), eBay needs to
				update the sale details (e.g., total price and buyer/high bidder)
				and the final value fee. This processing can take several minutes.
				If you retrieve a sold item and no details about the buyer/high
				bidder are returned, use this
				listing status information to determine whether eBay has finished
				processing the listing.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Active">
            <xs:annotation>
              <xs:documentation>
						(out) The listing is still live, or it has recently ended
						but eBay has not completed processing
						the listing (e.g., we're still determining the high bidder).
						A multi-item listing is considered active until all items
						have winning bids or purchases or the listing's end time
						has passed. (That is, if the listing has a Quantity of 10,
						the sale of 1 of those items doesn't end the listing.)
						If the listing has ended but this Active
						status is returned, please allow several minutes for eBay to
						finish processing the listing.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Ended">
            <xs:annotation>
              <xs:documentation>
						(out) The listing has ended and eBay has completed processing
						of the sale (if any), such as determining the high bidder.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Completed">
            <xs:annotation>
              <xs:documentation>
						(out) The listing has ended and eBay has completed processing
						of the sale (if any), such as determining the high bidder.
						You can think of Completed and Ended as essentially equivalent.
						(The difference is only meaningful to the seller of the item,
						as Completed indicates whether eBay has finished calculating
						certain selling fees.)
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						(out) Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ListingTypeCodeType">
        <xs:annotation>
          <xs:documentation>
				Specifies the selling format used for a listing.
			</xs:documentation>
          <xs:appinfo>
            <allValuesExcept>Dutch, Express</allValuesExcept>
          </xs:appinfo>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Unknown">
            <xs:annotation>
              <xs:documentation>
						Unknown auction type. (This is not normally used.)
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Chinese">
            <xs:annotation>
              <xs:documentation>
						Single-quantity online auction format.
						A Chinese auction has a Quantity of 1. Buyers engage in competitive bidding,
						although Buy It Now may be offered as long as no bids have been placed.
						Online auctions are listed on eBay.com, and they are also listed in
						the seller's eBay Store if the seller is a Store owner.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Dutch">
            <xs:annotation>
              <xs:documentation />
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Live">
            <xs:annotation>
              <xs:documentation>
						Live auction, on-site auction that can include non-eBay bidders. Live auctions
						are listed on the eBay Live Auctions site, in live auction categories. They can
						also appear on eBay if the seller lists the lot in a secondary, eBay category.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Auction">
            <xs:annotation>
              <xs:documentation>
						Reserved for future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AdType">
            <xs:annotation>
              <xs:documentation>
						Advertisement to solicit inquiries on listings such as real estate. Permits no
						bidding on that item, service, or property. To express interest, a buyer fills
						out a contact form that eBay forwards to the the seller as a lead. This format
						does not enable buyers and sellers to transact online through eBay, and eBay
						Feedback is not available for ad format listings.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="StoresFixedPrice">
            <xs:annotation>
              <xs:documentation>
						A fixed-price format for eBay Store sellers. Store Inventory listings appear
						after other listings in regular browse and search item lists on eBay. They have
						a lower Insertion Fee and longer listing durations. This item type can only be
						specified by sellers who have an eBay Store. Store Inventory listings are listed
						on eBay.com as well as in the seller's eBay Store.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PersonalOffer">
            <xs:annotation>
              <xs:documentation>
						Second chance offer made to a non-winning bidder on an ended listing. A seller
						can make an offer to a non-winning bidder when either the winning bidder has
						failed to pay for an item or the seller has a duplicate of the item. Second-
						chance offer items are on eBay, but they do not appear when browsing or
						searching listings. You need to already know the item ID in order to retrieve a
						second-chance offer.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="FixedPriceItem">
            <xs:annotation>
              <xs:documentation>
						A basic fixed-price listing with a Quantity of 1. Allows no auction-style
						bidding. Also known as Buy It Now Only on some sites, this should not to be
						confused with the BuyItNow option that is available for competitive-bid
						auctions. Fixed-price listings appear on eBay.com. They are also listed in a
						seller's eBay Store if the seller is a Store owner.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Half">
            <xs:annotation>
              <xs:documentation>
						Half.com listing (item is listed on Half.com, not on eBay).
						Reserved for future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LeadGeneration">
            <xs:annotation>
              <xs:documentation>
						Lead Generation format (advertisement-style listing to solicit
						inquiries or offers, no bidding or fixed price, listed on eBay).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Express">
            <xs:annotation>
              <xs:documentation />
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MinimumAdvertisedPriceExposureCodeType">
        <xs:annotation>
          <xs:documentation>
				Defines how the buyer is to view the discounted price for MAP items. If a seller offers an item
				for less than the item's agreed upon Minimum Advertised Price (MAP), the discounted price of the
				item cannot be displayed on the page containing the item.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="PreCheckout">
            <xs:annotation>
              <xs:documentation>
						PreCheckout specifies that the buyer must click a link (or a button) to navigate to a separate
						page (or window) that displays the discount price.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DuringCheckout">
            <xs:annotation>
              <xs:documentation>
						DuringCheckout specifies that the discounted price must be shown on the eBay checkout
						flow page.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="None">
            <xs:annotation>
              <xs:documentation>
						None means the discount price is not shown via either PreCheckout nor DuringCheckout.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Reserved for future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="NameValueListArrayType">
        <xs:annotation>
          <xs:documentation>
				A list of one or more valid names and corresponding values.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="NameValueList" type="ns:NameValueListType">
            <xs:annotation>
              <xs:documentation>
						This list is an array of Item Specifics, which are category-specific 
						fields that the seller added to describe the listing. The names of 
						these fields are different for items in different categories, so 
						they're returned in a generic name/value structure.
						&lt;br&gt;&lt;br&gt;
						For example, Item Specifics for a car might include a field like
						Make=Toyota (where Make is returned in Name, and Toyota is returned 
						in Value) and Model=Prius (where Model is returned in Name, and 
						Prius is returned in Value).&lt;br&gt;
						&lt;br&gt;
						In multi-variation listings, the same name cannot appear in both
						the VariationSpecifics node and in the ItemSpecifics node.
						&lt;br&gt;&lt;br&gt;
						For FindProducts, this can also be an Item Specific that is defined 
						for a product. That is, Item Specifics can be returned both for
						items and products in FindProducts.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <RequiredInput>No</RequiredInput>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: ItemSpecifics</Details>
                  <Context>Item.ItemSpecifics</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                  <Context>Item.Variations</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NameValueListType">
        <xs:annotation>
          <xs:documentation>
				A name and corresponding value (a name/value pair).
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Name" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The name of the item specific.
						&lt;br&gt;
						&lt;br&gt;
						This field is returned only in responses if the seller included an item specific
						Name in the listing. However, if the seller didn't also include a corresponding
						value for the item specific, it is best to not display the name to name to avoid
						confusing users.
						&lt;br&gt;
						&lt;br&gt;
						For the item condition, this usually includes the word "Condition" for eBay US,
						UK, Australia, and India listings; and "Artikelzustand" for eBay Germany, Austria,
						and Switzerland listings.
						&lt;br&gt;
						&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
							Ignore item specifics with SIFFTAS in the name. These are for internal use by
							eBay and aren't meaningful to users.
						&lt;/span&gt;
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <RequiredInput>No</RequiredInput>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: ItemSpecifics</Details>
                  <Context>Item.ItemSpecifics</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                  <Context>Item.Variations</Context>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Value" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						A value for the item specific.
						&lt;br&gt;
						&lt;br&gt;
						This field is only returned in responses if the seller included a value
						for an item specific. In the GetSingleItem response, this field is always
						returned for each item specific that is returned (if any). However,
						if the seller didn't select a value for the item specific,
						this field may return empty, or it may return a value like "-",
						"Not Selected", or "Unspecified" (or the equivalent in the language
						of the site).
						&lt;br&gt;
						&lt;br&gt;
						For the item condition, this usually includes the
						word "New" or "Used" for eBay US, UK, Australia, and India listings;
						and "Neu" or "Gebraucht" for eBay Germany, Austria, and Switzerland
						listings.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <RequiredInput>No</RequiredInput>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: ItemSpecifics</Details>
                  <Context>Item.ItemSpecifics</Context>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                  <Context>Item.Variations</Context>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PicturesType">
        <xs:annotation>
          <xs:documentation>
			Defines variation-specific pictures associated with one 
			VariationSpecificName (e.g., Color) whose values differ across variations.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="VariationSpecificName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						One aspect of the variations that will be illustrated in the 
						pictures for all variations. For example, if each variation 
						is visually distinguished by color and the pictures show 
						the different colors available, then specify "Color" as the name.
						The name must match one of the names specified in the 
						variation specifics.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="VariationSpecificPictureSet" type="ns:VariationSpecificPictureSetType">
            <xs:annotation>
              <xs:documentation>
						One or more pictures that help buyers distinguish the Variations. 
						Multiple picture sets can be specified. For example, suppose a 
						listing contains blue and black color variations, and 
						VariationSpecificName=Color. In this case, one picture set could 
						contain pictures of the blue shirts (e.g., front view, back view, 
						and close-up of a trim detail), and another picture set could 
						contain pictures of the black shirts.&lt;br&gt;
						&lt;br&gt;
						Sellers do not necessarily provide pictures for all values that 
						correspond to the variation specific name. 
						For example, a listing could have pictures depicting the blue and 
						black color variations, but not the pink variations.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PopularSearchesType">
        <xs:annotation>
          <xs:documentation>
				Contains search word information, as it is related to a category.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="CategoryID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Numeric ID of a category on eBay.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularSearches</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CategoryParentID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Category ID identifying a category that is the parent category
						of the category indicated in the request.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularSearches</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="QueryKeywords" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Specifies which QueryKeywords corresponds to this PopularSearchResult.
						Query Keywords are returned in the output to clarify which result set corresponds to
						which QueryKeyword inputs (as there can be more than one set of keywords in the input).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularSearches</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="AlternativeSearches" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Alternative search keywords for the query keywords, separated by semicolons.
						You can use this to find other search terms buyers and sellers may be interested in.
						For example, if a seller lists an item with "wedding" in the title, they may also be
						interested in adding "bridal" to the title because bridal is an alternative search
						keyword which buyers have used.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularSearches</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RelatedSearches" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Keywords related to the query keywords, separated by semicolons.
						You can use this to find more detailed related keywords.  For example,
						the query keyword "wedding" is related to searches for
						"wedding decorations;wedding favors;wedding supplies;wedding dresses..." which helps
						the seller and buyer specify their query with more detail and precision.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularSearches</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CategoryName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Category Name identifying the name of current CategoryID.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularSearches</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CategoryParentName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The name of category which is a parent category to the CategoryID
						specified in the request.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularSearches</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PricingTreatmentCodeType">
        <xs:annotation>
          <xs:documentation>
				Defines the type of treatment applied to a discounted item,
				either Strikethrough Pricing or Minimum Advertised Price.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="STP">
            <xs:annotation>
              <xs:documentation>
						STP stands for Strikethrough Pricing.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MAP">
            <xs:annotation>
              <xs:documentation>
						MAP stands for Minimum Advertised Price.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="None">
            <xs:annotation>
              <xs:documentation>
						None means the item does not qualify for either STP or MAP pricing.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Reserved for future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProductIDCodeType">
        <xs:annotation>
          <xs:documentation>
				ProductID type for product searches.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="ISBN">
            <xs:annotation>
              <xs:documentation>
						ISBN-10 or ISBN-13 value for books. (The string length of ProductID
						indicates whether the ID is 10 or 13 characters.)
						If you know a book's ISBN, you can use this instead of the
						eBay CatalogItem or Reference ID to search for that book.
						Max length of corresponding value: 13
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="EAN">
            <xs:annotation>
              <xs:documentation>
						EAN value for books. (This is used more commonly in
						European countries.)
						If you know a book's EAN, you can use this instead of the
						eBay CatalogItem or Reference ID to search for that book.
						Max length of corresponding value: 13
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UPC">
            <xs:annotation>
              <xs:documentation>
						UPC value for products in Music (e.g., CDs), DVDs &amp; Movies,
						and Video Games categories (or domains).
						If you know a product's UPC, you can use this instead of the
						eBay CatalogItem or Reference ID to search for that product.
						Max length of corresponding value: 12
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MPN">
            <xs:annotation>
              <xs:documentation>
						Reserved for future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Keywords">
            <xs:annotation>
              <xs:documentation>
						Reserved for future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CatalogItem">
            <xs:annotation>
              <xs:documentation>
						Reserved for future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Reference">
            <xs:annotation>
              <xs:documentation>
						The global reference ID for an eBay catalog product.
						A reference ID is a fixed reference to a product
						(regardless of version). 
						One reference ID can be associated with multiple CatalogItem IDs.
						To determine valid reference IDs for products to use as input to FindProducts, first call
						FindProducts with QueryKeywords (or ProductID).
						Each product in the response includes a reference ID.&lt;br&gt;
						&lt;br&gt;
						As of mid-2008, some sites (such as eBay US, Germany, Austria, and Switzerland) are 
						updating, replacing, deleting, or merging some products (as a result of migrating from one
						catalog data provider to another). 
						If you specify one of these products in a request, the call may return the product with a warning, 
						or it may return an error if the product has been deleted.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ProductIDType">
        <xs:annotation>
          <xs:documentation>
				Product ID has an attribute of ProductIDCodeType and a string value.
			</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="type" type="ns:ProductIDCodeType">
              <xs:annotation>
                <xs:documentation>
 							The nature of identifier being used. For FindHalfProducts, FindProducts,
 							and FindReviewsAndGuides, only Reference, ISBN, UPC,
 							and EAN are supported.
							Required when ProductID is specified.
						</xs:documentation>
                <xs:appinfo>
                  <CallInfo>
                    <CallName>FindReviewsAndGuides</CallName>
                    <CallName>FindHalfProducts</CallName>
                    <CallName>FindProducts</CallName>
                    <AllValuesExcept>CatalogItem,MPN, Keywords</AllValuesExcept>
                    <RequiredInput>Conditionally</RequiredInput>
                    <Returned>Always</Returned>
                  </CallInfo>
                  <CallInfo>
                    <CallName>FindReviewsAndGuides</CallName>
                    <Returned>Conditionally</Returned>
                  </CallInfo>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:simpleType name="ProductSortCodeType">
        <xs:annotation>
          <xs:documentation>
				Controls the order of product (not item) searches.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Popularity">
            <xs:annotation>
              <xs:documentation>
						Sort by product popularity (as determined by eBay).
						(This is the default sort order.)
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Rating">
            <xs:annotation>
              <xs:documentation>
						Sort by average rating.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReviewCount">
            <xs:annotation>
              <xs:documentation>
						Sort by the number of reviews on eBay.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ItemCount">
            <xs:annotation>
              <xs:documentation>
						Sort by the number of active items listed with this product.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Title">
            <xs:annotation>
              <xs:documentation>
						Sort by the product title.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Reserved for values that are not available in the version of the schema
						you are using. If eBay adds a new value to this code type as of a
						newer version, we return CustomCode instead when you specify a
						lower request version.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProductStateCodeType">
        <xs:annotation>
          <xs:documentation>
				State of a catalog product that may have been updated, replaced, marked for deletion,
				or merged with another product.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Update">
            <xs:annotation>
              <xs:documentation>
						The product details have been updated.
						If your application currently uses the product for listing or searching, 
						we recommend that you check to make sure the product data still meets your needs.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UpdateMajor">
            <xs:annotation>
              <xs:documentation>
						This product has changed. This product has been mapped to a newer
						product in the catalog that eBay (or Half.com) is currently using,
						and its details have been updated based on the new catalog data.
						The product reference ID remains the same
						(but the longer product ID string may have changed).
						If your application currently uses the product for searching, 
						we recommend that you check to make sure the product data still meets your needs.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UpdateNoDetails">
            <xs:annotation>
              <xs:documentation>
						This product was previously available in an earlier catalog, 
						but it has not been mapped to a product in the catalog that eBay
						is currently using. It can still be used for searching, but 
						it may contain fewer details than other products.
						If your application currently uses the product for searching, 
						we recommend that you check to make sure the product data still meets your needs.
						Not applicable to Half.com.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Merge">
            <xs:annotation>
              <xs:documentation>
						Some information in this product is scheduled to be merged into another product 
						in the catalog that eBay (or Half.com) is currently using. This product may 
						be removed from the system at any time.
						If your application currently uses the product for searching, 
						we recommend that you update your application to use a product that is not 
						scheduled to be merged or deleted.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Delete">
            <xs:annotation>
              <xs:documentation>
						This product is marked for deletion, and it will not be mapped to another product.
						If your application currently uses the product for searching, 
						we recommend that you update your application to use a product that is not 
						scheduled to be merged or deleted.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Reserved for internal or future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="QuantityAvailableHintCodeType">
        <xs:annotation>
          <xs:documentation>
				Indicates the text message type of the item's quantity availability.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Limited">
            <xs:annotation>
              <xs:documentation>
						(out) The message "Limited quantity available" is shown in the web
						flow (e.g., for a flash sale or a Daily Deal).
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MoreThan">
            <xs:annotation>
              <xs:documentation>
						(out) The message "More than 10 available" is shown in the web flow.
						10 is the value of QuantityThreshold tag based on the seller's
						preference.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Reserved for internal or future use.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="QuantityInfo">
        <xs:annotation>
          <xs:documentation>
				Type defining the &lt;b&gt;QuantityInfo&lt;/b&gt; container, which consists of the 
				&lt;b&gt;MinimumRemnantSet&lt;/b&gt; field, which sets the minimum amount of event tickets that can
				remain in the fixed-price listing's inventory after a buyer purchases one or more tickets (but
				not all) from the listing.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="MinimumRemnantSet" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						This field enables the seller to avoid being left with 1 item in a multi-quanity, fixed-
						priced event ticket listing. A typical use case is event tickets in reserved,
						adjacent seats, or items that typically only sell if more than 
						1 can be purchased at once. 
						&lt;br&gt; &lt;br&gt;
						At listing time, sellers specify the minimum number of items that 
						should remain if a buyer doesn't purchase all the items. 
						Based on the value of &lt;b&gt;MinimumRemnantSet&lt;/b&gt; and the listing's 
						available quantity (Quantity-QuantitySold), eBay calculates the quantity of tickets
						a buyer can purchase. 
						For example, suppose a seller lists 5 tickets, and wants at least 
						2 tickets remaining for the final buyer to purchase. 
						In this case, the seller would set &lt;b&gt;MinimumRemnantSet&lt;/b&gt; to '2'. 
						This means a buyer can purchase 1, 2, 3, or 5 tickets, but not 4 
						(because 4 would leave the seller with 1 ticket).&lt;br&gt;
						&lt;br&gt;
						To remove this restriction when revising or relisting item, the seller would
						set the &lt;b&gt;MinimumRemnantSet&lt;/b&gt; value to '1'.&lt;br&gt;
						&lt;br&gt;
						This field is currently only applicable for event ticket listings in US and CA, but 
						may apply to other categories in the future. It is only returned if set by the seller 
						in the listing.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReturnPolicyType">
        <xs:annotation>
          <xs:documentation>
				Type for the return policy details of an item.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Refund" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Specifies how a refund will be made, e.g. as an exchange.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ReturnsWithin" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Specifies the length of time in which the item must be returned
						under the return policy.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ReturnsAccepted" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Information about returns accepted.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Description" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						A description of the return policy for the item.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="WarrantyOffered" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Information about the warranty offered.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="WarrantyType" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The type of warranty offered.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="WarrantyDuration" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The length of the warranty offered.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EAN" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Contains the EAN.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingCostPaidBy" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The party who pays the cost of shipping for a returned item.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RestockingFeeValue" type="xs:token">
            <xs:annotation>
              <xs:documentation>
						Display string that indicates the restocking fee charged by the 						
						seller for returned items. This value is directly related to the
						&lt;b&gt;RestockingFeeValueOption&lt;/b&gt; value, with the difference
						being that applications can use &lt;b&gt;RestockingFeeValue&lt;/b&gt;
						to present the &lt;b&gt;RestockingFeeValueOption&lt;/b&gt; value
						buttons or drop-down lists.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RestockingFeeValueOption" type="xs:token">
            <xs:annotation>
              <xs:documentation>
						This enumeration value indicates the restocking fee charged by the
						seller for returned items. In order to charge the buyer a restocking
						fee when an item is returned, a US seller must input a restocking
						fee value as part of the return policy.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReviewDetailsType">
        <xs:annotation>
          <xs:documentation>
				Contains product reviews written by eBay members.
			 </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="AverageRating" type="xs:float">
            <xs:annotation>
              <xs:documentation>
						The product's average rating (out of 5) based on all reviews.
						For example, a value like 4.5 would mean the average rating
						is 4.5 out of 5. (See ReviewCount for the total number of reviews.)
					</xs:documentation>
              <xs:appinfo>
                <Min>0</Min>
                <Max>5</Max>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Review" type="ns:ReviewType">
            <xs:annotation>
              <xs:documentation>
						An eBay member's review of the product.
					</xs:documentation>
              <xs:appinfo>
                <MaxOccurs>20</MaxOccurs>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ReviewSortCodeType">
        <xs:annotation>
          <xs:documentation />
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="CreationTime">
            <xs:annotation>
              <xs:documentation>
						Sorts reviews by creation time, in ascending or descending order.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Reserved for values that are not available in the version of the schema
						you are using. If eBay adds a new value to this code type as of a
						newer version, we return CustomCode instead when you specify a
						lower request version.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ReviewType">
        <xs:annotation>
          <xs:documentation>
				A product review written by an eBay member.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="URL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						A link to the full review on the eBay Web site.
						This URL optimized for natural search: "_W0QQ" is like "?"
						(question mark), "QQ" is like "&amp;" (ampersand),
						and "Z" is like "=" (equals sign).&lt;br&gt;
						&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
						For a link to all reviews for the product, remove the upvr parameter
						from this URL. See the eBay Web Services guide for an example.
						&lt;/span&gt;
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Title" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The title of the review.
					</xs:documentation>
              <xs:appinfo>
                <MaxLength>55</MaxLength>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Rating" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						The eBay member's rating of the product.
					</xs:documentation>
              <xs:appinfo>
                <Min>0</Min>
                <Max>5</Max>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Text" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The text of the review. If the review is longer than
						2000 characters, the text is cut off and it ends with "...".
						See Review.URL for a link to the full text of the review.
					</xs:documentation>
              <xs:appinfo>
                <MaxLength>2000</MaxLength>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="UserID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The reviewer's eBay user ID.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CreationTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>
						The time and date when the reviewer posted the review.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindReviewsAndGuides</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SalesTaxType">
        <xs:annotation>
          <xs:documentation>
				Type for expressing sales tax data.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="SalesTaxPercent" type="xs:float">
            <xs:annotation>
              <xs:documentation>
						Percent of an item's price to be charged as the sales
						tax for the transaction. The value passed in is stored with a
						precision of 3 digits after the decimal point (##.###).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SalesTaxState" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						State or jurisdiction for which the sales tax is being collected.
						Only returned if the seller specified a value.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingIncludedInTax" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						(US only) Whether shipping costs were part of the base amount
						that was taxed. Flat or calculated shipping.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SalesTaxAmount" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						(US only) The amount of sales tax, calculated for a
						transaction based on the SalesTaxPercent and pricing information.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SellingStatusType">
        <xs:annotation>
          <xs:documentation>
				Contains various details about the current status of a listing. These
				values are computed by eBay and cannot be specified at listing time.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ConvertedCurrentPrice" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						Not used. See Item.ConvertedCurrentPrice.
					</xs:documentation>
              <xs:appinfo>
                <NoCalls />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CurrentPrice" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						Not used. See Item.CurrentPrice and Variation.StartPrice.
					</xs:documentation>
              <xs:appinfo>
                <NoCalls />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="QuantitySold" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						The number of items sold from this variation. Subtract from
						Quantity to determine the number of items available.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ShippingCostSummaryType">
        <xs:annotation>
          <xs:documentation>
				Type for the shipping-related details for an item or transaction.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ShippingServiceName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The name of a shipping service.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingServiceCost" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The basic shipping cost of the item.
						This reflects the domestic shipping cost or the international shipping costs,
						depending on which applies (that is, whether the bidder/buyer is in the same
						country as the listing site of the item).
						&lt;br&gt;
						&lt;br&gt;
						In GetSingleItem, this is always returned when ShippingCostSummary is
						returned, except for when the ShippingType is Freight.
						&lt;br&gt;
						&lt;br&gt;
						GetShippingCosts:
						&lt;i&gt;Flat shipping:&lt;/i&gt; single-item listing: this matches (in)ShippingServiceCost;
						multi-quantity listing: with a request version of 665 or greater,
						this is the total of (in)ShippingServiceCost plus
						((in)ShippingServiceAdditionalCost times the number of items beyond the first
						item), and with a request version lower than 665, this is (in)ShippingServiceCost.
						&lt;br&gt;
						&lt;i&gt;Promotional shipping:&lt;/i&gt; For a request version lower than 665, promotional
						shipping has no effect on shipping costs. Otherwise: if the promotional
						shipping option is lower than other shipping services being offered, the
						savings is reflected in the returned shipping cost;
						the shipping service named Promotional Shipping Service (or whatever is
						the localized name for it) is included among the shipping services;
						if the promotional shipping cost is lower than the cost of other shipping
						services being offered, it is presented first in the list (the lowest shipping
						service cost is always presented first, regardless of whether there is
						promotional shipping).
						&lt;br&gt;
						&lt;i&gt;Shipping surcharge:&lt;/i&gt; With a request version of
						665 or greater, shipping cost includes any surcharge, and surcharge is not
						returned as an individual tag.  With a request version lower than 665,
						surcharge is not part of the total cost and is returned as its own tag.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <AllValuesExcept>Freight, Free</AllValuesExcept>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: ShippingCosts</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="InsuranceCost" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The cost of insurance. For flat rate shipping, this is the value set by the
						seller, if any. For calculated shipping, this is the value calculated by eBay
						with the shipping carrier for the particular item and can only be determined
						once the final item price is known when the listing ends. To determine whether
						a listing has ended, see EndTime or ListingStatus in GetSingleItem.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: ShippingCosts</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingType" type="ns:ShippingTypeCodeType">
            <xs:annotation>
              <xs:documentation>
						How the seller stated that cost of shipping is to be determined, such as flat rate or
						calculated.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <AllValuesExcept>Freight, Free</AllValuesExcept>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: ShippingCosts</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LocalPickup" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						If ShippingCosts is specified for the IncludeSelector, and if the seller has specified local
						pickup for this item; the LocalPickup boolean is returned as true. This indicates that the
						seller does not ship this item. If local pickup
						was not specified for this item by the seller, the LocalPickup boolean is not returned.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: ShippingCosts</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: ShippingCosts</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="InsuranceOption" type="ns:InsuranceOptionCodeType">
            <xs:annotation>
              <xs:documentation>
						Whether the seller offers shipping insurance and, if
						so, whether the insurance is optional or required. Flat and
						calculated shipping.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ListedShippingServiceCost" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The listed shipping cost of the item. If multiple items were purchased, this
						includes the listed ShippingServiceAdditionalCost.
						&lt;br&gt;
						&lt;br&gt;
						In GetSingleItem, this is always returned when ShippingCostSummary is
						returned, except when the ShippingType is Freight.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <AllValuesExcept>Freight, Free</AllValuesExcept>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: ShippingCosts</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ImportCharge" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The total cost of customs and taxes for the international leg of an order shipped using the Global Shipping Program. This amount is calculated and supplied for each item by the international shipping provider when a buyer views the item properties.
					</xs:documentation>
              <xs:appinfo>
                <Min>0</Min>
                <Max />
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ShippingDetailsType">
        <xs:annotation>
          <xs:documentation>
				Type for the shipping-related details for an item or transaction.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="GetItFast" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Indicates whether the seller has opted the listing into the Get
						It Fast feature. If GetItFast is true, and if at least one of
						the domestic shipping services offered by the seller is an
						expedited shipping service, every shipping service offered by
						the seller is considered a Get It Fast service, and the seller
						commits to delivering the item to the buyer-selected shipping
						service within one day.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <SeeLink>
                  <Title>Listing an Item</Title>
                  <URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=GetItFast</URL>
                </SeeLink>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="InsuranceCost" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The cost of insurance. For flat rate shipping, this is the value set by the
						seller, if any. For calculated shipping, this is the value calculated by eBay
						with the shipping carrier for the particular item and can only be determined
						once the final item price is known when the listing ends. To determine whether
						a listing has ended, use GetSingleItem.
						&lt;br&gt; &lt;br&gt;
						Not applicable to eBay Motors vehicle listings.
					</xs:documentation>
              <xs:appinfo>
                <Default>0.00</Default>
                <Min />
                <Max />
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="InsuranceOption" type="ns:InsuranceOptionCodeType">
            <xs:annotation>
              <xs:documentation>
						Whether the seller offers shipping insurance and, if so, whether the insurance
						is optional or required. Flat and calculated shipping.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="InternationalShippingServiceOption" type="ns:InternationalShippingServiceOptionType">
            <xs:annotation>
              <xs:documentation>
						Shipping costs and options related to an international shipping service. For
						calculated shipping, postal code must be known to determine final shipping
						cost (and this can only be known if a transaction has been created). For
						GetShippingCosts, if the postal code or bidder is in the same country as the
						listing site for the item, it is "domestic shipping" and this container is not
						returned (and ShippingServiceOption is returned instead). Otherwise, it is
						"international shipping" and this container is returned.
						&lt;br&gt; &lt;br&gt;
						For GetShippingCosts, results are filtered:  if any service is not available
						in the buyer's region, it is removed. If no services remain after this
						filtering, a warning is returned.
						&lt;br&gt;&lt;br&gt;
						Not applicable to Half.com or eBay Motors vehicle listings.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>DetailLevel: none, ItemReturnDescription,
							ItemReturnAttributes, ReturnAll</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SalesTax" type="ns:SalesTaxType">
            <xs:annotation>
              <xs:documentation>
						Sales tax details. US site only. Flat and calculated shipping.
						&lt;br&gt; &lt;br&gt;
						Not applicable to eBay Motors vehicle listings.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingRateErrorMessage" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						For most applicable calls, returns the words No Error or returns an error
						message related to an attempt to calculate shipping rates. For calculated
						shipping only.
						&lt;br&gt; &lt;br&gt;
						Not applicable to Half.com or eBay Motors vehicle listings.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ShippingServiceOption" type="ns:ShippingServiceOptionType">
            <xs:annotation>
              <xs:documentation>
						Shipping costs and options related to a domestic shipping service.
						For GetShippingCosts, if the postal code or bidder is
						in the same country as the listing site for the item, it is "domestic
						shipping" and this container is returned. Otherwise, it is "international
						shipping" and this container is not returned (and InternationalShippingServiceOption
						is returned instead, if it exists).
						For calculated shipping, postal code must be known to determine final shipping
						cost (and this can only be known if a transaction has been created).
						For flat shipping: if the listing has not yet ended, any domestic
						shipping details are returned; if the listing has ended, domestic
						shipping details are only returned if the buyer's location is
						"domestic" (that is, it is the same country as the listing site).
						&lt;br&gt;
						Not applicable to Half.com or eBay Motors vehicle listings.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TaxTable" type="ns:TaxTableType">
            <xs:annotation>
              <xs:documentation>
						Tax details for a jurisdiction such as a state or province.
						Returned empty in if no tax table was used.
						&lt;br&gt; &lt;br&gt;
						Not applicable to Half.com.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="InternationalInsuranceCost" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The cost of insurance for items shipped internationally. For flat rate
						shipping, this is the value set by the seller, if any. For calculated
						shipping, this is the value calculated by eBay with the shipping carrier for
						the particular item and can only be determined once the final item price is
						known when the listing ends. To determine whether a listing has ended, use
						GetSingleItem.
						&lt;br&gt; &lt;br&gt;
						Not applicable to eBay Motors vehicle listings.
					</xs:documentation>
              <xs:appinfo>
                <Default>0.00</Default>
                <Min />
                <Max />
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="InternationalInsuranceOption" type="ns:InsuranceOptionCodeType">
            <xs:annotation>
              <xs:documentation>
						Whether the seller offers shipping insurance for items shipped internationally
						and, if so, whether the insurance is optional or required. Flat and calculated
						shipping.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CODCost" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						Italy site (site ID 101) only. Contains the cost of cash-on-delivery shipping.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ExcludeShipToLocation" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						A location to which the seller will not ship.
						Returned only if set via Trading API.
						Returned only with a request version of 665 or greater.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ShippingServiceOptionType">
        <xs:annotation>
          <xs:documentation>
				Shipping costs and options related to a domestic shipping service.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ShippingInsuranceCost" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The insurance cost associated with shipping a single item with this shipping
						service. If the buyer bought more than one of this item, this proportional to
						QuantitySold.  If the item has not yet been sold, insurance information cannot
						be calculated and the value is 0.00. For calculated shipping only.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingServiceName" type="xs:token">
            <xs:annotation>
              <xs:documentation>
						A domestic shipping service offered for shipping the item (for example, UPS
						Ground). For flat and calculated shipping.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingServiceCost" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The basic shipping cost of the item.
						&lt;br&gt;
						&lt;br&gt;
						&lt;i&gt;Flat shipping:&lt;/i&gt; single-item listing: this matches (in)ShippingServiceCost;
						multi-quantity listing: with a request version of 665 or greater,
						this is the total of (in)ShippingServiceCost plus
						((in)ShippingServiceAdditionalCost times the number of items beyond the first
						item), and with a request version lower than 665, this is (in)ShippingServiceCost.
						&lt;br&gt;
						&lt;i&gt;Promotional shipping:&lt;/i&gt; For a request version lower than 665, promotional
						shipping has no effect on shipping costs. Otherwise: if the promotional
						shipping option is lower than other shipping services being offered, the
						savings is reflected in the returned shipping cost;
						the shipping service named Promotional Shipping Service (or whatever is
						the localized name for it) is included among the shipping services;
						if the promotional shipping cost is lower than the cost of other shipping
						services being offered, it is presented first in the list (the lowest shipping
						service cost is always presented first, regardless of whether there is
						promotional shipping).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingServiceAdditionalCost" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The cost of shipping each additional item beyond the first item (flat shipping).
						For single-item listings, if this is not provided, it is defaulted
						to zero. For multi-quantity listings, if this is not provided, it
						is set to the value of (in)ShippingServiceCost (unless the request
						version is lower than 665, in which case ShippingServiceAdditionalCost
						is required and is not defaulted).
						Not applicable to Half.com.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingServicePriority" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						Seller-preferred presentation order relative to other
						service options. Valid values: 1 (1st choice), 2 (2nd choice),
						3 (3rd choice). For flat and calculated shipping.
						Not applicable to Half.com.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpeditedService" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Indicates whether the service is an expedited shipping service. See Enabling Get It Fast.
						Not applicable to Half.com.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingTimeMin" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						The minimum guaranteed number of business days in which the shipping carrier
						can ship an item (not including the time it takes the seller to
						deliver the item to the shipping carrier). See Enabling Get It Fast.
						Not applicable to Half.com.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingTimeMax" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						The maximum guaranteed number of business days the shipping carrier will
						take to ship an item (not including the time it takes the seller to
						deliver the item to the shipping carrier). See Enabling Get It Fast.
						Not applicable to Half.com.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingSurcharge" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						An additional fee to charge US buyers who ship via UPS to Alaska, Hawaii
						or Puerto Rico. Can only be assigned a value for Parts and Accessories
						items on the eBay US and Motors sites. Only returned if set.
						If some transactions in an order have a surcharge, surcharge is added
						only for those transactions.
						Flat rate shipping only.
						&lt;br&gt;
						&lt;br&gt;
						With a request version of 665 or greater, total shipping cost includes any
						surcharge, and ShippingSurcharge is no longer returned as an individual tag.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ShipsTo" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						An international location or region to which the item may be shipped via this
						particular shipping service. Associated with the shipping service by the
						seller. Use GeteBayDetails to determine which locations are valid per site.
						These values are string equivalents of values found in ShippingRegionCodeType
						and CountryCodeType.
						Returned with request version 665 or greater, if set via Trading API.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EstimatedDeliveryMinTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>
						The minimum guaranteed date in which the item could reach the
						buyer's location.
						Not applicable to Half.com.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EstimatedDeliveryMaxTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>
						The maximum guaranteed date in which the item could reach the
						buyer's location.
						Not applicable to Half.com.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FastAndFree" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Indicates whether the service is fast in delivery to the end user (less than 4 days) and free for buyer.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ShippingTypeCodeType">
        <xs:annotation>
          <xs:documentation>
				The shipping cost model offered by the seller.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
          <xs:enumeration value="Flat">
            <xs:annotation>
              <xs:documentation>
						The flat rate shipping model: the seller establishes the cost of shipping and cost of
						shipping insurance, regardless of what any buyer-selected shipping service
						might charge the seller.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Calculated">
            <xs:annotation>
              <xs:documentation>
						The calculated shipping model: the posted cost of shipping is based on the
						seller-offered and buyer-selected shipping service, where the shipping costs
						are calculated by eBay and the shipping carrier based on the buyer's address,
						and any packaging/handling costs established by the seller are automatically
						rolled into the total.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Freight">
            <xs:annotation>
              <xs:documentation>
						The freight shipping model: the cost of shipping is determined by a third
						party, FreightQuote.com, based on the item location (zip code). Currently,
						Freight can only be specified on input via eBay Web site, not via API.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Free">
            <xs:annotation>
              <xs:documentation>
						Free is used when the seller is declaring that shipping is free for the buyer.
						Since Free cannot be selected via API, the seller has two options for
						signifying that shipping is free when listing an item:
						&lt;br&gt;
						- omit shipping details, mention in the item description that shipping is
						free, and set ShippingTermsInDescription to true
						&lt;br&gt;
						- select an arbitrary shipping service and set its shipping cost to 0, mention
						in the item description that shipping is free, and set
						ShippingTermsInDescription to true
						&lt;br&gt;
						The latter is a better way to communicate "free shipping" because eBay picks
						up the "0" cost and can more accurately identify shipping costs in search
						results.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NotSpecified">
            <xs:annotation>
              <xs:documentation>
						The seller did not specify the shipping type.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="FlatDomesticCalculatedInternational">
            <xs:annotation>
              <xs:documentation>
						The seller specified one or more flat domestic shipping services
						and one or more calculated international shipping services.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CalculatedDomesticFlatInternational">
            <xs:annotation>
              <xs:documentation>
						The seller specified one or more calculated domestic shipping services
						and one or more flat international shipping services.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CustomCode">
            <xs:annotation>
              <xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="SimpleItemArrayType">
        <xs:annotation>
          <xs:documentation>
				Container for a list of items. Can contain zero, one, or multiple
				SimpleItemType objects, each of which conveys the data for one item listing.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Item" type="ns:SimpleItemType">
            <xs:annotation>
              <xs:documentation>
						Contains data for an item listing.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SimpleItemType">
        <xs:annotation>
          <xs:documentation>
				Contains information for an item.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="BestOfferEnabled" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Whether the seller will accept a best offer for this item.
						This feature enables a buyer to make a lower-priced binding offer on a
						fixed price item. Buyers can't see how many offers have been made
						(only the seller can see this information). To make a best offer on a
						listing, use the eBay Web site.
					</xs:documentation>
              <xs:appinfo>
                <SeeLink>
                  <Title>(eBay Help) Making a Best Offer (for Buyers)</Title>
                  <URL>http://pages.ebay.com/help/buy/best-offer.html</URL>
                </SeeLink>
                <SeeLink>
                  <Title>(eBay DE Hilfe) Preis vorschlagen</Title>
                  <URL>http://pages.ebay.de/help/buy/best-offer.html</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BuyItNowPrice" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The Buy It Now price of the item, returned in the currency of the site
						on which the item was listed.
						&lt;br /&gt;
						&lt;br /&gt;
						For Chinese auctions (competitive bidding online auctions),
						Buy It Now lets a user purchase the item at a fixed price and
						end the auction immediately. On most sites, after a Chinese
						auction has bids, the listing is no longer eligible for Buy It Now.
						However, calls can return BuyItNowPrice if
						the seller originally listed the item with a Buy It Now option.
						Use the Item.BidCount field to determine whether an auction with
						Buy It Now has bids or not, and use Item.BuyItNowAvailable to see
						if the Buy It Now option is still available.
						&lt;br /&gt;
						&lt;br /&gt;
						Price fields are returned as doubles, not necessarily in the traditional
						monetary format of the site's country. For example, a US Dollar value might be
						returned as 3.880001 instead of 3.88.
						&lt;br&gt;
						&lt;br /&gt;
						For fixed-price (FixedPriceItem) and Store Inventory listings
						(StoresFixedPrice), see CurrentPrice or ConvertedCurrentPrice instead.
						&lt;br /&gt;
						&lt;br /&gt;
						Returned only if an item was listed with a Buy It Now option.
					</xs:documentation>
              <xs:appinfo>
                <SeeLink>
                  <Title>(GetSingleItem) Item.ListingType</Title>
                  <URL>GetSingleItem.html#Response.Item.ListingType</URL>
                </SeeLink>
                <SeeLink>
                  <Title>Item.BuyItNowAvailable</Title>
                  <URL>#Response.Item.BuyItNowAvailable</URL>
                  <!-- Intentionally starts with # -->
                </SeeLink>
                <SeeLink>
                  <Title>Item.ConvertedBuyItNowPrice</Title>
                  <URL>#Response.Item.ConvertedBuyItNowPrice</URL>
                  <!-- Intentionally starts with # -->
                </SeeLink>
                <SeeLink>
                  <Title>Item.ConvertedCurrentPrice</Title>
                  <URL>#Response.Item.ConvertedCurrentPrice</URL>
                  <!-- Intentionally starts with # -->
                </SeeLink>
                <SeeLink>
                  <Title>(eBay Help) Buying with Buy It Now</Title>
                  <URL>http://pages.ebay.com/help/buy/how-buy-bin.html</URL>
                </SeeLink>
                <SeeLink>
                  <Title>(eBay DE Hilfe) Kaufen mit Sofort-Kaufen</Title>
                  <URL>http://pages.ebay.de/help/buy/how-buy-bin.html</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Description" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The seller's description of the item, if any. This can include
						HTML markup and JavaScript. See &lt;a
						href="types/simpleTypes.html#string"&gt;string&lt;/a&gt;
						in Simple Schema Types.
						&lt;br&gt;
						&lt;br&gt;
						Some sellers don't specify their own listing description.
						Instead, they use a stock description from a catalog available
						through eBay. (GetSingleItem doesn't return this stock information.)
					</xs:documentation>
              <xs:appinfo>
                <MaxLength>500000 (some sites may allow more, but the exact number may vary)</MaxLength>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Description, TextDescription</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ItemID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The ID that uniquely identifies the item listing. eBay generates this ID
						when an item is listed. This ID is unique across all eBay sites.
					</xs:documentation>
              <xs:appinfo>
                <MaxLength>19 (Note: The eBay database specifies 38. Currently, Item IDs are usually 9 to 12 digits)</MaxLength>
                <SeeLink>
                  <Title>(GetSingleItem) Item.Variations</Title>
                  <URL>GetSingleItem.html#Response.Item.Variations</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <CallName>GetItemStatus</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BuyItNowAvailable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Indicates whether the item has an active Buy It Now option. On most sites, the
						Buy It Now option is disabled once a valid bid for the item has been accepted.
						To see if the item was listed with a Buy It Now option, see if the response
						includes Item.BuyItNowPrice.
						&lt;br /&gt;
						&lt;br /&gt;
						This field is returned only if the value is true.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetItemStatus</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ConvertedBuyItNowPrice" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The listing's Buy It Now Price (if any), converted into the currency
						of the site to which you sent this request.
						&lt;br /&gt;
						&lt;br /&gt;
						Price fields are returned as doubles, not necessarily in the traditional
						monetary format of the site's country. For example, a US Dollar value might be
						returned as 3.880001 instead of 3.88.
						&lt;br /&gt;
						&lt;br /&gt;
						Some eBay sites also support multi-item Buy It Now auctions, where you can buy
						multiple items from the same listing at a fixed price. See Item.BuyItNowAvailable.
						&lt;br&gt;
						&lt;br&gt;
						For fixed-price (FixedPriceItem) and Store Inventory listings (StoresFixedPrice), see
						CurrentPrice or ConvertedCurrentPrice instead.
						&lt;br&gt;
						&lt;br&gt;
						Returned only if an item was listed with a Buy It Now option.
						&lt;br&gt;
						&lt;br&gt;
						For active items, refresh this value every 24 hours to pick up the current
						conversion rates (if this value has been converted).
					</xs:documentation>
              <xs:appinfo>
                <SeeLink>
                  <Title>(GetSingleItem) Item.ListingType</Title>
                  <URL>GetSingleItem.html#Response.Item.ListingType</URL>
                </SeeLink>
                <SeeLink>
                  <Title>Item.BuyItNowAvailable</Title>
                  <URL>#Response.Item.BuyItNowAvailable</URL>
                  <!-- Intentionally starts with # -->
                </SeeLink>
                <SeeLink>
                  <Title>Item.BuyItNowPrice</Title>
                  <URL>#Response.Item.BuyItNowPrice</URL>
                  <!-- Intentionally starts with # -->
                </SeeLink>
                <SeeLink>
                  <Title>Item.ConvertedCurrentPrice</Title>
                  <URL>#Response.Item.ConvertedCurrentPrice</URL>
                  <!-- Intentionally starts with # -->
                </SeeLink>
                <SeeLink>
                  <Title>(eBay Help) Buying with Buy It Now</Title>
                  <URL>http://pages.ebay.com/help/buy/how-buy-bin.html</URL>
                </SeeLink>
                <SeeLink>
                  <Title>(eBay DE Hilfe) Kaufen mit Sofort-Kaufen</Title>
                  <URL>http://pages.ebay.de/help/buy/how-buy-bin.html</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EndTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>
						Time stamp (in &lt;a href="types/simpleTypes.html#dateTime"&gt;GMT&lt;/a&gt;)
						of when the listing is scheduled to end, or time stamp of the actual end time
						(if the item ended).
					</xs:documentation>
              <xs:appinfo>
                <SeeLink>
                  <Title>(GetSingleItem) Item.Variations</Title>
                  <URL>GetSingleItem.html#Response.Item.Variations</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>GetItemStatus</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StartTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>
						Time stamp (in &lt;a href="types/simpleTypes.html#dateTime"&gt;GMT&lt;/a&gt;) that
						eBay recorded as the moment that the listing was made available.
						The start time returned by a search call may vary
						from the value returned by GetSingleItem.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ViewItemURLForNaturalSearch" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						The URL to view this listing on eBay. This URL is optimized to support natural
						search. That is, this URL is designed to make items on eBay easier to find via
						popular Internet search engines. For example, this URL specifies the item title, and
						it is optimized for natural search: "_W0QQ" is like "?" (question mark), "QQ" is like
						"&amp;" (ampersand), and "Z" is like "=" (equals sign). You shouldn't modify the
						query syntax in your application. For example, eBay won't recognize the URL if you
						change QQ to ?.
					</xs:documentation>
              <xs:appinfo>
                <SeeLink>
                  <Title>(GetSingleItem) Item.Variations</Title>
                  <URL>GetSingleItem.html#Response.Item.Variations</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ListingType" type="ns:ListingTypeCodeType">
            <xs:annotation>
              <xs:documentation>
						The format of the listing, such as online auction, fixed price,
						or advertisement format.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Always</Returned>
                  <AllValuesExcept>Auction, Half</AllValuesExcept>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                  <AllValuesExcept>Auction, Half</AllValuesExcept>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                  <AllValuesExcept>Auction, Half</AllValuesExcept>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Location" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Physical location of the item, as specified by the seller.
						(This gives a general indication of where the item will be
						shipped or delivered from.)
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PaymentMethods" type="ns:BuyerPaymentMethodCodeType">
            <xs:annotation>
              <xs:documentation>
						Identifies the payment method (such as PayPal) the seller
						will accept when the buyer pays for the item. &lt;br&gt;
						&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
							If the seller only accepts PayPal, the buyer can still pay
							with a credit card. PayPal supports major credit cards.
						&lt;/span&gt;
						&lt;br&gt;
						Payment methods are not applicable to eBay Real Estate advertisement
						listings, or other Classified Ad format listings.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <AllValuesExcept>Escrow, PrePayDelivery, CODPrePayDelivery, PostalTransfer</AllValuesExcept>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <AllValuesExcept>Escrow, PrePayDelivery, CODPrePayDelivery, PostalTransfer</AllValuesExcept>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="GalleryURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						URL for a picture used as the Gallery thumbnail, if any. The image uses
						one of the following graphics formats: JPEG, BMP, TIF, or GIF. Only
						returned if the seller chose to show a gallery image.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PictureURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						Contains the URL for an image associated with the item, if any.
						Returned only if the seller included at least one picture
						in their listing. Note that this element does not return the URLs of
						pictures that the seller included in the Description via HTML IMG tags.
						&lt;br&gt;
						&lt;br&gt;
						Items listed the main eBay site can have a maximum of 12 picture URLs
						hosted by eBay Picture Services, or a maximum of 6 picture URLs hosted by a
						third party (such as the a photo site). Note that a listing can have up to
						24 picture URLs on the US eBay Motors site (for all vehicle listings),
						and on the eBay Canada Motors site.
						&lt;br&gt;
						&lt;br&gt;
						eBay uses the seller's first picture at the top of the listing's
						View Item page.
					</xs:documentation>
              <xs:appinfo>
                <MaxLength>150</MaxLength>
                <MaxOccurs>24</MaxOccurs>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PostalCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Postal code indicating the physical location of the item,
						as specified by the seller. (This gives a general indication of where
						the item will be shipped or delivered from.)
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PrimaryCategoryID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Numeric ID of the first (or only) category in which the item is listed.
						(Listings can appear in more than one category.)
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PrimaryCategoryName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Display name of the first (or only) category in which the item is
						listed. This is a fully qualified category breadcrumb
						(e.g., Computers &amp; Networking:Laptops, Notebooks).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Quantity" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						The number of items the seller is offering in the listing. (Subtract
						Item.QuantitySold from this value to calculate the number of items
						currently available for sale.)
						&lt;br&gt;
						&lt;br&gt;
						An online, comptetitive-bidding auction with a Quantity of 1 is referred to as a &lt;
						i&gt;Chinese&lt;/i&gt; auction. Basic fixed-price and Store Inventory listings can
						have a Quantity of 1 or more.
						&lt;br /&gt;
						&lt;br /&gt;
						The listing's current or Buy It Now price is the price of the item in the
						listing.
						&lt;br /&gt;
						&lt;br /&gt;
						&lt;span class="tablenote"&gt;&lt;strong&gt;Note:&lt;/strong&gt;
							A seller can also offer multiple items for sale with a single
							price for all the items. For example, instead of listing 10 lightbulbs
							for US 2.00 each, they might list 10 lightbulbs for USD 20.00 (where
							you have to buy all 10). This is called a "lot."
							&lt;br /&gt;
							&lt;br /&gt;
							If the listing includes a lot, Quantity does not specify the lot size; it
							reflects how many lots are being sold. For example, if the original listing
							included 5 lots of 10 lightbulbs each, Quantity would be 5.
						&lt;/span&gt;
						&lt;br /&gt;
					</xs:documentation>
              <xs:appinfo>
                <SeeLink>
                  <Title>Item.ListingType</Title>
                  <URL>#Response.Item.ListingType</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Seller" type="ns:SimpleUserType">
            <xs:annotation>
              <xs:documentation>
						Container for information about this listing's seller.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BidCount" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						The number of bids that have been placed on the item.
						&lt;br&gt;
						&lt;br&gt;
						On most sites, the Buy It Now Option becomes unavailable once an auction
						has a valid bid. Note that the bid must be above any reserve price.
						&lt;br&gt;
						&lt;br&gt;
						&lt;b&gt;FindPopularItems: &lt;/b&gt;For fixed-price listings, the BidCount
						value is the total number of items purchased so far (in the listing's
						lifetime).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <CallName>GetItemStatus</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ConvertedCurrentPrice" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The listing's Buy It Now Price (if any), converted into the currency
						of the site to which you sent this request.
						&lt;br /&gt;
						&lt;br /&gt;
						Price fields are returned as doubles, not necessarily in the traditional
						monetary format of the site's country. For example, a US Dollar value might be
						returned as 3.880001 instead of 3.88.
						&lt;br&gt;
						&lt;br /&gt;
						Some eBay sites also support multi-item Buy It Now auctions, where you can buy
						multiple items from the same listing at a fixed price. See Item.BuyItNowAvailable.
						&lt;br&gt;
						&lt;br&gt;
						For fixed-price (FixedPriceItem) and Store Inventory listings (StoresFixedPrice), see
						CurrentPrice or ConvertedCurrentPrice instead.
						&lt;br&gt;
						&lt;br&gt;
						Returned only if an item was listed with a Buy It Now option.
						&lt;br&gt;
						&lt;br&gt;
						For active items, refresh this value every 24 hours to pick up the current
						conversion rates (if this value has been converted).
					</xs:documentation>
              <xs:appinfo>
                <SeeLink>
                  <Title>(GetSingleItem) Item.ListingType</Title>
                  <URL>GetSingleItem.html#Response.Item.ListingType</URL>
                </SeeLink>
                <SeeLink>
                  <Title>Item.BuyItNowAvailable</Title>
                  <URL>#Response.Item.BuyItNowAvailable</URL>
                  <!-- Intentionally starts with # -->
                </SeeLink>
                <SeeLink>
                  <Title>Item.BuyItNowPrice</Title>
                  <URL>#Response.Item.BuyItNowPrice</URL>
                  <!-- Intentionally starts with # -->
                </SeeLink>
                <SeeLink>
                  <Title>Item.ConvertedCurrentPrice</Title>
                  <URL>#Response.Item.ConvertedCurrentPrice</URL>
                  <!-- Intentionally starts with # -->
                </SeeLink>
                <SeeLink>
                  <Title>(eBay Help) Buying with Buy It Now</Title>
                  <URL>http://pages.ebay.com/help/buy/how-buy-bin.html</URL>
                </SeeLink>
                <SeeLink>
                  <Title>(eBay DE Hilfe) Kaufen mit Sofort-Kaufen</Title>
                  <URL>http://pages.ebay.de/help/buy/how-buy-bin.html</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItemStatus</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItemStatus</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CurrentPrice" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The current price of the item in the currency of the site on which the item was
						listed. That is, CurrentPrice is in the original listing currency.
						&lt;br&gt;
						&lt;br&gt;
						For competitive-bidding auction listings, this is the current minimum bid price (if
						the listing has no bids) or the current high bid (if the listing has bids). This
						does not reflect the BuyItNow price.
						&lt;br&gt;
						&lt;br&gt;
						For Basic Fixed-Price (FixedPriceItem), Store Inventory
						(StoresFixedPrice), and Ad format (AdType) listings, this is the
						current fixed price.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="HighBidder" type="ns:SimpleUserType">
            <xs:annotation>
              <xs:documentation>
						The high bidder for comptetitive-bidding auctions that have ended and have a winning
						bidder. This indicates the user who purchased the item.
						&lt;br&gt;
						&lt;br&gt;
						Not returned for auctions that have received no bids, or for fixed price and
						Store Inventory listings that are still active.
					</xs:documentation>
              <xs:appinfo>
                <SeeLink>
                  <Title>Item.Quantity</Title>
                  <URL>#Response.Item.Quantity</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>GetItemStatus</CallName>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ListingStatus" type="ns:ListingStatusCodeType">
            <xs:annotation>
              <xs:documentation>
						Specifies a listing's status in eBay's processing workflow.
						If an item's EndTime is in the past, but no details about the
						buyer or high bidder are shown (and the user is not anonymous),
						use this listing status information to determine whether eBay has
						finished processing the listing.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <CallName>GetItemStatus</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="QuantitySold" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						Number of items purchased so far from this listing. (Subtract this value from
						Item.Quantity to calculate the number of items currently available for sale.)
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ReserveMet" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Indicates whether any bids on this item are greater than the seller's
						reserve price for the listing (if any).
						&lt;br&gt;
						&lt;br&gt;
						A reserve is the lowest price at which the seller is willing to sell
						the item. The reserve price is higher than the listing's opening bid
						(minimum bid) and lower than the Buy It Now price, if any.
						(The reserve price is only known to the seller.)
						Some sellers don't set a reserve at all. If a listing does have
						a reserve price, the highest bidder will only win
						the item if their bid is also above that price.
						&lt;br&gt;
						&lt;br&gt;
						Only returned for online auctions that have a reserve price. (Fixed price, Store
						Inventory, and classified ad listings don't have reserve prices.)
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetItemStatus</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ShipToLocations" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						An international location or region to which the seller is willing
						to ship this item. Returned only for items that have ShipToLocations
						specified.
						&lt;br&gt;
						&lt;br&gt;
						&lt;strong&gt;Applicable values&lt;/strong&gt;:
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Americas&lt;/p&gt;
							&lt;p class="edef"&gt;(North, South, or Latin America)&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Asia&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Caribbean&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Europe&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; EuropeanUnion&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; LatinAmerica&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; MiddleEast&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; NorthAmerica&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Oceania&lt;/p&gt;
								&lt;p class="edef"&gt;(Pacific region other than Asia)&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; SouthAmerica&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; WillNotShip&lt;/p&gt;
								&lt;p class="edef"&gt;(No shipping, buyer must pick up the item)&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Worldwide&lt;/p&gt;
								&lt;p class="edef"&gt;(Seller will ship worldwide)&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; 2-letter country identifier&lt;/p&gt;
								&lt;p class="edef"&gt;(See CountryCodeType for values)&lt;/p&gt;
					</xs:documentation>
              <xs:appinfo>
                <SeeLink>
                  <Title>CountryCodeType</Title>
                  <URL>types/CountryCodeType.html</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Site" type="ns:SiteCodeType">
            <xs:annotation>
              <xs:documentation>
						The name of the eBay site on which the item was originally listed.
						For example, if the item is listed on the eBay US site,
						the value would be US. If it's listed on the eBay Germany site,
						the value would be Germany.
						&lt;br&gt;
						&lt;br&gt;
						The listing's original site can affect the values of converted
						(localized) prices (when your request specifies a site
						that is different from the listing's site).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>FindProducts</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TimeLeft" type="xs:duration">
            <xs:annotation>
              <xs:documentation>
						Time left before the listing ends.
						The duration is represented in the ISO 8601 duration format (PnYnMnDTnHnMnS).
						For ended listings, the time left is PT0S (zero seconds).
					</xs:documentation>
              <xs:appinfo>
                <SeeLink>
                  <Title>(GetSingleItem) Item.Variations</Title>
                  <URL>GetSingleItem.html#Response.Item.Variations</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <CallName>GetItemStatus</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Title" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Name of the item as it appears in the listing or in search and
						browse results.
						&lt;br&gt;
						&lt;br&gt;
						&lt;b&gt;For US eBay Motors vehicles only:&lt;/b&gt; In item-retrieval
						calls (like GetSingleItem and GetMultipleItems), this value shows the
						vehicle Make and Model (e.g., "Buick : Skylark").
						&lt;br&gt;
						&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
							GetSingleItem does not return the same Item.Title
							value for US eBay Motors listings. Here's why:
							&lt;br&gt;
							&lt;br&gt;
							In general, GetSingleItem maps to eBay's View Item page. The eBay Motors
							Web site's View Item page shows two vehicle titles in the title bar: One
							title is a label based on the Year, Make, Model, and Submodel (e.g.,
							"1996 Buick Skylark Limited"). The model is included unless it's "Other"
							or unspecified. The submodel is included if the seller specified a
							submodel. The other title is a path based on the Make and Model (e.g.,
							"Buick : Skylark"). The Item.Title value in GetSingleItem maps to this
							path.
						&lt;/span&gt;
						&lt;br /&gt;
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingCostSummary" type="ns:ShippingCostSummaryType">
            <xs:annotation>
              <xs:documentation>
						Contains basic shipping-related costs for the item. If Item.Quantity
						is greater than 1, this is the shipping cost for one item.
						If the seller offers a choice of more than one shipping service
						(such as UPS Ground and USPS Media mail), this is the cost of the
						"first" shipping option (usually the lowest cost option).
						&lt;br&gt;
						&lt;br&gt;
						If a listing has shipping costs, use GetShippingCosts if you want to get
						more details about the services and costs that the seller is offering.
					</xs:documentation>
              <xs:appinfo>
                <SeeLink>
                  <Title>GetShippingCosts</Title>
                  <URL>GetShippingCosts.html</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: ShippingCosts</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ItemSpecifics" type="ns:NameValueListArrayType">
            <xs:annotation>
              <xs:documentation>
						Category-specific fields that the seller added to describe
						the listing. The names of these fields are different for items
						in different categories, so they're returned in a generic
						Name/Value structure. The field names are usually very well known
						within the category.
						&lt;br&gt;
						&lt;br&gt;
						For example, a book's item specifics might include a field like
						Publication Year=2007 (where Publication Year is returned in Name, and
						2007 is returned in Value), and a field like Format=Hardcover. But a car's
						item specifics would be different from a book's, with fields like Make=
						Toyota and Model=Prius. And a ticket's item specifics would be different
						from those of books and cars, with fields like EventType=Concerts and
						Venue=The Fillmore.
						&lt;br&gt;
						&lt;br&gt;
						One of the most common uses for item specifics is the item condition.
						&lt;br&gt;
						&lt;br&gt;
						Only returned if the seller included Item Specifics in the listing.&lt;br&gt;
						&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
						Starting in May 2010, many categories in Production and Sandbox
						will start returning the item condition in ConditionID and
						ConditionDisplayName instead, if the seller used ConditionID
						instead of ItemSpecifics.
						Monitor the eBay Developers Program
						newsletter for details and timing.&lt;/span&gt;
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: ItemSpecifics</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="HitCount" type="xs:long">
            <xs:annotation>
              <xs:documentation>
						The number of times the listing's View Item page has been viewed (as determined by
						eBay). Only returned if the seller has chosen to include a hit counter in the
						listing, and if the seller has also chosen to make the listing's hit count publicly
						visible. This field is retrieved asynchronously. If you believe the item has a
						publicly visible hit count, but this field is not returned, retry the call.
						&lt;br&gt;
						&lt;br&gt;
						Not applicable to Half.com
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Subtitle" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Subtitle of the item. Only returned if the seller included a
						subtitle for the listing.
						&lt;br&gt;
						&lt;br&gt;
						For US eBay Motors passenger vehicle, motorcycle, and "other vehicle"
						categories or listings in CA eBay Motors passenger vehicle and
						motorcycle categories, the seller's subtitle is only available
						in the Item.ItemSpecifics node. Call GetSingleItem with
						IncludeSelector=ItemSpecifics to retrieve a listing's Item Specifics.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PrimaryCategoryIDPath" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The fully qualified ID breadcrumb (path) of the first category.
						For example, if the primary category ID is 45678, and its parent
						category's ID is 123, the breadcrumb (path) would be 123:45678.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryCategoryID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						ID of the second category in which the item is listed. Returned only if
						the seller listed a second category.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryCategoryName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Name of the second category in which the item is listed. Returned only if
						the seller listed a second category.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SecondaryCategoryIDPath" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The fully qualified ID breadcrumb (path) of the second category. For example, if the
						secondary category ID is 45678, and its parent category's ID is 123, the breadcrumb
						(path) would be 123:45678. Returned only if the seller listed a second category.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Charity" type="ns:CharityType">
            <xs:annotation>
              <xs:documentation>
						Identifier for a Giving Works listing and the benefiting nonprofit charity
						organization.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="GermanMotorsSearchable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						The item is featured in eBay search results on the mobile.de partner site.
						Applicable to eBay Germany.
					</xs:documentation>
              <xs:appinfo>
                <NoCalls />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="GetItFast" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						A Get It Fast listing.
					</xs:documentation>
              <xs:appinfo>
                <NoCalls />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Gift" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						If true, a generic gift icon displays next the listing's title in search and
						browse pages.
					</xs:documentation>
              <xs:appinfo>
                <NoCalls />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PictureExists" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Returns true if the item has an associated picture. Not returned
						if value is false.
					</xs:documentation>
              <xs:appinfo>
                <NoCalls />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RecentListing" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Returns true if the item listing is no more than one day old. Not returned
						if value is false.
					</xs:documentation>
              <xs:appinfo>
                <NoCalls />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Storefront" type="ns:StorefrontType">
            <xs:annotation>
              <xs:documentation>
						Returns the seller's store information if the seller has an eBay store.
						Returns a blank store if the seller does not have an eBay storefront.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DistanceFromBuyer" type="ns:DistanceType">
            <xs:annotation>
              <xs:documentation>
						The distance of the item from the buyer. The DistanceFromBuyer unit (miles
						or kilometers) varies by site. If the country whose site you are
						searching, e.g. India, uses kilometers, then the DistanceFromBuyer unit is
						kilometers. Otherwise, e.g. if the country is US or UK, then the
						DistanceFromBuyer unit is miles. DistanceFromBuyer is returned if a
						value for PostalCode is supplied in the request.
					</xs:documentation>
              <xs:appinfo>
                <NoCalls />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Country" type="ns:CountryCodeType">
            <xs:annotation>
              <xs:documentation>
						Two-letter ISO 3166 country code to indicate the country where the item is located.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="WatchCount" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						Number of users who have placed the item on their Watch list.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Always</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="HalfItemCondition" type="ns:HalfItemConditionCodeType">
            <xs:annotation>
              <xs:documentation>
						Returns the Half.com condition code for the item. For example, "brand new,"
						"used," etc.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SellerComments" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Notes that the Seller made when they listed the item. Not returned if the Seller
						did not make any comments.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ReturnPolicy" type="ns:ReturnPolicyType">
            <xs:annotation>
              <xs:documentation>
						If a seller specified return policy details, then this container has fields with
						those details. The fields that can be returned in this container vary by site.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MinimumToBid" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						Smallest amount the next bid on the item can be. Returns same value as
						Item.StartPrice (if no bids have yet been placed) or CurrentPrice plus
						BidIncrement (if at least one bid has been placed). Only applicable to
						competitive-bid auction listings. Returns null for basic Fixed Price
						(FixedPriceItem),Store Inventory (StoresFixedPrice), and Ad type listings.
					</xs:documentation>
              <xs:appinfo>
                <MaxLength>4000</MaxLength>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ProductID" type="ns:ProductIDType">
            <xs:annotation>
              <xs:documentation>
						A prototype description of a well-known type of item, such as a popular book.
						&lt;br&gt;
						&lt;br&gt;
						When returned for GetSingleItem, is always of type Reference, and serves as a global
						reference ID for an eBay catalog product.
						&lt;br&gt;
						&lt;br&gt;
						When used as input, retrieves product details for one specific product. Specify the
						ID as a string, and use the type attribute to indicate the nature of the ID you are
						specifying.
						&lt;br&gt;
						&lt;br&gt;
						The request requires either QueryKeywords or
						ProductID, but these fields cannot be used together.
					</xs:documentation>
              <xs:appinfo>
                <MaxLength>4000</MaxLength>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="AutoPay" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						If true, the seller requires immediate payment for the item. If false (or
						not specified), immediate payment is not requested. Buyers must have a
						PayPal account to purchase items that require immediate payment.
						&lt;br&gt;&lt;br&gt;
						A seller can choose to require immediate payment for Fixed Price and Buy
						It Now listings, including eBay Stores Inventory listings. If a Buy It
						Now item ends as an auction (that is, if the Buy It Now option is removed
						due to bids being placed on the listing), the immediate payment
						requirement does not apply.
						&lt;br&gt;&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;strong&gt;Note:&lt;/strong&gt;
						The value of the AutoPay flag indicates the seller's stated preference
						only. It does not indicate whether the listing is still a candidate for
						purchase via immediate payment. For example, if a listing receives bids
						and no longer qualifies for immediate payment, the value of the AutoPay
						flag does not change.
						&lt;/span&gt;
						&lt;br&gt;
						Only applicable to items listed on PayPal-enabled sites and in categories
						that support immediate payment. Not applicable to Half.com.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BusinessSellerDetails" type="ns:BusinessSellerDetailsType">
            <xs:annotation>
              <xs:documentation>
						Returns the seller's business information. Set the SellerBusinessCodeType
						to 'Commercial' in the request to return the related information. This is only
						applicable for sites where Business Seller options are supported.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PaymentAllowedSite" type="ns:SiteCodeType">
            <xs:annotation>
              <xs:documentation>
						Enables you to view the sites on which an item can be purchased,
						based on the payment methods offered for the item.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="IntegratedMerchantCreditCardEnabled" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Indicates whether the item can be paid for through a payment gateway account. If
						IntegratedMerchantCreditCardEnabled is true, then integrated merchant credit card is
						enabled for credit cards because the seller has a payment gateway account. Therefore,
						if IntegratedMerchantCreditCardEnabled is true, and AmEx, Discover, or VisaMC is
						returned for an item, then on checkout, an online credit-card payment is processed
						through a payment gateway account.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <AllValuesExcept>Escrow, PrePayDelivery, CODPrePayDelivery, PostalTransfer</AllValuesExcept>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>FindProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Variations" type="ns:VariationsType">
            <xs:annotation>
              <xs:documentation>
						Variations are multiple similar (but not identical) items in a single fixed-price (or
						Store Inventory Format) listing. For example, a single listing could contain multiple
						items of the same brand and model that vary by color and size (like "Blue, Large" and
						"Black, Medium"). Each variation can have its own quantity and price. Only returned
						if the listing contains multiple variations.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="HandlingTime" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						Specifies the maximum number of business days the seller commits to for preparing an item to be shipped after receiving a cleared payment. When listing the item the seller sets this to a positive integer value (1, 2, 3, 4, 5, 10, 15, or 20) corresponding to the number of days. This time does not include the shipping time (the carrier's transit time). &lt;strong&gt;GetSingleItem&lt;/strong&gt; or &lt;strong&gt;GetMultipleItems&lt;/strong&gt; returns &lt;strong&gt;HandlingTime&lt;/strong&gt; only when shipping service options are specified for the item and the seller specified a handling time.
						&lt;br&gt;
						&lt;br&gt;
						Valid for flat and calculated shipping. Does not apply when there is no shipping, or when using local pickup only or freight shipping.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LotSize" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						A lot is a set of two or more similar items that must be purchased together in
						a single transaction. A listing can have multiple lots (instead of multiple
						items). When LotSize is specified, the listing price reflects the price of
						each lot (not each item within the lot). In this case, Quantity indicates the
						number of lots being listed, and LotSize indicates the number of items in each
						lot. (If a listing has no lots, Quantity indicates the number of separate
						items being listed.) Important: Lot items can be listed only in lot-enabled
						categories. GetCategories returns lot size disabled with a value of true
						for categories that do not support lots.
						&lt;br /&gt;&lt;br /&gt;
						Not applicable to Half.com.
					</xs:documentation>
              <xs:appinfo>
                <Max>100000</Max>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ConditionID" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
						Starting in early March 2010, this will be supported for a
						few test categories in the Sandbox.
						In May 2010, ConditionID will be supported for many categories in
						Production and Sandbox. Monitor the eBay Developers Program
						newsletter for details and timing.&lt;/span&gt;
						&lt;br&gt;
						&lt;br&gt;
						The numeric ID (e.g., 1000) for the item condition.
						Only returned when the seller specified ConditionID in their listing. Also see ItemSpecifics in case the seller used that
						field for the condition instead.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ConditionDisplayName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
						Starting in early March 2010, this will be supported for a
						few test categories in the Sandbox.
						In May 2010, ConditionDisplayName will be supported for
						many categories in Production and Sandbox.
						Monitor the eBay Developers Program
						newsletter for details and timing.&lt;/span&gt;
						&lt;br&gt;
						&lt;br&gt;
						The human-readable label for the item condition.
						Display names are localized for the site on
						which they're listed (not necessarily the site on which
						they're viewed).&lt;br&gt;
						&lt;br&gt;
						Most categories use the same display name for the
						same condition ID. Some categories may override the display name
						based on buyer expectations for items in the category.
						For example, condition ID 1000 could be called
						"New" in one category and "New with tags" in another.&lt;br&gt;
						&lt;br&gt;
						Behind the scenes, eBay's search engine uses the ID
						(not the display name) to determine whether items are
						new, used, or refurbished.&lt;br&gt;
						&lt;br&gt;
						Only returned when ConditionID is returned. Also see ItemSpecifics
						in case the seller used that field for the condition instead.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none, Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="QuantityAvailableHint" type="ns:QuantityAvailableHintCodeType">
            <xs:annotation>
              <xs:documentation>
						Indicates the type of message that will be returned describing the quantity
						available for the item.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="QuantityThreshold" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						The quantity threshold above which the seller prefers not to show the actual
						quantity available. Returned when the quantity available is greater than the
						value of quantity threshold. Currently, 10 is the only available value for
						this threshold.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DiscountPriceInfo" type="ns:DiscountPriceInfoType">
            <xs:annotation>
              <xs:documentation>
						This container provides information for an item that has a Strikethrough Price
						(STP) or a Minimum Advertised Price (MAP) discount pricing treatment. STP and MAP
						applies to only fixed price, BIN items. STP is available on the US, UK, and German
						(DE) sites, while MAP is available only on the US site.
						&lt;br &gt; &lt;br &gt;
						Discount pricing is available to qualified sellers (and their associated developers) who
						participate in the Discount Pricing Program. Once qualified, sellers receive a
						"sepcial account flag" (SAF) that allows them to apply Discount Pricing to both MSKU
						and Non-MSKU items.
					</xs:documentation>
              <xs:appinfo>
                <SeeLink>
                  <Title>Displaying Discount Pricing Information to Buyers</Title>
                  <URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=DiscountPricing</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ExcludeShipToLocation" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Use this field to specify an international country or region, or a special domestic
						location (for sites supporting this feature, currently US, UK, DE) to where you
						will not ship the associated item. On input, repeat this element for each
						location that you want to exclude as a shipping destination for your item.
						&lt;br&gt;&lt;br&gt;
						Set ShipToRegistrationCountry to true to have your ExcludeShipToLocation
						settings applied to your listing. The locations you have excluded display in
						the Shipping and Handling section of your item listing.
						&lt;br&gt;&lt;br&gt;
						If a buyer's primary ship-to location is a location that you have listed as
						an excluded ship-to location (or if the buyer does not have a primary ship-to
						location), they will receive an error message if they attempt to buy or place
						a bid on your item.
						&lt;br&gt;&lt;br&gt;
						The exclude ship-to location values are eBay regions and countries. To see
						the valid exclude ship-to locations for a specified site, call GeteBayDetails
						with DetailName set to ExcludeShippingLocationDetails. Repeat GeteBayDetails
						for each site on which you list.
						&lt;br&gt;&lt;br&gt;
						This field works in conjunction with Item.ShipToLocations to create a set of
						international countries and regions to where you will, and will not, ship.
						You can list a region in the ShipToLocations field, then exclude specific
						countries within that region with this field (for example, you can specify
						Africa in ShipToLocations, yet exclude Chad with a ExcludeShipToLocation
						setting). In addition, if your ShipToLocations is Worldwide, you can use
						this field to specify both regions and countries that you want to exclude
						from your shipping destinations.
						&lt;br&gt;&lt;br&gt;
						You can specify a default set of locations to where you will not ship in My
						eBay. If you create an Exclude Ship-To List, it is, by default, in effect
						when you list items. However, if you specify any value in this field on
						input, it nullifies the default settings in your Exclude Ship-To List. (If
						you use ExcludeShipToLocation when you list an item, you will need to list
						all the locations to where you will not ship the associated item, regardless
						of the default settings in your Exclude Ship-To List.)
						&lt;br&gt;&lt;br&gt;
						Specify NONE in this field to override the default Exclude Ship-To List you
						might have set up in My eBay and indicate that you do not want to exclude any
						shipping locations from the respective item listing.
						&lt;br&gt;&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;strong&gt;Note:&lt;/strong&gt;
						To enable your default Exclude Ship-To List, you must enable Exclude
						Shipping Locations and Buyer Requirements in your My eBay Site Preferences.
						For details, see the KnowledgeBase Article &lt;a href=
						"https://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=1495"
						&gt;HowTo: ExcludeShipToLocation&lt;/a&gt;.
						&lt;/span&gt;
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <Details>DetailLevel: Details</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>DetailLevel: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TopRatedListing" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						This field is only applicable to the US site, and will only be returned if the US
						seller qualifies as a Top-Rated Seller. The current requirements for US sellers to
						qualify as Top-Rated Sellers are:
						&lt;ul&gt;
							&lt;li&gt;100 or more selling transactions per year&lt;/li&gt;
							&lt;li&gt;Shipment tracking information provided to buyer within handling time
							for at least 90 percent of their listings&lt;/li&gt;
						&lt;/ul&gt;
						&lt;br/&gt;&lt;br/&gt;
						If this flag is returned for a listing, it indicates that the listing meets the new
						requirements for a Top-Rated Listing. A Top-Rated Listing must meet the following
						requirements:
						&lt;ul&gt;
							&lt;li&gt;14-day (or longer) return policy with Money Back option&lt;/li&gt;
							&lt;li&gt;1-day Handling Time or better&lt;/li&gt;
						&lt;/ul&gt;
						&lt;br/&gt;&lt;br/&gt;
						A new &lt;b&gt;Top-Rated Plus&lt;/b&gt; seal will start appearing on the View Item
						page for all Top-Rated Listings beginning in November 2012. This seal will
						replace the &lt;b&gt;Top-Rated Seller&lt;/b&gt; badge. US Top-Rated Sellers get a
						20 percent discount on their FVF for all listings that qualify as Top-Rated Listings.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="VhrUrl" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						The URL to the eBay Motors item's full Vehicle History Report.
						Only returned when the item has a Vehicle History Report.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="VhrAvailable" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						If true, the eBay Motors item has a Vehicle History Report
						associated with it.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="QuantityInfo" type="ns:QuantityInfo">
            <xs:annotation>
              <xs:documentation>
						This container consists of the &lt;b&gt;MinimumRemnantSet&lt;/b&gt;
						field, which sets the minimum amount of event tickets that can
						remain in the fixed-price listing's inventory after a buyer
						purchases one or more tickets (but not all) from the listing.
						&lt;br/&gt;&lt;br/&gt;
						This field is currently only applicable for event ticket listings in
						US and CA, but may apply to other categories in the future. It is
						only returned if set by the seller in the listing.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="UnitInfo" type="ns:UnitInfoType">
            <xs:annotation>
              <xs:documentation>
   					Contains information about the weight, volume or other quantity measurement of a listed item so buyers can compare per-unit prices. The European Union requires listings for certain types of products to include the price per unit. eBay uses this information and the item's listed price to calculate and display the unit price on eBay EU sites. 
   					&lt;br/&gt;&lt;br/&gt;
                  &lt;span class="tablenote"&gt;
                  &lt;strong&gt;Note:&lt;/strong&gt; This information is currently required only for business sellers, and only for listings with a Buy It Now option.
                  &lt;/span&gt;
   				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="GlobalShipping" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
   					Indicates whether eBay's Global Shipping Program is offered for the listing. If the value of &lt;strong&gt;GlobalShipping&lt;/strong&gt; is &lt;code&gt;true&lt;/code&gt;, the Global Shipping Program is the default international shipping option for the listing, and eBay designates an appropriate international shipping service. If the value of &lt;strong&gt;GlobalShipping&lt;/strong&gt; is &lt;code&gt;false&lt;/code&gt;, the seller is responsible for specifying an international shipping service for the listing if desired.
   				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
          <xs:element minOccurs="0" name="ConditionDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>
					This string field is used by the seller to more clearly describe the condition of
					items that are not brand new. This field becomes available to sellers starting in
					November 2012.
					&lt;br&gt;&lt;br&gt;
					The &lt;b&gt;ConditionDescription&lt;/b&gt; field will be available for all
					categories, including categories where the condition type is not applicable
					(e.g., Antiques). This field will be applicable for all item conditions except
					"New", "Brand New", "New with tags", and "New in box". If
					&lt;b&gt;ConditionDescription&lt;/b&gt; is used with these conditions (Condition
					IDs 1000-1499), eBay will simply ignore this field if included, and eBay will
					return a warning message to the user.
					&lt;br&gt;&lt;br&gt;
					This field should only be used to further clarify the condition of the used item.
					For example, "The right leg of the chair has a small scratch, and on the seat
					back there is a light blue stain about the shape and size of a coin." It should
					not be used for branding, promotions, shipping, returns, payment or other
					information unrelated to the condition of the item. Make sure that the condition
					type (&lt;b&gt;Item.ConditionID&lt;/b&gt;), condition description, item description
					(&lt;b&gt;Item.Description&lt;/b&gt;), and the listing's pictures do not contradict
					one another.
					&lt;br&gt;&lt;br&gt;
					The &lt;b&gt;ConditionDescription&lt;/b&gt; field is only returned if a condition
					description is specified in the listing.
				</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: none</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StorefrontType">
        <xs:annotation>
          <xs:documentation>
				Contains information related to the item in the context of
				a seller's eBay Store. Applicable for auction format, Basic Fixed Price,
				and Store Inventory format items listed by eBay Stores sellers.
 			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="StoreURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						The URL of the seller's eBay Store page. Not returned if the seller does not
						have an eBay store.
						&lt;br&gt;&lt;br&gt;
						FindProducts only returned a default URL at the time of this writing.
						FindHalfProducts returns the URL of the seller's Half.com Shop page.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StoreName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						The name of the seller's eBay Store. Not returned if the seller does not
						have an eBay store.
						&lt;br&gt;&lt;br&gt;
						FindProducts returns an empty value for all items at the time of this writing.
						FindHalfProducts returns the name of seller's Half.com Shop, which is the
						SellerID.
					</xs:documentation>
              <xs:appinfo>
                <MaxLength>200</MaxLength>
                <CallInfo>
                  <CallName>FindHalfProducts</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Items</Details>
                </CallInfo>
                <CallInfo>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Returned>Always</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TaxJurisdictionType">
        <xs:annotation>
          <xs:documentation>
				Tax-related details for a region or jurisdiction.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="JurisdictionID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Representative identifier for the jurisdiction. Typically an
						abbreviation (e.g. CA for California).
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SalesTaxPercent" type="xs:float">
            <xs:annotation>
              <xs:documentation>
						The tax percent to apply for a listing shipped to this
						jurisdiction. The value passed in is stored with a precision of
						3 digits after the decimal point (##.###).
						GetTaxTable: this tag has no value if the user's tax table has not been set.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ShippingIncludedInTax" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						Whether shipping costs are to be part of the base amount that is taxed.
						GetTaxTable: This tag is empty if the user did not previously provide information.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TaxTableType">
        <xs:annotation>
          <xs:documentation>
				Sales tax details for zero or more jurisdictions (states,
				provinces, etc).
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="TaxJurisdiction" type="ns:TaxJurisdictionType">
            <xs:annotation>
              <xs:documentation>
						Sales tax details for zero or more jurisdictions (states, provinces, etc).
						Information is only returned for the jurisdictions for which the user provided
						tax information. ShippingIncludedInTax and SalesTaxPercent are returned but
						are empty.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetShippingCosts</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UnitInfoType">
        <xs:annotation>
          <xs:documentation>
				This type provides information about the weight, volume or other quantity measurement of a listed item so buyers can compare per-unit prices. The European Union requires listings for certain types of products to include the price per unit. eBay uses this information and the item's listed price to calculate and display the unit price on eBay EU sites. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="UnitType" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Designation of size, weight, volume or count to be used to specify the unit quantity of the item. The value can be one of the following:
						&lt;br/&gt;&lt;br/&gt;
						&lt;code&gt;Kg 100g 10g L 100ml 10ml M M2 M3 Unit&lt;/code&gt;
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="UnitQuantity" type="xs:double">
            <xs:annotation>
              <xs:documentation>
						Number of units of size, weight, volume or count of the item in the specified unit type. eBay will divide the item price by this number to get the price per unit that will be displayed in the item listing for comparison purposes.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="UserIDType">
        <xs:annotation>
          <xs:documentation>
				An eBay ID that uniquely identifies a user. &lt;br&gt;&lt;br&gt;For GetAllBidders,
				some bidder information is anonymous, to protect bidders from fraud. If the seller makes this API call, the actual ids of all bidders on the seller's item will be returned. If a bidder makes this API call, the bidder's actual id will be returned, but information for all competing bidders or outside watchers will be returned as anonymized userIDs.
			</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string" />
      </xs:simpleType>
      <xs:complexType name="VATDetailsType">
        <xs:annotation>
          <xs:documentation>
				Container for eBay's Business User features. A business seller can choose
				to offer an item exclusively to bidders and buyers that also represent businesses.
				Only applicable when the item is listed in a B2B-enabled category.
				Currently, the eBay Germany (DE), Austria (AT), and Switzerland (CH) sites support
				B2B business features.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="BusinessSeller" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						If true, this indicates that the seller is a business user
						and intends to use listing features that are offered to
						business users only. Applicable only to business sellers
						residing in Germany, Austria, or Switzerland who are listing in
						a B2B VAT- enabled category on the eBay Germany (DE), Austria
						(AT), or Switzerland (CH) sites. The seller must have a valid
						VAT ID registered with eBay. This must be set to true if
						RestrictedToBusiness is true. It has no effect (and it's not returned)
						if RestrictedToBusiness is false. If an item was not qualified as a
						business item when originally listed, but meets the conditions for
						business items when the item is revised or relisted, the seller can
						convert the item to a business item by specifying the appropriate
						VAT details. See the eBay Web Services guide for more information and additional rules.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>GetItemRecommendations</CallName>
                  <CallName>RelistItem</CallName>
                  <CallName>ReviseItem</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <RequiredInput>Conditionally</RequiredInput>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RestrictedToBusiness" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
						If true, this indicates that the seller elects to offer the
						item exclusively to business users. If false (or not returned),
						this indicates that the seller elects to offer the item to all users.
						Applicable only to business sellers residing in Germany,
						Austria, or Switzerland who are listing in a B2B VAT-enabled
						category on the eBay Germany (DE), Austria (AT), or Switzerland
						(CH) sites. If this argument is true, the seller must have a
						valid VAT-ID registered with eBay, and BusinessSeller must also
						be true.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>GetItemRecommendations</CallName>
                  <CallName>RelistItem</CallName>
                  <CallName>ReviseItem</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <RequiredInput>No</RequiredInput>
                </CallInfo>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="VATPercent" type="xs:float">
            <xs:annotation>
              <xs:documentation>
						VAT rate for the item, if any. When the VATPercent is specified, the
						item's VAT information appears on the item's listing page. In
						addition, the seller can choose to print an invoice that
						includes the item's net price, VAT percent, VAT amount, and
						total price. Since VAT rates vary
						depending on the item and on the user's country of residence, a
						seller is responsible for entering the correct VAT rate; it is
						not calculated by eBay. To specify a VATPercent, a seller must
						have a VAT-ID registered with eBay and must be listing the item on a
						VAT-enabled site. Max applicable length is 6 characters,
						including the decimal (e.g., 12.345). The scale is 3 decimal places.
						(If you pass in 12.3456, eBay may round up the value to 12.346.)
						Note: The View Item page may display the precision to 2 decimal places
						with no trailing zeros. However, the full value you send in is stored.
					</xs:documentation>
              <xs:appinfo>
                <MaxLength>6</MaxLength>
                <Min>0</Min>
                <Max>30</Max>
                <CallInfo>
                  <CallName>AddItem</CallName>
                  <CallName>GetItemRecommendations</CallName>
                  <CallName>RelistItem</CallName>
                  <CallName>ReviseItem</CallName>
                  <CallName>VerifyAddItem</CallName>
                  <RequiredInput>Conditionally</RequiredInput>
                </CallInfo>
                <CallInfo>
                  <CallName>GetBidderList</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
                <CallInfo>
                  <CallName>GetItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>GetSingleItem</CallName>
                  <Details>DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll</Details>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="VATSite" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Displays the VatSite Id of the seller (in a business
						card format) as part of the data returned in GetSingleItem
						call if the seller's SellerBusinessCodeType is set to
						'Commercial'.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="VATID" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						Displays the VatSite Id of the seller (in a business
						card format) as part of the data returned in the GetSingleItem
						call if the seller's SellerBusinessCodeType is set to
						'Commercial'.
				  </xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Details</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VariationSpecificPictureSetType">
        <xs:annotation>
          <xs:documentation>
			At least one container is required (minOccurs="1") if Pictures container is present in the request.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="VariationSpecificValue" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						A value that is associated with VariationSpecificName. For example,
						suppose this set of pictures is showing blue shirts, and some of
						the variations include Color=Blue in their variation specifics.
						If VariationSpecificName is "Color", then VariationSpecificValue would be "Blue".
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="PictureURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						The URL of a picture that is associated with VariationSpecificValue.
						The first PictureURL is also used as the gallery picture for
						applicable variations.
						For example, if the picture set contains pictures of red shirts
						(i.e., VariationSpecificName=Color and VariationSpecificValue=Red),
						the first picture is used as the gallery picture for
						all the red shirt variations.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="GalleryURL" type="xs:anyURI">
            <xs:annotation>
              <xs:documentation>
						Not applicable.
					</xs:documentation>
              <xs:appinfo>
                <NoCalls />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VariationType">
        <xs:annotation>
          <xs:documentation>
			This element hold the values that define the SKU, StartPrice, Quantity, VariationDetails, and VariationSpecifics.
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="SKU" type="xs:string">
            <xs:annotation>
              <xs:documentation>
						An SKU (stock keeping unit) is an identifier defined by a seller.
						If you need to contact the seller to ask a question about a
						particular variation, you can mention the SKU (if present) to help
						the seller identify the variation you're interested in.
						Only returned if the seller chose to specify a SKU for the
						variation.
					</xs:documentation>
              <xs:appinfo>
                <MaxLength>70</MaxLength>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="StartPrice" type="ns:AmountType">
            <xs:annotation>
              <xs:documentation>
						The fixed price of all items identified by this variation.
						For example, a "Blue, Large" variation price could be USD 10.00,
						and a "Black, Medium" variation price could be USD 5.00.
						&lt;br&gt;
						&lt;br&gt;
						Each variation has its own price, and the prices can
						be different for each variation. This enables sellers to
						provide discounts on certain variations without affecting the price
						of others. Always returned) for multi-variation listings.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Quantity" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						The number of items available for sale that are associated
						with this variation.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Min>1</Min>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="VariationSpecifics" type="ns:NameValueListArrayType">
            <xs:annotation>
              <xs:documentation>
						A list of name/value pairs that uniquely identify the variation
						within the listing. All variations specify the same set of
						names, and each variation provides a unique combination of
						values for those names. For example, if the items vary by color and
						size, then every variation specifies Color and Size as names,
						and no two variations can specify the same combination of
						color and size values. Use this information to identify a
						variation of interest when you communicate with
						the seller.
						&lt;br&gt;
						&lt;br&gt;
						If your application supports PlaceOffer (in the Trading API),
						you use this information to uniquely identify the variation
						that you want to purchase.
					</xs:documentation>
              <xs:appinfo>
                <MinOccurs>2</MinOccurs>
                <MaxOccurs>5</MaxOccurs>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="QuantitySold" type="xs:int">
            <xs:annotation>
              <xs:documentation>
						Not used. See SellingStatus.QuantitySold instead.
					</xs:documentation>
              <xs:appinfo>
                <NoCalls />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SellingStatus" type="ns:SellingStatusType">
            <xs:annotation>
              <xs:documentation>
						Contains the variation's current price and quantity sold.
						Always returned when variations are present.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DiscountPriceInfo" type="ns:DiscountPriceInfoType">
            <xs:annotation>
              <xs:documentation>
						This container provides information for an item that has a Strikethrough Price
						(STP) or a Minimum Advertised Price (MAP) discount pricing treatment. STP and MAP
						applies to only fixed price, BIN items. STP is available on the US, UK, and German
						(DE) sites, while MAP is available only on the US site.
						&lt;br&gt;&lt;br&gt;
						Discount pricing is available to qualified sellers (and their associated developers) who
						participate in the Discount Pricing Program. Once qualified, sellers receive a
						"sepcial account flag" (SAF) that allows them to apply Discount Pricing to both MSKU
						and Non-MSKU items.
					</xs:documentation>
              <xs:appinfo>
                <SeeLink>
                  <Title>Displaying Discount Pricing Information to Buyers</Title>
                  <URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=DiscountPricing</URL>
                </SeeLink>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <CallName>FindPopularItems</CallName>
                  <Returned>Conditionally</Returned>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VariationsType">
        <xs:annotation>
          <xs:documentation>
					Variations are multiple similar (but not identical) items in a 
					single fixed-price (or Store Inventory Format) listing. 
					For example, a single listing could contain multiple items of the 
					same brand and model that vary by color and size (like "Blue, Large" and "Black, Medium"). Each variation can have its own quantity and 
					price. For example, a listing could include 10 "Blue, Large" 
					variations and 20 "Black, Medium" variations. 
			</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Variation" type="ns:VariationType">
            <xs:annotation>
              <xs:documentation>
						Contains data that distinguishes one variation from another.
						For example, if the items vary by color and size, each Variation
						node specifies a combination of one of those colors and 
						sizes.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Pictures" type="ns:PicturesType">
            <xs:annotation>
              <xs:documentation>
					Contains a set of pictures that correspond to one of the
					variation specifics, such as Color. For example, if a listing
					has blue and black color variations, a listing could specify the
					name Color as an organizing mechanism for all the pictures, 
					and then include a set of pictures for the blue variations and 
					another set of pictures for the black variations.&lt;br&gt;
					&lt;br&gt;
					&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt; 
					Only one Pictures node is currently returned for a listing.
					However, the node has been defined as unbounded (repeatable) in 
					the schema to allow for different use cases for some calls or sites 
					in the future.&lt;/span&gt;
					</xs:documentation>
              <xs:appinfo>
                <MaxOccurs>1</MaxOccurs>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="VariationSpecificsSet" type="ns:NameValueListArrayType">
            <xs:annotation>
              <xs:documentation>
						A list of all variation names and values that are defined on 
						the item. This could include values that were previously
						defined (but no longer for sale).&lt;br&gt;
						&lt;br&gt;
						eBay uses this list to configure variation selection widgets 
						that appear on eBay's View Item page. 
						For example, if Color and Size are names in the list, then
						eBay's View Item page displays Color and Size drop-down lists 
						to help a buyer choose a variation of interest.&lt;br&gt;
						&lt;br&gt;
						The order in which the names and values are returned
						matches the order in which the selection widgets appear on
						the View Item page.
						For example, if the names "Color", then "Size", and then 
						"Sleeve Style" are returned, the View Item page shows drop-down 
						lists with those labels in that order. For "Size", if the values
						returned are "S", "M", and then "L", the View Item page 
						shows the values in that order in the Size drop-down list.
					</xs:documentation>
              <xs:appinfo>
                <CallInfo>
                  <CallName>GetSingleItem</CallName>
                  <CallName>GetMultipleItems</CallName>
                  <Returned>Conditionally</Returned>
                  <Details>IncludeSelector: Variations</Details>
                </CallInfo>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="FindHalfProductsResponse">
    <wsdl:part name="FindHalfProductsResponse" element="ns:FindHalfProductsResponse" />
  </wsdl:message>
  <wsdl:message name="FindHalfProductsRequest">
    <wsdl:part name="FindHalfProductsRequest" element="ns:FindHalfProductsRequest" />
  </wsdl:message>
  <wsdl:message name="FindPopularItemsResponse">
    <wsdl:part name="FindPopularItemsResponse" element="ns:FindPopularItemsResponse" />
  </wsdl:message>
  <wsdl:message name="FindPopularItemsRequest">
    <wsdl:part name="FindPopularItemsRequest" element="ns:FindPopularItemsRequest" />
  </wsdl:message>
  <wsdl:message name="FindPopularSearchesResponse">
    <wsdl:part name="FindPopularSearchesResponse" element="ns:FindPopularSearchesResponse" />
  </wsdl:message>
  <wsdl:message name="FindPopularSearchesRequest">
    <wsdl:part name="FindPopularSearchesRequest" element="ns:FindPopularSearchesRequest" />
  </wsdl:message>
  <wsdl:message name="FindProductsResponse">
    <wsdl:part name="FindProductsResponse" element="ns:FindProductsResponse" />
  </wsdl:message>
  <wsdl:message name="FindProductsRequest">
    <wsdl:part name="FindProductsRequest" element="ns:FindProductsRequest" />
  </wsdl:message>
  <wsdl:message name="FindReviewsAndGuidesResponse">
    <wsdl:part name="FindReviewsAndGuidesResponse" element="ns:FindReviewsAndGuidesResponse" />
  </wsdl:message>
  <wsdl:message name="FindReviewsAndGuidesRequest">
    <wsdl:part name="FindReviewsAndGuidesRequest" element="ns:FindReviewsAndGuidesRequest" />
  </wsdl:message>
  <wsdl:message name="GetCategoryInfoResponse">
    <wsdl:part name="GetCategoryInfoResponse" element="ns:GetCategoryInfoResponse" />
  </wsdl:message>
  <wsdl:message name="GetCategoryInfoRequest">
    <wsdl:part name="GetCategoryInfoRequest" element="ns:GetCategoryInfoRequest" />
  </wsdl:message>
  <wsdl:message name="GetItemStatusResponse">
    <wsdl:part name="GetItemStatusResponse" element="ns:GetItemStatusResponse" />
  </wsdl:message>
  <wsdl:message name="GetItemStatusRequest">
    <wsdl:part name="GetItemStatusRequest" element="ns:GetItemStatusRequest" />
  </wsdl:message>
  <wsdl:message name="GetMultipleItemsResponse">
    <wsdl:part name="GetMultipleItemsResponse" element="ns:GetMultipleItemsResponse" />
  </wsdl:message>
  <wsdl:message name="GetMultipleItemsRequest">
    <wsdl:part name="GetMultipleItemsRequest" element="ns:GetMultipleItemsRequest" />
  </wsdl:message>
  <wsdl:message name="GetShippingCostsResponse">
    <wsdl:part name="GetShippingCostsResponse" element="ns:GetShippingCostsResponse" />
  </wsdl:message>
  <wsdl:message name="GetShippingCostsRequest">
    <wsdl:part name="GetShippingCostsRequest" element="ns:GetShippingCostsRequest" />
  </wsdl:message>
  <wsdl:message name="GetSingleItemResponse">
    <wsdl:part name="GetSingleItemResponse" element="ns:GetSingleItemResponse" />
  </wsdl:message>
  <wsdl:message name="GetSingleItemRequest">
    <wsdl:part name="GetSingleItemRequest" element="ns:GetSingleItemRequest" />
  </wsdl:message>
  <wsdl:message name="GetUserProfileResponse">
    <wsdl:part name="GetUserProfileResponse" element="ns:GetUserProfileResponse" />
  </wsdl:message>
  <wsdl:message name="GetUserProfileRequest">
    <wsdl:part name="GetUserProfileRequest" element="ns:GetUserProfileRequest" />
  </wsdl:message>
  <wsdl:message name="GeteBayTimeResponse">
    <wsdl:part name="GeteBayTimeResponse" element="ns:GeteBayTimeResponse" />
  </wsdl:message>
  <wsdl:message name="GeteBayTimeRequest">
    <wsdl:part name="GeteBayTimeRequest" element="ns:GeteBayTimeRequest" />
  </wsdl:message>
  <wsdl:portType name="ShoppingInterface">
    <wsdl:operation name="FindHalfProducts">
      <wsdl:input message="ns:FindHalfProductsRequest" />
      <wsdl:output message="ns:FindHalfProductsResponse" />
    </wsdl:operation>
    <wsdl:operation name="FindPopularItems">
      <wsdl:input message="ns:FindPopularItemsRequest" />
      <wsdl:output message="ns:FindPopularItemsResponse" />
    </wsdl:operation>
    <wsdl:operation name="FindPopularSearches">
      <wsdl:input message="ns:FindPopularSearchesRequest" />
      <wsdl:output message="ns:FindPopularSearchesResponse" />
    </wsdl:operation>
    <wsdl:operation name="FindProducts">
      <wsdl:input message="ns:FindProductsRequest" />
      <wsdl:output message="ns:FindProductsResponse" />
    </wsdl:operation>
    <wsdl:operation name="FindReviewsAndGuides">
      <wsdl:input message="ns:FindReviewsAndGuidesRequest" />
      <wsdl:output message="ns:FindReviewsAndGuidesResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetCategoryInfo">
      <wsdl:input message="ns:GetCategoryInfoRequest" />
      <wsdl:output message="ns:GetCategoryInfoResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetItemStatus">
      <wsdl:input message="ns:GetItemStatusRequest" />
      <wsdl:output message="ns:GetItemStatusResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetMultipleItems">
      <wsdl:input message="ns:GetMultipleItemsRequest" />
      <wsdl:output message="ns:GetMultipleItemsResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetShippingCosts">
      <wsdl:input message="ns:GetShippingCostsRequest" />
      <wsdl:output message="ns:GetShippingCostsResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetSingleItem">
      <wsdl:input message="ns:GetSingleItemRequest" />
      <wsdl:output message="ns:GetSingleItemResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetUserProfile">
      <wsdl:input message="ns:GetUserProfileRequest" />
      <wsdl:output message="ns:GetUserProfileResponse" />
    </wsdl:operation>
    <wsdl:operation name="GeteBayTime">
      <wsdl:input message="ns:GeteBayTimeRequest" />
      <wsdl:output message="ns:GeteBayTimeResponse" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ShoppingBinding" type="ns:ShoppingInterface">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="FindHalfProducts">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindPopularItems">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindPopularSearches">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindProducts">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindReviewsAndGuides">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCategoryInfo">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetItemStatus">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMultipleItems">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetShippingCosts">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSingleItem">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserProfile">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeteBayTime">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input>
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="Shopping">
    <wsdl:documentation>
      <Version>807</Version>
    </wsdl:documentation>
    <wsdl:port name="Shopping" binding="ns:ShoppingBinding">
      <wsdlsoap:address location="http://open.api.ebay.com/shopping" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>